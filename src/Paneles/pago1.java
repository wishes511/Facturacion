/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneles;

import DAO.daocfdi;
import DAO.daoempresa;
import DAO.daofactura;
import DAO.daoxmlpagos;
import Modelo.ConceptosES;
import Modelo.Detpagos;
import Modelo.Dfactura;
import Modelo.Empresas;
import Modelo.Formadepago;
import Modelo.Formateo_Nempresas;
import Modelo.Sellofiscal;
import Modelo.Usuarios;
import Modelo.abono;
import Modelo.convertirNumeros;
import Modelo.convertnum;
import Modelo.factura;
import Modelo.metodopago;
import Modelo.usocfdi;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import mx.sat.cfd40.timbrarXML;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author GATEWAY1-
 */
public class pago1 extends javax.swing.JPanel {

    public String nombre;
    public Connection sqlcfdi, sqlempresa;
    public Connection ACobranza, rcpt, cpt;
    public ArrayList<Formadepago> arrfpago = new ArrayList<>();
    public ArrayList<usocfdi> arruso = new ArrayList<>();
    public ArrayList<metodopago> arrmetodo = new ArrayList<>();
    public ArrayList<ConceptosES> arrcuentas = new ArrayList<>();
    public ArrayList<abono> arrabonos = new ArrayList<>();
    public ArrayList<abono> arrabonos17 = new ArrayList<>();
    public String empresa, empresacob;
    public Usuarios u;

    daocfdi dcfdi = new daocfdi();
    int estado = 0;
    int ciudad = 0;
    int pais = 0;

    /**
     * Creates new form Cliente1
     */
    public pago1() {
        initComponents();
//        iniciarconexiones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JtCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        JcMetodo = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        JcForma = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        JcUso = new javax.swing.JComboBox<>();
        Jlemp = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        JtCliente.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        JtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtCliente.setBorder(null);
        JtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtClienteMousePressed(evt);
            }
        });
        JtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Orden de pago");

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Metodo de Pago");

        JcMetodo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcMetodoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Forma de Pago");

        JcForma.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcFormaActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Uso Cfdi");

        JcUso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcUso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JcUso, 0, 336, Short.MAX_VALUE)
                            .addComponent(JcForma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JcMetodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(JcMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(JcForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(JcUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Jlemp.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        Jlemp.setForeground(new java.awt.Color(255, 0, 51));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar factura");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1199, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(JtCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Jlemp, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(Jlemp, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtClienteActionPerformed
        generatabla();
        generacombos();
    }//GEN-LAST:event_JtClienteActionPerformed

    private void JcMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcMetodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcMetodoActionPerformed

    private void JcFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcFormaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcFormaActionPerformed

    private void JcUsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcUsoActionPerformed

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed

    }//GEN-LAST:event_JtDetalleMousePressed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        if (arrabonos.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No ses puede hacer ningun movimiento sino se tiene alguna Orden Generada");
        } else {
            Formateo_Nempresas fn= new Formateo_Nempresas();
            java.util.Date date = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
            daofactura dfac = new daofactura();
            factura f = new factura();
            int folio = dfac.getmaxfolio(cpt, "PAG");
            double total = 0;
            String optest = "";
            f.setClaveusuario(u.getNombre());
            //Pagos encabezado
//            f.setImpiva16(((total / 1.16) * 0.16));// Nodo totales
//            f.setBaseiva16((total / 1.16));
//            f.setTotalpago16(total);
            f.setFormapago(arrfpago.get(JcForma.getSelectedIndex()).getFormapago());
            //Fin pagos encabezado
            f.setEmpresa(fn.getEmpresa(u.getTurno(), empresa));
            f.setSerie("PAG");
            f.setFolio(folio);//Obtiene y setea el foliomaximo de *documentos
            f.setFecha(sdf.format(date));
            f.setDescuento(0);
            f.setPedido("0");
            f.setFechasolicitado(sdf.format(date));
            f.setCondicion("contado");
            f.setFechaentrega(sdf.format(date));
            f.setSubtotal(0);
            f.setTotal(0);
            f.setTurno(u.getTurno());
            f.setFoliokardex(folio);
            f.setIdcliente(arrabonos.get(0).getC().getCvecliente());
            f.setNombre(arrabonos.get(0).getC().getNombre());
            f.setRfc(arrabonos.get(0).getC().getRfc());
            f.setCalle(arrabonos.get(0).getC().getCalle());
            f.setNexterior("0");
            f.setNinterior("0");
            f.setColonia(arrabonos.get(0).getC().getColonia());
            f.setMunicipio(arrabonos.get(0).getC().getCiudad());
            f.setEstado(arrabonos.get(0).getC().getEstado());
            f.setPais(arrabonos.get(0).getC().getPais());
            f.setCp(arrabonos.get(0).getC().getCp());
            f.setRegimen(arrabonos.get(0).getC().getRegimen());
            f.setObservaciones("");
            f.setTotalcajas(0);
            f.setCantidadxcaja(0);
            f.setTiposerie("PAGO");
            f.setMoneda("MXN");
            f.setTipocambio(1);
            f.setMetodopago(arrmetodo.get(JcMetodo.getSelectedIndex()).getMetodopago());
            f.setDescmetodop(arrmetodo.get(JcMetodo.getSelectedIndex()).getDescripcion());
            f.setUsocfdi(arruso.get(JcUso.getSelectedIndex()).getusocfdi());
            f.setLugarexpedicion(fn.getLugar_exp());
            f.setAgente(0);
            f.setPlazo(0);
            f.setTiporelacion("");
            f.setFoliofiscalorig("");
            //pago
            f.setMonto(total);
            f.setRfcctaemisora("");
            f.setCtaemisora("");
            f.setRfcctareceptor("");
            f.setCtareceptora("");
            f.setBancoemisor("");
            f.setBancoreceptor("");
            f.setOrdenpago(arrabonos.get(0).getOrdenpago());
            f.setFechapago(formatfecha(arrabonos.get(0).getFechapago()));
            formatfecha(formatfecha(arrabonos.get(0).getFechapago()));
            ArrayList<Detpagos> arrdetpago = new ArrayList<>();
            ArrayList<Detpagos> arrdetpago17 = new ArrayList<>();
            ArrayList<Dfactura> arrdet = new ArrayList<>();
            //Detallado del pago
            for (int i = 0; i < arrabonos.size(); i++) {
                Detpagos d = new Detpagos();
                d.setIddocumento(folio);
                d.setCantidad(1);
                d.setDescripcion("SERVICIOS DE FACTURACION");
                d.setCodigo("84111506");
                d.setUmedida("ACT");
                d.setPrecio(0);
                d.setMoneda("MXN");
                d.setMonto(arrabonos.get(i).getTotal());
                d.setRfcctaemisora("AB");
                d.setCtaemisora("12");
                d.setRfcctareceptora("BC");
                d.setCtareceptora("34");
                d.setUuid(arrabonos.get(i).getFolio());
                d.setFolio(arrabonos.get(i).getReferencia());
                d.setRef(arrabonos.get(i).getRef());
                d.setFormadedpago(arrfpago.get(JcForma.getSelectedIndex()).getFormapago());
                d.setMetodopago(arrmetodo.get(JcMetodo.getSelectedIndex()).getMetodopago());
//                d.setParcialidad(1);
                d.setParcialidad(arrabonos.get(i).getParcialidad());
//                d.setParcialidad(arrabonos.get(i).getParcialidad());
                d.setImportesaldoant(arrabonos.get(i).getAnterior());
                d.setImportepagado(arrabonos.get(i).getPago());
                d.setImpsaldoinsoluto(arrabonos.get(i).getSaldo());
                arrdetpago.add(d);
            }

            for (int i = 0; i < arrabonos17.size(); i++) {
                Detpagos d = new Detpagos();
                d.setIddocumento(folio);
                d.setCantidad(1);
                d.setDescripcion("SERVICIOS DE FACTURACION");
                d.setCodigo("84111506");
                d.setUmedida("ACT");
                d.setPrecio(0);
                d.setMoneda("MXN");
                d.setMonto(arrabonos17.get(i).getTotal());
                d.setRfcctaemisora("AB");
                d.setCtaemisora("12");
                d.setRfcctareceptora("BC");
                d.setCtareceptora("34");
                d.setUuid(arrabonos17.get(i).getFolio());
                d.setFolio(arrabonos17.get(i).getReferencia());
                d.setRef(arrabonos17.get(i).getRef());
                d.setFormadedpago("17");
                d.setMetodopago(arrmetodo.get(JcMetodo.getSelectedIndex()).getMetodopago());
                d.setParcialidad(2);
                d.setImportesaldoant(arrabonos17.get(i).getAnterior());
                d.setImportepagado(arrabonos17.get(i).getPago());
                d.setImpsaldoinsoluto(arrabonos17.get(i).getSaldo());
                arrdetpago17.add(d);
            }

//            valor a totales e iva
            f.setImpiva16(formatdecimal(((arrabonos.get(0).getTotal() / 1.16) * 0.16)));// Nodo totales
            f.setBaseiva16(formatdecimal((arrabonos.get(0).getTotal() / 1.16)));
            f.setTotalpago16(arrabonos.get(0).getTotal());
            if (!arrabonos17.isEmpty()) {
                f.setImpiva17(formatdecimal(((arrabonos17.get(0).getTotal() / 1.16) * 0.16)));// Nodo totales
                f.setBaseiva17(formatdecimal((arrabonos17.get(0).getTotal() / 1.16)));
                f.setTotalpago17(arrabonos17.get(0).getTotal());
            } else {
                f.setImpiva17(0);// Nodo totales
                f.setBaseiva17(0);
                f.setTotalpago17(0);
            }

            Dfactura df = new Dfactura();
            df.setPrecio(0);
            df.setImpuesto("01");
            df.setImporta(0);
            df.setDescripcion("Pago");
            df.setUmedida("ACT");
            df.setCodigo("84111506");
            df.setCantidad(0);
            arrdet.add(df);
            f.setArr(arrdet);
            f.setArrpagos(arrdetpago);
            f.setArrpagos17(arrdetpago17);
            //Insertar en bd
            int id = dfac.nuevopago(cpt, f, empresacob);
            if (id == 0) {
                JOptionPane.showMessageDialog(null, "Error al procesar pago, no se ha llevado a cabo ningun registro y timbrado");
            } else {
                f.setId(id);
                daoxmlpagos dx = new daoxmlpagos();
                dx.generarfac(f, cpt, sqlempresa);
                timbrarXML tim = new timbrarXML();
                Sellofiscal s = tim.timbrar(f.getSerie() + "_" + f.getFolio(), nombre, sqlempresa, f.getEmpresa());
                dfac.Updatesellofiscalpago(cpt, s, id);
                setreport(f.getFolio(), f.getRegimen());
                JOptionPane.showMessageDialog(null, "Proceso terminado: \n " + s.getEstado());
                limpiar();
                JtCliente.requestFocus();
            }

        }
    }//GEN-LAST:event_jLabel2MousePressed

    private void JtClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtClienteMousePressed
        JtCliente.setText("");
    }//GEN-LAST:event_JtClienteMousePressed

    private double formatdecimal(double cant) {
        int dato = 0;
        int punto = 0;
        boolean band = false;
        double resp;
        String c = String.valueOf(cant);
//        String cadena = "";
        for (int i = 0; i < c.length(); i++) {
//            Empieza a tomar datos despues del punto
            if (c.charAt(i) == '.') {
                band = true;
            }
            if (band) {
//                3 digitos de decimal para saber qe hacer con los decimales
                if (punto == 3) {
                    dato = Integer.parseInt(c.charAt(i) + "");
                    i = c.length();
                    break;
                }
//                cadena += c.charAt(i);
                punto++;
            }
        }
        if ((dato <= 5)) {
            resp = BigDecimal.valueOf(cant).setScale(2, RoundingMode.FLOOR).doubleValue();
        } else {
            resp = BigDecimal.valueOf(cant).setScale(2, RoundingMode.HALF_UP).doubleValue();
        }
        return resp;
    }

    private void limpiar() {
        if (!arrabonos.isEmpty()) {
            arrabonos.clear();
        }
        if (!arrabonos17.isEmpty()) {
            arrabonos17.clear();
        }
        JtCliente.setText("");
        generatabla();

    }

    private void generatabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Orden de pago");
        model.addColumn("Cliente");
        model.addColumn("Referencia");
        model.addColumn("Total");
        model.addColumn("Folio fiscal");
        model.addColumn("Saldo");
        model.addColumn("Pago");
        model.addColumn("Saldo anterior");
        model.addColumn("Cuenta");
        model.addColumn("Subcuenta");
        model.addColumn("Parcialidad");
        daofactura d = new daofactura();
        arrabonos = d.getabonospago(cpt, JtCliente.getText(), empresacob, 15);
        arrabonos17 = d.getabonospago(cpt, JtCliente.getText() + " 17", empresacob, 17);
        int tamaño = arrabonos.size() + arrabonos17.size();
//        model.setRowCount(arrabonos.size());
        formatfecha(arrabonos.get(0).getFechapago());
        model.setRowCount(tamaño);
        int aux = 0;
        for (int i = 0; i < arrabonos.size(); i++) {
            model.setValueAt(arrabonos.get(i).getOrdenpago(), i, 0);
            model.setValueAt(arrabonos.get(i).getC().getNombre(), i, 1);
            model.setValueAt(arrabonos.get(i).getReferencia(), i, 2);
            model.setValueAt(arrabonos.get(i).getTotal(), i, 3);
            model.setValueAt(arrabonos.get(i).getFolio(), i, 4);
            model.setValueAt(arrabonos.get(i).getSaldo(), i, 5);
            model.setValueAt(arrabonos.get(i).getPago(), i, 6);
            model.setValueAt(arrabonos.get(i).getAnterior(), i, 7);
            model.setValueAt(arrabonos.get(i).getCuenta(), i, 8);
            model.setValueAt(arrabonos.get(i).getSubcuenta(), i, 9);
            model.setValueAt(arrabonos.get(i).getParcialidad(), i, 10);
            aux++;
        }
        for (int i = 0; i < arrabonos17.size(); i++) {
            model.setValueAt(arrabonos17.get(i).getOrdenpago(), aux, 0);
            model.setValueAt(arrabonos17.get(i).getC().getNombre(), aux, 1);
            model.setValueAt(arrabonos17.get(i).getReferencia(), aux, 2);
            model.setValueAt(arrabonos17.get(i).getTotal(), aux, 3);
            model.setValueAt(arrabonos17.get(i).getFolio(), aux, 4);
            model.setValueAt(arrabonos17.get(i).getSaldo(), aux, 5);
            model.setValueAt(arrabonos17.get(i).getPago(), aux, 6);
            model.setValueAt(arrabonos17.get(i).getAnterior(), aux, 7);
            model.setValueAt(arrabonos17.get(i).getCuenta(), aux, 8);
            model.setValueAt(arrabonos17.get(i).getSubcuenta(), aux, 9);
            model.setValueAt(arrabonos17.get(i).getParcialidad(), aux, 10);
            aux++;
        }
        JtDetalle.setModel(model);
    }

    private void generacombos() {
        DefaultComboBoxModel metodo = new DefaultComboBoxModel();
        DefaultComboBoxModel forma = new DefaultComboBoxModel();
        DefaultComboBoxModel uso = new DefaultComboBoxModel();
        for (Formadepago arrfpago1 : arrfpago) {
            forma.addElement(arrfpago1.getFormapago() + " - " + arrfpago1.getConcepto());
        }
        for (metodopago arrmetodo1 : arrmetodo) {
            metodo.addElement(arrmetodo1.getMetodopago() + " - " + arrmetodo1.getDescripcion());
        }

        JcForma.setModel(forma);
        JcMetodo.setModel(metodo);
        JcUso.setModel(uso);
        int i = 0;
        for (usocfdi arruso1 : arruso) {
            uso.addElement(arruso1.getusocfdi() + " - " + arruso1.getDescripcion());
            if (arruso1.getusocfdi().equals("CP01")) {
                JcUso.setSelectedIndex(i);
            }
            i++;
        }
    }

    private String formatfecha(String fe) {
        String nfecha = "";
        for (int i = 0; i < fe.length() - 2; i++) {
            nfecha += (fe.charAt(i) == ' ') ? "T" : fe.charAt(i) + "";
        }
//        System.out.println(fe);
//        System.out.println(nfecha);
        return nfecha;
    }

    private boolean verificaint(String cad) {
        boolean resp = false;
        String patt = "[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private void setreport(int folio, String regimen) {
        try {
            daoempresa d = new daoempresa();
//            Identificar si es de ath o uptown
            DecimalFormat form = new DecimalFormat("####.##");//para los decimales
            String n = (empresa.equals("UptownCPT")) ? "2" : "1";
            String logo = (empresa.equals("UptownCPT")) ? "Uptown.jpg" : "AF.png";
            Empresas e = d.getempresarfc(sqlempresa, n);
            String lugar = (empresa.equals("UptownCPT")) ? e.getCp() : "BLVD LAS TORRES 516 DEL VALLE SAN FRANCISCO DEL RINCON GUANAJUATO " + e.getCp();
//             fin identificar empresa
            Map parametros = new HashMap();
//            Clase que contiene el numero convertido a caracter
            convertnum conv = new convertnum();
            convertirNumeros cnum = new convertirNumeros();

//            Agregar parametros al reporte
            parametros.put("folio", folio);
//            parametros.put("totalletra", conv.controlconversion(total).toUpperCase()); String.valueOf(total)
            parametros.put("totalletra", "");
            parametros.put("nombre", e.getNombre());
            parametros.put("rfc", e.getRfc());
            parametros.put("regimen", e.getRegimen());
            parametros.put("lugar", lugar);
            parametros.put("comprobante", e.getNumcertificado());
            parametros.put("logo", "C:\\af\\bin\\" + logo);// direcion predefinida, posible cambiar en un futuro
            parametros.put("metodo", arrmetodo.get(JcMetodo.getSelectedIndex()).getDescripcion());
            parametros.put("uso", arruso.get(JcUso.getSelectedIndex()).getDescripcion());
            parametros.put("serie", "PAG");
            parametros.put("regimencliente", regimen);

            JasperReport jasper = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportes/index_p.jasper"));
            JasperPrint print = JasperFillManager.fillReport(jasper, parametros, cpt);
            JasperViewer ver = new JasperViewer(print, false); //despliegue de reporte
            ver.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ver.setTitle("PAG " + folio);
            ver.setVisible(true);
//            Exportacion al archivo pdf
            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File(e.getXml() + "\\PAG_" + folio + ".pdf"));
            exporter.exportReport();
        } catch (JRException ex) {
            Logger.getLogger(fac1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcForma;
    private javax.swing.JComboBox<String> JcMetodo;
    private javax.swing.JComboBox<String> JcUso;
    private javax.swing.JLabel Jlemp;
    public javax.swing.JTextField JtCliente;
    private javax.swing.JTable JtDetalle;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
