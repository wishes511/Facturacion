/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneles;

import DAO.daocfdi;
import DAO.daoempresa;
import DAO.daofactura;
import DAO.daokardexrcpt;
import DAO.daoxml;
import Modelo.Ciudades;
import Modelo.Dfactura;
import Modelo.Empresas;
import Modelo.Estados;
import Modelo.Formadepago;
import Modelo.Formateodedatos;
import Modelo.Kardexrcpt;
import Modelo.Nocolision;
import Modelo.Paises;
import Modelo.Poliza;
import Modelo.Sellofiscal;
import Modelo.Usuarios;
import Modelo.cargo;
import Modelo.convertirNumeros;
import Modelo.convertnum;
import Modelo.factura;
import Modelo.metodopago;
import Modelo.usocfdi;
import Server.Serverprod;
import Server.Serverylite;
import java.io.IOException;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import mx.sat.cfd40.timbrarXML;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author GATEWAY1-
 */
public class fac2 extends javax.swing.JPanel {

    public String nombre, empresa, empresarcpt, empresacob;
    public Connection sqlcfdi, sqlempresa;
    public Connection ACobranza, rcpt, cpt;
    Serverylite slite = new Serverylite();
    Serverprod prod = new Serverprod();
    public ArrayList<Formadepago> arrfpago = new ArrayList<>();
    public ArrayList<usocfdi> arruso = new ArrayList<>();
    public ArrayList<metodopago> arrmetodo = new ArrayList<>();
    daocfdi dcfdi = new daocfdi();
    double descuentos;
    double impuestos;
    double subtotal;
    double total;
    public Usuarios u;
    String relacion = "";

    //kardex para fac
    ArrayList<Kardexrcpt> k = new ArrayList<>();
    ArrayList<Kardexrcpt> k0 = new ArrayList<>();
    //para factura relacionada
    ArrayList<cargo> arrcargo = new ArrayList<>();
    ArrayList<cargo> arrcargoseleccion = new ArrayList<>();//cargos seleccionados

    /**
     * Creates new form Cliente1
     */
    public fac2() {
        initComponents();
        JcPublico.setVisible(false);
//        iniciarconexiones();  Solo si se usa solo la clase si no se pasan directamente desde facturacion
// carga en combos los catalogos del sat

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        JtDescuento = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        JtCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        JtFolio1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        JcMetodo = new javax.swing.JComboBox<>();
        JcForma = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        JcUso = new javax.swing.JComboBox<>();
        Jlfp = new javax.swing.JLabel();
        JlUso = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        JcPublico = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Jlsub = new javax.swing.JLabel();
        JlDesc = new javax.swing.JLabel();
        JlIva = new javax.swing.JLabel();
        JlTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtObs = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        JsRel = new javax.swing.JScrollPane();
        JlRel = new javax.swing.JList<>();
        JlTcambio1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        JtDescuento.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JtDescuento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtDescuento.setText("0");
        JtDescuento.setBorder(null);
        JtDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtDescuentoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Descuento");

        JtCliente.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        JtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtCliente.setBorder(null);
        JtCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtClienteMousePressed(evt);
            }
        });
        JtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("# Cliente");

        jSeparator1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JtFolio1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JtFolio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtFolio1ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Metodo de Pago");

        JcMetodo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcMetodoActionPerformed(evt);
            }
        });

        JcForma.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcFormaActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Forma de Pago");

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Uso Cfdi");

        JcUso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcUso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JcMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JcForma, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Jlfp, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JcUso, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlUso, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JcMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(JcForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)
                        .addComponent(JcUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlfp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlUso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JtDetalle.setSelectionBackground(new java.awt.Color(213, 215, 250));
        JtDetalle.setSelectionForeground(new java.awt.Color(0, 0, 0));
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        JcPublico.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcPublico.setText("Sin iva");
        JcPublico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcPublicoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Subtotal");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Descuento");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Iva");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Total");

        Jlsub.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Jlsub.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlDesc.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlIva.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlsub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlIva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Jlsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JlTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar factura");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        JtObs.setColumns(20);
        JtObs.setRows(5);
        jScrollPane2.setViewportView(JtObs);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Observaciones");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Refresh_36729.png"))); // NOI18N
        jLabel3.setToolTipText("Actualiza datos");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        JlRel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        JlRel.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JsRel.setViewportView(JlRel);

        JlTcambio1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        JlTcambio1.setText("Relacion de factura");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(JlTcambio1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(JsRel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JlTcambio1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JsRel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/propagation_calculator_calc_6110.png"))); // NOI18N
        jLabel13.setToolTipText("Relacion de facturas");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel13MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JtDescuento)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(41, 41, 41)
                                .addComponent(JcPublico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JtCliente)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(JtFolio1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel13)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel2)
                        .addGap(48, 48, 48))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JtFolio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(JtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(JcPublico)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void cargacombos() {//catalogos de Sat
        DefaultComboBoxModel metodo = new DefaultComboBoxModel();
        DefaultComboBoxModel forma = new DefaultComboBoxModel();
        DefaultComboBoxModel uso = new DefaultComboBoxModel();
        for (Formadepago arrfpago1 : arrfpago) {
            forma.addElement(arrfpago1.getFormapago() + " - " + arrfpago1.getConcepto());
        }
        for (metodopago arrmetodo1 : arrmetodo) {
            metodo.addElement(arrmetodo1.getMetodopago() + " - " + arrmetodo1.getDescripcion());
        }
        for (usocfdi arruso1 : arruso) {
            uso.addElement(arruso1.getusocfdi() + " - " + arruso1.getDescripcion());
        }
        JcForma.setModel(forma);
        JcMetodo.setModel(metodo);
        JcUso.setModel(uso);
    }

    private void setcombos() {
        boolean band = false;
        boolean band1 = false;
        int row = JtFolio1.getSelectedIndex();
        for (int i = 0; i < arrfpago.size(); i++) {
            if (k.get(0).getFp().equals(arrfpago.get(i).getFormapago())) {
                JcForma.setSelectedIndex(i);
                band = true;
                break;
            }
        }

        for (int i = 0; i < arruso.size(); i++) {
            if (k.get(0).getUso().equals(arruso.get(i).getusocfdi())) {
                JcUso.setSelectedIndex(i);
                band1 = true;
                break;
            }
        }
        if (!band) {
            Jlfp.setText("No se encontro la forma de pago");
        }
        if (!band1) {
            JlUso.setText("No se encontro el uso cfdi");
        }
    }

    private void JtDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtDescuentoActionPerformed
        if (verificafloat(JtDescuento.getText())) {
//            generatabla();
        } else {
            JOptionPane.showMessageDialog(null, "Error, solo colocar numeros enteros en el descuento");
        }
    }//GEN-LAST:event_JtDescuentoActionPerformed

    private void JtClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtClienteMousePressed
        JtCliente.setText("");
    }//GEN-LAST:event_JtClienteMousePressed

    private void JtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtClienteActionPerformed
        String r = JtCliente.getText();
        daokardexrcpt dk = new daokardexrcpt();
        k0 = dk.getkardexfacsimple(rcpt, r, empresacob);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        int folio = 0;
        for (int i = 0; i < k0.size(); i++) {
            if (folio != k0.get(i).getFolio()) {
                model.addElement(k0.get(i).getFolio() + " - " + k0.get(i).getCli().getNombre());
            }
            folio = k0.get(i).getFolio();
        }
        JtFolio1.setModel(model);
        JtFolio1.requestFocus();
        cargacombos();
    }//GEN-LAST:event_JtClienteActionPerformed

    private void JcMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcMetodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcMetodoActionPerformed

    private void JcFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcFormaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcFormaActionPerformed

    private void JcUsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsoActionPerformed
        String regimen = k.get(0).getCli().getRegimen();
        String uso = arruso.get(JcUso.getSelectedIndex()).getusocfdi();
        verificaregimen(sqlcfdi, regimen, uso);
    }//GEN-LAST:event_JcUsoActionPerformed

    private void JtFolio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtFolio1ActionPerformed
        seleccionfolio();
    }//GEN-LAST:event_JtFolio1ActionPerformed

    private void JcPublicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcPublicoActionPerformed
//        generatabla();
    }//GEN-LAST:event_JcPublicoActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        if (!k.isEmpty()) {
            boolean a = verificafloat(JtDescuento.getText());
            boolean a1 = verificadetalle();
            if (!a) {
                JOptionPane.showMessageDialog(null, "Error, solo colocar numeros enteros en el descuento");
            }
            if (!a1) {
                JOptionPane.showMessageDialog(null, "Error, Verifica los precios");
            }
            System.out.println(a + " - " + a1);
            if (!a && !a1) {
                JtDescuento.requestFocus();
            } else {
                factura f = new factura();
                int row = 0;
                String condicion;
                java.util.Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
                daofactura dfac = new daofactura();
                ArrayList<Dfactura> arrf = new ArrayList<>();
                DecimalFormat formateador = new DecimalFormat("####.##");//para los decimales
                if (JcPublico.isSelected()) {//Setear impuestos
                    f.setIva(0);
                    f.setImpuestos(0);
                } else {
//                    f.setImpuestos(Double.parseDouble(formateador.format(impuestos)));
                    f.setIva(16);
                }
                // fin setear impuestos

                Nocolision n = new Nocolision();
                f.setFolio(dfac.getmaxfolio(rcpt, "FAC"));//Obtiene y setea el foliomaximo de *documentos
                n.setConnecxiones(rcpt, f.getFolio());
                n.start();
//                JOptionPane.showMessageDialog(null, "Espera al msj de Aceptacion de folio "+n.isAlive());
                do {

                } while (n.isAlive());

                f.setFolio(n.getfolio());
                f.setClaveusuario(u.getUsuario());
                f.setSerie("FAC");
//                f.setFolio(dfac.getmaxfolio(rcpt, "FAC"));//Obtiene y setea el foliomaximo de *documentos
                f.setFecha(sdf.format(date));

                f.setPedido(k.get(row).getPedido());
                f.setFechasolicitado(sdf.format(date));
                f.setFechaentrega(sdf.format(date));

                f.setFoliokardex(k.get(row).getFolio());
                f.setIdcliente(k.get(row).getCli().getCvecliente());
                f.setNombre(k.get(row).getCli().getNombre());
                f.setRfc(k.get(row).getCli().getRfc());
                f.setCalle(k.get(row).getCli().getCalle());
                f.setNexterior("0");
                f.setNinterior("0");
                f.setColonia(k.get(row).getCli().getColonia());
                f.setMunicipio(k.get(row).getCli().getCiudad());
                f.setEstado(k.get(row).getCli().getEstado());
                f.setPais(k.get(row).getCli().getPais());
                f.setCp(k.get(row).getCli().getCp());
                f.setRegimen(k.get(row).getCli().getRegimen());
                f.setObservaciones(JtObs.getText().toUpperCase());
                f.setTotalcajas(0);
                f.setCantidadxcaja(0);
                f.setTiposerie("FACTURA");
                f.setMoneda("MXN");
                f.setTipocambio(1);
                f.setFormapago(arrfpago.get(JcForma.getSelectedIndex()).getFormapago());
                f.setMetodopago(arrmetodo.get(JcMetodo.getSelectedIndex()).getMetodopago());
                f.setDescmetodop(arrmetodo.get(JcMetodo.getSelectedIndex()).getDescripcion());
                f.setUsocfdi(arruso.get(JcUso.getSelectedIndex()).getusocfdi());
                condicion = (f.getMetodopago().equals("PUE")) ? "Contado" : "Credito";
                f.setCondicion(condicion);
                f.setLugarexpedicion("36400");
                f.setAgente(k.get(row).getCli().getAgente());
                f.setPlazo(k.get(row).getCli().getPlazo());
                f.setMarca((k.get(row).getCli().getMarca().equals("1")) ? "O" : "T");
                f.setTiporelacion(relacion);
                f.setEmpresa(!(empresa.equals("UptownCPT")) ? "1" : "2");
                String folios = "";
                String facturas = "";
                ArrayList<String> arruuid = new ArrayList<>();
                if (!relacion.equals("")) {
                    for (int i = 0; i < arrcargoseleccion.size(); i++) {
                        if (i == 0) {
                            folios = arrcargoseleccion.get(i).getFoliofiscal();
                            facturas = arrcargoseleccion.get(i).getReferencia();
                        } else {
                            folios += ", " + arrcargoseleccion.get(i).getFoliofiscal();
                            facturas += ", " + arrcargoseleccion.get(i).getReferencia();

                        }
                        arruuid.add(arrcargoseleccion.get(i).getFoliofiscal());
                    }
                    f.setRefncredito(facturas);
                    f.setSeriefoliofiscalorig(folios);
                    f.setArruuid(arruuid);
                }
                double iva = 0.00;
                if (!JcPublico.isSelected()) {// verifica 
                    iva = 0.16;
                }
                int totalpares = 0;// Se usa para la tabla facturas
                impuestos = 0;
                descuentos = 0;
//                Detallado de productos selecionados
                for (int i = 0; i < k.size(); i++) {
                    Dfactura df = new Dfactura();
                    if (JtDetalle.getValueAt(i, 7).toString().equals("*")) {
                        double precio = Double.parseDouble(formateador.format(Double.parseDouble(JtDetalle.getValueAt(i, 3).toString())));
                        int tpares = k.get(i).getTotalpares();
                        double desc = Double.parseDouble(JtDescuento.getText()) / 100;
                        double descuento = Double.parseDouble(formateador.format((tpares * precio) * desc));
                        String estprice = JtDetalle.getValueAt(i, 8).toString().toUpperCase();
                        df.setRenglon(k.get(i).getRenglon());
                        df.setProducto(k.get(i).getP().getProducto());
                        df.setCantidad(tpares);
                        df.setDescripcion(estprice + " " + k.get(i).getP().getEstilo() + " " + k.get(i).getP().getDesccombinacion() + " " + k.get(i).getP().getCordesc());
                        df.setCodigo(k.get(i).getP().getCodigosat());
                        df.setUmedida("PR");
                        df.setDescumedida("PARES");
                        df.setPrecio(Double.parseDouble(formateador.format(precio)));
                        df.setBase(Double.parseDouble(formateador.format(precio * tpares)));
                        df.setImpuesto("002");
                        df.setTipofactor("Tasa");
//                        Este en especial por cuestion de centavos
                        String as = formateador.format(((tpares * precio) - descuento) * iva);
                        df.setImporta(Double.parseDouble(as));
//                        df.setImporta(Double.parseDouble(formateador.format(((tpares * precio) - descuento) * iva)));
//                        df.setDescuento(Double.parseDouble(formateador.format(descuento)));
                        String as1 = formateador.format(descuento);
                        df.setDescuento(Double.parseDouble(as1));

                        df.setTasaocuota(iva + "");
                        df.setC1(k.get(i).getC1());
                        df.setC2(k.get(i).getC2());
                        df.setC3(k.get(i).getC3());
                        df.setC4(k.get(i).getC4());
                        df.setC5(k.get(i).getC5());
                        df.setC6(k.get(i).getC6());
                        df.setC7(k.get(i).getC7());
                        df.setC8(k.get(i).getC8());
                        df.setC9(k.get(i).getC9());
                        df.setC10(k.get(i).getC10());
                        df.setC11(k.get(i).getC11());
                        df.setC12(k.get(i).getC12());
                        df.setC13(k.get(i).getC13());
                        df.setC14(k.get(i).getC14());
                        df.setAlmacen(k.get(i).getAlmacen());
                        df.setLinea(k.get(i).getP().getLinea());
                        df.setCorrida(k.get(i).getP().getCorrida());
                        df.setStock(k.get(i).getStock());
                        df.setEstilo(k.get(i).getP().getEstilo());
                        df.setCombinacion(k.get(i).getP().getCombinacion());
                        arrf.add(df);
                        totalpares += tpares;
                        impuestos += Double.parseDouble(as);
                        descuentos += Double.parseDouble(as1);
                    }
                }
                total = subtotal - descuentos + impuestos;
                f.setTotalpares(totalpares);
                f.setArr(arrf);
                f.setImpuestos(formatdecimal(impuestos));
                f.setDescuento(formatdecimal(descuentos));
                f.setSubtotal(formatdecimal(subtotal));
                f.setTotal(formatdecimal(total));
                //id del documento recien añadido

                ArrayList<Poliza> arrpoliza = dfac.getasientoscontable(ACobranza);
                ArrayList<Poliza> arrpolizas = new ArrayList<>();
                int conta = 0;
                Formateodedatos fd = new Formateodedatos();
                for (int i = 0; i < arrpoliza.size(); i++) {
                    String c = arrpoliza.get(i).getCuentalarga();
                    String cuenta = fd.convertcliente(c + k.get(row).getCli().getCvecliente());
                    Poliza p = new Poliza();
                    p.setCuenta(1);
                    p.setSub(5);
                    p.setFecha(sdf.format(date));
                    p.setFolio(f.getFolio() + " O");
                    p.setIdcliente(k.get(row).getCli().getCvecliente());
                    p.setIdentificacion("M");
                    p.setCuentalarga(cuenta);
                    p.setCa(arrpoliza.get(i).getCa());
                    p.setOrden(arrpoliza.get(i).getOrden());
                    p.setDiario("000");
                    p.setMext("            0.00");
                    p.setAcumulativo(arrpoliza.get(i).getAcumulativo());
                    p.setConcepto(arrpoliza.get(i).getConcepto() + f.getFolio() + " " + f.getMarca());
                    if (arrpoliza.get(i).getCuentalarga().equals("4005")) {
                        p.setReferencia(k.get(row).getCli().getClave() + "1" + fd.convierteagente(String.valueOf(k.get(row).getCli().getAgente())) + " 4.001");
                    } else {
                        p.setReferencia("4.001");
                    }
                    switch (conta) {
                        case 0:
                            p.setImporte(fd.ftotal(String.valueOf(formatdecimal(total))));
                            conta++;
                            break;
                        case 1:
                            p.setImporte(fd.ftotal(String.valueOf(formatdecimal(impuestos))));
                            conta++;
                            break;
                        case 2:
                            p.setImporte(fd.ftotal(String.valueOf(formatdecimal(subtotal))));
                            conta = 0;
                            break;
                    }
                    arrpolizas.add(p);
                }
                f.setArrpolizas(arrpolizas);

//                Tiene 3 procesos de commit, 1. la fatura. 2. los sellos y cadena original, 3. sellos fiscales
                if (arrf.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Error al realizar factura, intente capturar de nuevo");
                    vaciarcampos();
                } else {
                    int id = dfac.nuevafac(cpt, f, ACobranza, rcpt);
                    if (id != 0) {
                        System.out.println("Exito");
                        daoxml dx = new daoxml();
                        f.setId(id);
                        String tot = String.valueOf(total);

                        dx.generarfac(f, cpt, sqlempresa);
                        timbrarXML tim = new timbrarXML();
                        Sellofiscal s = tim.timbrar(f.getSerie() + "_" + f.getFolio(), nombre, sqlempresa, f.getEmpresa());
                        dfac.Updatesellofiscal(cpt, s, id);
                        setreport(f.getFolio(), f.getRegimen(), f.getMoneda());
                        JOptionPane.showMessageDialog(null, "Proceso terminado: \n " + s.getEstado());
                        vaciarcampos();
                        JtCliente.requestFocus();
                    } else {

                    }
                }

            }
        }
    }//GEN-LAST:event_jLabel2MousePressed

    /**
     * Funcion para determinar si la cantidad decimal es redondeada o truncada
     * ya que el sat maneja ambos y no solo uno porque si no aveces saldran mal
     * los calculos de los centavos
     *
     * @param cant cantidad en decimal
     * @return Cantidad redondeada o truncada
     */
    private double formatdecimal(double cant) {
        int dato = 0;
        int punto = 0;
        boolean band = false;
        double resp;
        String c = String.valueOf(cant);
//        String cadena = "";
        for (int i = 0; i < c.length(); i++) {
//            Empieza a tomar datos despues del punto
            if (c.charAt(i) == '.') {
                band = true;
            }
            if (band) {
//                3 digitos de decimal para saber qe hacer con los decimales
                if (punto == 3) {
                    dato = Integer.parseInt(c.charAt(i) + "");
                    i = c.length();
                    break;
                }
//                cadena += c.charAt(i);
                punto++;
            }
        }
        if ((dato <= 5)) {
            resp = BigDecimal.valueOf(cant).setScale(2, RoundingMode.FLOOR).doubleValue();
        } else {
            resp = BigDecimal.valueOf(cant).setScale(2, RoundingMode.HALF_UP).doubleValue();
        }
        return resp;
    }

    /**
     *
     * @param folio Folio de la factura
     * @param arrmetodo Array que contiene el metodo de pago
     * @param arruso Array que contiene el uso de cfdi
     * @see Despliegue y creacion del archivo pdf con los datos previamente
     * creados El reporte fue previamente creado en un modulo anterior que solo
     * creaba el pdf el proyecto se llama "Facturas"
     *
     */
    private void setreport(int folio, String regimen, String moneda) {
        try {
            daoempresa d = new daoempresa();
//            Identificar si es de ath o uptown
            String n = (empresa.equals("UptownCPT")) ? "2" : "1";
            String logo = (empresa.equals("UptownCPT")) ? "Uptown.jpg" : "AF.png";
            Empresas e = d.getempresarfc(sqlempresa, n);
//             fin identificar empresa
            Map parametros = new HashMap();
//            Clase que contiene el numero convertido a caracter
            convertnum conv = new convertnum();
            convertirNumeros cnum = new convertirNumeros();
            DecimalFormat formateador = new DecimalFormat("####.##");//para los decimales
            String numeros = formateador.format(total);
//            Agregar parametros al reporte
            parametros.put("folio", folio);
//            parametros.put("totalletra", conv.controlconversion(total).toUpperCase());
            parametros.put("totalletra", cnum.Convertir(numeros, true, moneda));
            parametros.put("nombre", e.getNombre());
            parametros.put("rfc", e.getRfc());
            parametros.put("regimen", e.getRegimen());
            parametros.put("lugar", e.getCp());
            parametros.put("comprobante", e.getNumcertificado());
            parametros.put("logo", "C:\\af\\bin\\" + logo);// direcion predefinida, posible cambiar en un futuro
            parametros.put("metodo", arrmetodo.get(JcMetodo.getSelectedIndex()).getDescripcion());
            parametros.put("uso", arruso.get(JcUso.getSelectedIndex()).getDescripcion());
            parametros.put("serie", "FAC");
            parametros.put("regimencliente", regimen);

            JasperReport jasper = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportes/index.jasper"));
            JasperPrint print = JasperFillManager.fillReport(jasper, parametros, cpt);
            JasperViewer ver = new JasperViewer(print, false); //despliegue de reporte
            ver.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ver.setTitle("FAC " + folio);
            ver.setVisible(true);
//            Exportacion al archivo pdf
            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File(e.getXml() + "\\FAC_" + folio + ".pdf"));
            exporter.exportReport();
        } catch (JRException ex) {
            Logger.getLogger(fac1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        String active = JtDetalle.getValueAt(JtDetalle.getSelectedRow(), 7).toString();
        if (active.equals("")) {
            JtDetalle.setValueAt("*", JtDetalle.getSelectedRow(), 7);
        } else {
            JtDetalle.setValueAt("", JtDetalle.getSelectedRow(), 7);
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        actualizaimportes();
    }//GEN-LAST:event_jLabel3MousePressed

    private void jLabel13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MousePressed
        int row = 0;
        k.get(row).getCli().getCvecliente();
        if (k.isEmpty() && JtFolio1.getSelectedIndex() == -1) {

        } else {
            FactsRel f = new FactsRel(null, true);
            daofactura df = new daofactura();
            arrcargo = df.getfactstoFACRel(cpt, k.get(row).getCli().getCvecliente() + "", empresacob);
            f.arrcargo = arrcargo;
            f.setVisible(true);
            arrcargoseleccion = f.arrcargoseleccion;
            if (!arrcargoseleccion.isEmpty()) {
//            DefaultListModel<String> model = new DefaultListModel<>();
//            for (cargo arrcargoseleccion1 : arrcargoseleccion) {
//                model.addElement(arrcargoseleccion1.getReferencia() + " - " + arrcargoseleccion1.getDescuento());
//            }
//            JlRel.setModel(model);
                llenalista();
                relacion = "07";
            }
        }
    }//GEN-LAST:event_jLabel13MousePressed

    private void llenalista() {
        DefaultListModel<String> model = new DefaultListModel<>();
        for (cargo arrcargoseleccion1 : arrcargoseleccion) {
            model.addElement(arrcargoseleccion1.getReferencia() + " - " + arrcargoseleccion1.getDescuento());
        }
        JlRel.setModel(model);
    }

    private void vaciarcampos() {
        if (!k.isEmpty()) {
            k.clear();
        }
        if (!k0.isEmpty()) {
            k0.clear();
        }
        if (!arrcargo.isEmpty()) {
            arrcargo.clear();
        }
        if (!arrcargoseleccion.isEmpty()) {
            arrcargoseleccion.clear();
        }
        JtDescuento.setText("0");
        JtObs.setText("");
        cargacombos();
        generatabla();
        JtCliente.setText("");
        JtCliente.requestFocus();
        llenalista();
    }

    private void seleccionfolio() {
        daokardexrcpt dk = new daokardexrcpt();
        String r = k0.get(JtFolio1.getSelectedIndex()).getFolio() + "";
        k = dk.getkardexfac(rcpt, r, empresacob);// nueva carga de datos
        System.out.println(k.size());
        generatabla();
        setcombos();
    }

    public final void generatabla() {//Tabla actualizable con respecto al descuento e iva
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Estilo");//0  estilo combinacion corrida
        model.addColumn("Clave SAT");//1
        model.addColumn("Pares");//2
        model.addColumn("Precio");//3
        model.addColumn("Descuento");//4
        model.addColumn("Impuestos");//5
        model.addColumn("Importe");//6
        model.addColumn("Activo");//7
        model.addColumn("Estilo price");//8
        double iva = 0;
        DecimalFormat formateador = new DecimalFormat("####.##");//para los decimales
        if (!JcPublico.isSelected()) {// verifica 
            iva = 0.16;
        }
        if (!k.isEmpty()) {// rellena de datos de acuerdo a las lineas que se capturen
            model.setRowCount(k.size());
            for (int i = 0; i < k.size(); i++) {
                int tpares = k.get(i).getTotalpares();
                double desc = Double.parseDouble(JtDescuento.getText()) / 100;
                double precio = k.get(i).getVenta();
                double descuento = (tpares * precio) * desc;
                model.setValueAt(k.get(i).getP().getEstilo() + " " + k.get(i).getP().getDesccombinacion() + " " + k.get(i).getP().getCordesc(), i, 0);
                model.setValueAt(k.get(i).getP().getCodigosat(), i, 1);
                model.setValueAt(k.get(i).getTotalpares(), i, 2);
                model.setValueAt(formateador.format(precio), i, 3);
                model.setValueAt(formateador.format(descuento), i, 4);
                model.setValueAt(formateador.format(((tpares * precio) - descuento) * iva), i, 5);
                model.setValueAt(formateador.format((tpares * precio) - descuento), i, 6);
                model.setValueAt("", i, 7);
                model.setValueAt("", i, 8);
                //suma de totales
                subtotal += tpares * precio;
            }
        }
        //Variables para manejo de totales
        descuentos = subtotal * Double.parseDouble(JtDescuento.getText()) / 100;
        impuestos = ((subtotal - descuentos) * iva);
        total = subtotal - descuentos + impuestos;
        //Solo para despliqgue de informacion
        JlIva.setText(formateador.format(impuestos));
        Jlsub.setText(formateador.format(subtotal));
        JlDesc.setText(formateador.format(descuentos));
        JlTotal.setText(formateador.format(total));
        JtDetalle.setModel(model);
    }

    private void actualizaimportes() {
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        double iva = 0;
        boolean resp = true;
        if (!JcPublico.isSelected()) {// verifica 
            iva = 0.16;
        }
        DecimalFormat formateador = new DecimalFormat("####.##");
        if (!k.isEmpty()) {// rellena de datos de acuerdo a las lineas que se capturen
            for (int i = 0; i < k.size(); i++) {
                String act = JtDetalle.getValueAt(i, 7).toString();// Se obtiene el valor del activo
                if (!verificafloat(JtDetalle.getValueAt(i, 3).toString())) {// que no se pase algo que no sea un numero
                    JOptionPane.showMessageDialog(null, "Error, Verifica los precios");
                    JtDetalle.setValueAt("0", i, 3);
                    resp = false;
                    break;
                } else {
                    if (act.equals("*")) {// tomara en cuanta solo los que estan activos
                        int tpares = k.get(i).getTotalpares();
                        double desc = Double.parseDouble(JtDescuento.getText()) / 100;
                        double precio = Double.parseDouble(JtDetalle.getValueAt(i, 3).toString());
                        double descuento = (tpares * precio) * desc;
                        JtDetalle.setValueAt(precio, i, 3);
                        JtDetalle.setValueAt(formateador.format(descuento), i, 4);
                        JtDetalle.setValueAt(formateador.format(((tpares * precio) - descuento) * iva), i, 5);
                        JtDetalle.setValueAt(formateador.format((tpares * precio)), i, 6);
                        //suma de totales
                        descuentos += Double.parseDouble(formateador.format(descuento));
//                        subtotal += Double.parseDouble(formateador.format((tpares * precio)));
                        subtotal += tpares * precio;
//                        impuestos += Double.parseDouble(formateador.format(((tpares * precio) - descuento) * iva));
                        impuestos += ((tpares * precio) - descuento) * iva;
                    }
                }
            }
            if (resp) {// Si, y solo si es un entero o decimal
                //Variables para manejo de totales
//                descuentos = subtotal * Float.parseFloat(JtDescuento.getText()) / 100;
                //impuestos =(float) ((subtotal - descuentos) * iva);
                double desc = Double.parseDouble(JtDescuento.getText()) / 100;
                descuentos = subtotal * desc;
                impuestos = (subtotal - descuentos) * iva;
                total = impuestos + subtotal - descuentos;
//                total = subtotal - descuentos + impuestos;
//                System.out.println(total + " -- " + impuestos + " -- " + subtotal + " -- " + descuentos+" --"+tot);
//                System.out.println(impuestos);
                //Solo para despliqgue de informacion
                JlIva.setText(formateador.format(impuestos));
                Jlsub.setText(formateador.format(subtotal));
                JlDesc.setText(formateador.format(descuentos));
                JlTotal.setText(formateador.format(total));
            }
        }
    }

    private boolean verificaint(String cad) {
        boolean resp = false;
        String patt = "[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificafloat(String cad) {
        boolean resp = false;
        String patt = "[0-9]+||[0-9]+.[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificadetalle() {
        boolean resp = true;
        for (int i = 0; i < k.size(); i++) {
            String precio = JtDetalle.getValueAt(i, 3).toString();
            if (!verificafloat(precio)) {
                resp = false;
                break;
            }
        }
        return resp;
    }

    private boolean verificaregimen(Connection cfdi, String regimen, String uso) {
        daocfdi df = new daocfdi();
        boolean a = true;
        String resp = df.getRegimenxuso(cfdi, regimen, uso);
        if (resp.equals("")) {
            JOptionPane.showMessageDialog(null, "Error, El regimen del cliente no se puede usar con este uso cfdi");
            a = false;
        }
        return a;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcForma;
    private javax.swing.JComboBox<String> JcMetodo;
    private javax.swing.JCheckBox JcPublico;
    private javax.swing.JComboBox<String> JcUso;
    private javax.swing.JLabel JlDesc;
    private javax.swing.JLabel JlIva;
    private javax.swing.JList<String> JlRel;
    private javax.swing.JLabel JlTcambio1;
    private javax.swing.JLabel JlTotal;
    private javax.swing.JLabel JlUso;
    private javax.swing.JLabel Jlfp;
    private javax.swing.JLabel Jlsub;
    private javax.swing.JScrollPane JsRel;
    public javax.swing.JTextField JtCliente;
    private javax.swing.JTextField JtDescuento;
    private javax.swing.JTable JtDetalle;
    private javax.swing.JComboBox<String> JtFolio1;
    private javax.swing.JTextArea JtObs;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
