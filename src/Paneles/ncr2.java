/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneles;

import DAO.daocfdi;
import DAO.daofactura;
import DAO.daokardexrcpt;
import DAO.daoxml;
import Modelo.Ciudades;
import Modelo.ConceptosES;
import Modelo.Dfactura;
import Modelo.Estados;
import Modelo.Formadepago;
import Modelo.Kardexrcpt;
import Modelo.Paises;
import Modelo.cargo;
import Modelo.factura;
import Modelo.metodopago;
import Modelo.relacion;
import Modelo.usocfdi;
import Server.Serverprod;
import Server.Serverylite;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GATEWAY1-
 */
public class ncr2 extends javax.swing.JPanel {

    public String nombre, empresa;
    public Connection sqlcfdi, sqlempresa;
    public Connection ACobranza, rcpt, cpt;
    Serverylite slite = new Serverylite();
    Serverprod prod = new Serverprod();
    public ArrayList<Formadepago> arrfpago = new ArrayList<>();
    public ArrayList<usocfdi> arruso = new ArrayList<>();
    public ArrayList<metodopago> arrmetodo = new ArrayList<>();
    public ArrayList<ConceptosES> arrcuentas = new ArrayList<>();
    public ArrayList<relacion> arrrelacion = new ArrayList<>();
    ArrayList<cargo> arrcargo = new ArrayList<>();
    ArrayList<cargo> arrcargoseleccion = new ArrayList<>();//cargos seleccionados
    daocfdi dcfdi = new daocfdi();
    DefaultTableModel model = new DefaultTableModel();
    float descuentos;
    float impuestos;
    float subtotal;
    float total;

    //kardex para fac
    ArrayList<Kardexrcpt> k = new ArrayList<>();
    ArrayList<Kardexrcpt> k0 = new ArrayList<>();

    /**
     * Creates new form Cliente1
     */
    public ncr2() {
        initComponents();
        cargatabla();
//        iniciarconexiones();  Solo si se usa solo la clase si no se pasan directamente desde facturacion
// carga en combos los catalogos del sat

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        pop = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        JtCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        JcMetodo = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        JcForma = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        JcUso = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        JtRelacion = new javax.swing.JComboBox<>();
        JcCuenta = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Jlsub = new javax.swing.JLabel();
        JlDesc = new javax.swing.JLabel();
        JlIva = new javax.swing.JLabel();
        JlTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtObs = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Jlcargofac = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        JlNombre = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        pop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                popMousePressed(evt);
            }
        });

        jMenuItem1.setText("Elimina linea");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        pop.add(jMenuItem1);

        setBackground(new java.awt.Color(255, 255, 255));

        JtCliente.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        JtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtCliente.setBorder(null);
        JtCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtClienteMousePressed(evt);
            }
        });
        JtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("# Cliente");

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Metodo de Pago");

        JcMetodo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcMetodoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Forma de Pago");

        JcForma.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcFormaActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Uso Cfdi");

        JcUso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcUso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsoActionPerformed(evt);
            }
        });

        JtRelacion.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JtRelacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtRelacionActionPerformed(evt);
            }
        });

        JcCuenta.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcCuentaActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel20.setText("Cuentas");

        jLabel19.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel19.setText("Relacion");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 165, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JcCuenta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JtRelacion, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JcCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(5, 5, 5))
                    .addComponent(JtRelacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JcMetodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JcForma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(JcUso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(10, 10, 10)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(JcMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(JcForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(JcUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripcion", "clave sat", "Descuento"
            }
        ));
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        jPanel3.setBackground(new java.awt.Color(10, 78, 160));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Subtotal");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Descuento");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Iva");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Total");

        Jlsub.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Jlsub.setForeground(new java.awt.Color(255, 255, 255));
        Jlsub.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlDesc.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlDesc.setForeground(new java.awt.Color(255, 255, 255));
        JlDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlIva.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlIva.setForeground(new java.awt.Color(255, 255, 255));
        JlIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlTotal.setForeground(new java.awt.Color(255, 255, 255));
        JlTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlsub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlIva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Jlsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JlTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar Nota de Credito");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        JtObs.setColumns(20);
        JtObs.setRows(5);
        jScrollPane2.setViewportView(JtObs);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Observaciones");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Refresh_36729.png"))); // NOI18N
        jLabel3.setToolTipText("Actualiza datos");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel3MouseReleased(evt);
            }
        });

        Jlcargofac.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(Jlcargofac);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Facturas en Uso");

        JlNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JlNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/new.png"))); // NOI18N
        jLabel5.setToolTipText("Actualiza datos");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/flat-style-circle-save_icon-icons.com_66942.png"))); // NOI18N
        jLabel4.setToolTipText("Actualiza datos");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(JlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JtCliente)
                                    .addComponent(JlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane3)
                                .addGap(36, 36, 36)))))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cargatabla() {
        model.addColumn("Descripcion");
        model.addColumn("Clave sat");
        model.addColumn("Descuento");
        model.addColumn("Cantidad");
        JtDetalle.setModel(model);
    }

    public void cargacombos() {//catalogos de Sat
        DefaultComboBoxModel metodo = new DefaultComboBoxModel();
        DefaultComboBoxModel forma = new DefaultComboBoxModel();
        DefaultComboBoxModel uso = new DefaultComboBoxModel();
        DefaultComboBoxModel relacion = new DefaultComboBoxModel();
        DefaultComboBoxModel cuentas = new DefaultComboBoxModel();
        for (Formadepago arrfpago1 : arrfpago) {
            forma.addElement(arrfpago1.getFormapago() + " - " + arrfpago1.getConcepto());
        }
        for (metodopago arrmetodo1 : arrmetodo) {
            metodo.addElement(arrmetodo1.getMetodopago() + " - " + arrmetodo1.getDescripcion());
        }
        for (usocfdi arruso1 : arruso) {
            uso.addElement(arruso1.getusocfdi() + " - " + arruso1.getDescripcion());
        }
        for (relacion arruso1 : arrrelacion) {
            relacion.addElement(arruso1.getRelacion() + " - " + arruso1.getConcepto());
        }
        JcForma.setModel(forma);
        JcMetodo.setModel(metodo);
        JcUso.setModel(uso);
        JtRelacion.setModel(relacion);
        // Cuentas
        daofactura d = new daofactura();
        arrcuentas = d.getalcuentas(ACobranza, "60");
        for (ConceptosES arruso1 : arrcuentas) {
            cuentas.addElement(arruso1.getCuenta() + ", " + arruso1.getSubcuenta() + " - " + arruso1.getNombre());
        }
        JcCuenta.setModel(cuentas);

    }

    private void JtClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtClienteMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtClienteMousePressed

    private void JtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtClienteActionPerformed
        String r = JtCliente.getText();
        daofactura df = new daofactura();
        arrcargo = df.getfactstoncr(ACobranza, r, empresa);// cpt a usar
        if (arrcargo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay cargos con ese cliente");
            JtCliente.setText("");
            JtCliente.requestFocus();
        } else {
            JlNombre.setText(arrcargo.get(0).getNombre());
            cargacombos();
            cargacargos();
        }

    }//GEN-LAST:event_JtClienteActionPerformed

    private void JcMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcMetodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcMetodoActionPerformed

    private void JcFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcFormaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcFormaActionPerformed

    private void JcUsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcUsoActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        setfactura();
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        actualizaimportes();
    }//GEN-LAST:event_jLabel3MousePressed

    private void JtRelacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtRelacionActionPerformed
        relaciones();
    }//GEN-LAST:event_JtRelacionActionPerformed

    private void JcCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcCuentaActionPerformed

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        if (!arrcargo.isEmpty()) {
            cargacargos();
        }
    }//GEN-LAST:event_jLabel4MousePressed

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
        String rel = arrrelacion.get(JtRelacion.getSelectedIndex()).getRelacion();
        if (!rel.equals("03")) {
            JOptionPane.showMessageDialog(null, "No puedes usar este tipo de relacion para agregar renglones, cambialo e intentalo de nuevo");
            JtRelacion.requestFocus();
        } else {
            String[] rowt = {"", "", "", ""};
            model.addRow(rowt);
            JtDetalle.setModel(model);
        }


    }//GEN-LAST:event_jLabel5MousePressed

    private void popMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popMousePressed

    }//GEN-LAST:event_popMousePressed

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        if (evt.getButton() == 3) {// activar con clic derecho
            pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        model.removeRow(JtDetalle.getSelectedRow());
        System.out.println("Elimine linea y total de lineas " + model.getRowCount());

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jLabel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseReleased

    private void relaciones() {
        String se = arrrelacion.get(JtRelacion.getSelectedIndex()).getRelacion();
        if (se.equals("03")) {
            JtObs.setText("");
        }
        if (se.equals("01")) {
            JtObs.setText("SERVICIOS DE FACTURACION");
            JtObs.requestFocus();
        }
        if (se.equals("07")) {
            JtObs.setText("SERVICIOS DE FACTURACION APLICACION DE ANTICIPO");
            JtObs.requestFocus();
        }
    }

    private void actualizaempresa() {
        arrcargoseleccion.clear();
        JtCliente.setText("");
        JtCliente.requestFocus();
        llenalistafac();
    }

    private void cargacargos() {
        if (!arrcargo.isEmpty()) {
            Cargosncr p = new Cargosncr(null, true);
//        p.setAlwaysOnTop(true);
            p.arrcargo = arrcargo;
            p.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            p.setVisible(true);
            arrcargoseleccion = p.arrcargoseleccion;
            llenalistafac();
            actualizaimportes();
            relaciones();
//            if (!p.prod.getDesccombinacion().equals("")) {
//                System.out.println("");
//                System.out.println("aqui");
//            }
        }

    }

    private void llenalistafac() {
        DefaultListModel<String> model = new DefaultListModel<>();
        for (cargo arrcargoseleccion1 : arrcargoseleccion) {
            model.addElement(arrcargoseleccion1.getReferencia() + " - " + arrcargoseleccion1.getDescuento());
        }
        Jlcargofac.setModel(model);
    }

    private void setfactura() {

        if (arrcargoseleccion.isEmpty()) {
            JtCliente.requestFocus();
        } else {
            float totalrev = 0;
            //Se obtiene el total de las facturas que anter se capturaron
            for (int i = 0; i < arrcargoseleccion.size(); i++) {
                totalrev += arrcargoseleccion.get(i).getDescuento();
            }
            System.out.println(total + " " + totalrev);
            if (totalrev != total) {
                JOptionPane.showMessageDialog(null, "El total de las lineas debe de ser igual al seleccionado en las facturas");
                JtDetalle.requestFocus();
            } else {
                factura f = new factura();
//            int row = JtFolio1.getSelectedIndex();
                String condicion;
                java.util.Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
                daofactura dfac = new daofactura();
                ArrayList<Dfactura> arrf = new ArrayList<>();
                DecimalFormat formateador = new DecimalFormat("####.##");//para los decimales

                // fin setear impuestos
                f.setImpuestos(Float.parseFloat(formateador.format(impuestos)));
                f.setTiporelacion(arrrelacion.get(JtRelacion.getSelectedIndex()).getRelacion());
                f.setIva(16);
                condicion = "Contado";
//                f.setEmpresa((empresa.equals("CPT")) ? "1" : "2");
                f.setEmpresa("1");
                f.setClaveusuario("prueba");
                f.setSerie("NCR");
                f.setFolio(dfac.getmaxncr(cpt));//Obtiene y setea el foliomaximo NCR de *documentos
                f.setFecha(sdf.format(date));
                f.setDescuento(0);
                f.setPedido("''");
                f.setFechasolicitado(sdf.format(date));
                f.setCondicion(condicion);
                f.setFechaentrega(sdf.format(date));
                f.setSubtotal(subtotal);
                f.setTotal(total);
                f.setIdcliente(arrcargoseleccion.get(0).getCliente());
                f.setNombre(arrcargoseleccion.get(0).getNombre());
                f.setRfc(arrcargoseleccion.get(0).getRfc());
                f.setCalle(arrcargoseleccion.get(0).getCalle());
                f.setNexterior("0");
                f.setNinterior("0");
                f.setColonia(arrcargoseleccion.get(0).getColonia());
                f.setMunicipio(arrcargoseleccion.get(0).getMunicipio());
                f.setEstado(arrcargoseleccion.get(0).getEstado());
                f.setPais(arrcargoseleccion.get(0).getPais());
                f.setCp(arrcargoseleccion.get(0).getCp());
                f.setRegimen(arrcargoseleccion.get(0).getRegimen());
                f.setTotalcajas(0);
                f.setCantidadxcaja(0);
                f.setTiposerie("NOTA DE CREDITO");
                f.setMoneda("MXN");
                f.setTipocambio(1);
                f.setFormapago(arrfpago.get(JcForma.getSelectedIndex()).getFormapago());
                f.setMetodopago(arrmetodo.get(JcMetodo.getSelectedIndex()).getMetodopago());
                f.setDescmetodop(arrmetodo.get(JcMetodo.getSelectedIndex()).getDescripcion());
                f.setUsocfdi(arruso.get(JcUso.getSelectedIndex()).getusocfdi());
                f.setAgente(arrcargoseleccion.get(0).getAgente());
                f.setPlazo(arrcargoseleccion.get(0).getPlazo());
                f.setMarca(arrcargoseleccion.get(0).getRef());
                f.setLugarexpedicion("36400");
                f.setCuentaabono(arrcuentas.get(JcCuenta.getSelectedIndex()).getCuenta());
                f.setSubabono(arrcuentas.get(JcCuenta.getSelectedIndex()).getSubcuenta());
                f.setDesccuenta(arrcuentas.get(JcCuenta.getSelectedIndex()).getNombre());
                String folios = "";
                String facturas = "";
                //Mandar un string con los folios fiscales
                for (int i = 0; i < arrcargoseleccion.size(); i++) {
                    if (i == 0) {
                        folios = arrcargoseleccion.get(i).getFoliofiscal();
                        facturas = arrcargoseleccion.get(i).getReferencia();
                    } else {
                        folios += "," + arrcargoseleccion.get(i).getFoliofiscal();
                        facturas += ", " + arrcargoseleccion.get(i).getReferencia();
                    }
                }

                f.setRefncredito(facturas);
                f.setObservaciones(JtObs.getText().toUpperCase() + " " + facturas);
                f.setFoliofiscalorig(folios);
                String rel = arrrelacion.get(JtRelacion.getSelectedIndex()).getRelacion();// seobtiene tipo de relacion
                int tamaño = (!rel.equals("03")) ? 1 : model.getRowCount();// Numero de conceptos de acuerdo a la relacion
                ArrayList<String> arruuid = new ArrayList<>();
                ArrayList<cargo> arrayc = new ArrayList<>();
                float sumatotal = 0;
                //control interno de las lineas de seleccion
                int x = 0;
                //Tamaño define el numero de renglones que el ciclo tomara
                float extra = 0;
                for (int i = 0; i < tamaño; i++) {
                    Dfactura df = new Dfactura();
                    float precio;
                    float preciointerno;
                    int pares;
                    String descripcion;
                    String codigosat;
                    String umedida;
                    float impuesto;
                    float pre = 0;
                    float precioantes = 0;

                    if (rel.equals("03")) {//numero de renglones tambien para detalle docs
                        cargo car = new cargo();
                        //Asignar en variables los campos
                        //Precio se usara para el despliqgue de la NCR y desglose de iva
                        pre = Float.parseFloat(JtDetalle.getValueAt(i, 2).toString());
                        precioantes = Float.parseFloat(formateador.format((pre)));
                        pares = Integer.parseInt(JtDetalle.getValueAt(i, 3).toString());

                        precio = Float.parseFloat(formateador.format((pre) * pares));

                        //Precio interno para valores enteros y sin desglose de iva
                        preciointerno = Float.parseFloat(JtDetalle.getValueAt(i, 2).toString()) * pares;
                        descripcion = JtDetalle.getValueAt(i, 0).toString();
                        codigosat = JtDetalle.getValueAt(i, 1).toString();
                        umedida = "PR";
                        float dato = Float.parseFloat(formateador.format(sumatotal + preciointerno + (precio * 0.16)));
                        float desc = arrcargoseleccion.get(x).getDescuento();
                        System.out.println("precio " + preciointerno + ", desc" + desc + ", " + dato + ", sumatotal " + sumatotal);
                        //Hacer operaciones con los importes y resetear si aplica la suma total
                        if (dato >= desc) {

                            car.setFoliofiscal(folios);
                            car.setCuenta(arrcargoseleccion.get(x).getCuenta());
                            car.setSubcuenta(arrcargoseleccion.get(x).getSubcuenta());
                            car.setCliente(arrcargoseleccion.get(x).getCliente());
                            car.setReferencia(arrcargoseleccion.get(x).getReferencia());
                            car.setFecha(arrcargoseleccion.get(x).getFecha());
                            car.setDescnota(descripcion);
                            car.setCantidad(pares);
                            //Condiciones para saber si la suma de importes son igual o distintos al de la factura
                            if (dato == desc) {
//                                car.setDescuento(preciointerno + extra);// importe a descontar de cargos
                                car.setDescuento(dato + extra);
                                arruuid.add(arrcargoseleccion.get(x).getFoliofiscal());
                                sumatotal = 0;
                                x++;
                            } else {
                                float flotanteaux = desc - sumatotal;

                                // importe inferior menos sumatotal Ej(500-400) considerando 500 como lo introducido y 400 como la suma
                                if (flotanteaux < 0) {
                                    car.setDescuento(flotanteaux * (-1));
                                } else {
                                    car.setDescuento(flotanteaux);
                                }
                                extra = dato - desc;
//                                if (i + 1 == tamaño || flotanteaux + extra == desc) {
                                if (i + 1 == tamaño || dato == desc) {
//                                    car.setDescuento(flotanteaux + extra);
                                    car.setDescuento(dato + extra);
                                }
                                arruuid.add(arrcargoseleccion.get(x).getFoliofiscal());
                                sumatotal += preciointerno + (precio * 0.16);
                                sumatotal -= desc;
                                x++;
                            }

                            arrayc.add(car);
                        } else {
                            //Asignar directo ya que no interfiere con el total de una factura seleccionada
                            //No aplica en reciclar codigo por el contador interno de la seleccion
//                            arruuid.add(arrcargoseleccion.get(x).getFoliofiscal());
//                            car.setDescuento(preciointerno + extra);// importe a descontar de cargos
                            car.setDescuento(dato + extra);
                            car.setFoliofiscal(folios);
                            car.setCuenta(arrcargoseleccion.get(x).getCuenta());
                            car.setSubcuenta(arrcargoseleccion.get(x).getSubcuenta());
                            car.setCliente(arrcargoseleccion.get(x).getCliente());
                            car.setReferencia(arrcargoseleccion.get(x).getReferencia());
                            car.setFecha(arrcargoseleccion.get(x).getFecha());
                            car.setDescnota(descripcion);
                            car.setCantidad(pares);
//                            sumatotal += preciointerno;
                            sumatotal += dato;
                            extra = 0;
                            arrayc.add(car);
                        }
                    } else {
                        //Detalle solo para 1 renglon que es la relacion 01 y 07
                        precio = Float.parseFloat(formateador.format(arrcargoseleccion.get(i).getDescuento() / 1.16));
                        pares = 1;
                        descripcion = JtObs.getText().toUpperCase() + " " + facturas;
                        codigosat = "84111506";
                        umedida = "ACT";
                        //Se hace la operacion aqui ya que solo se ejecutara 1 vez
                        for (int j = 0; j < arrcargoseleccion.size(); j++) {
                            cargo car = new cargo();
                            arruuid.add(arrcargoseleccion.get(j).getFoliofiscal());
                            car.setDescuento(arrcargoseleccion.get(j).getDescuento());// importe a descontar de cargos
                            car.setFoliofiscal(folios);
                            car.setCuenta(arrcargoseleccion.get(j).getCuenta());
                            car.setSubcuenta(arrcargoseleccion.get(j).getSubcuenta());
                            car.setCliente(arrcargoseleccion.get(j).getCliente());
                            car.setReferencia(arrcargoseleccion.get(j).getReferencia());
                            car.setFecha(arrcargoseleccion.get(j).getFecha());
                            car.setDescnota(JtObs.getText().toUpperCase() + " " + facturas);
                            car.setCantidad(1);
                            arrayc.add(car);
                        }
                    }
                    if (rel.equals("03")) {
                        df.setPrecio(precioantes);
                    } else {
                        df.setPrecio(Float.parseFloat(formateador.format(precio)));
                    }
                    impuesto = (float) (precio * 0.16);
                    System.out.println((float) precio * pares);
                    df.setRenglon(i + 1);
                    df.setProducto(0);
                    df.setCantidad(pares);
                    df.setDescripcion(descripcion);
                    df.setCodigo(codigosat);
                    df.setUmedida(umedida);

                    df.setBase(Float.parseFloat(formateador.format(precio)));
                    df.setImpuesto("002");
                    df.setTipofactor("Tasa");
                    df.setImporta((Float.parseFloat(formateador.format(impuesto))));
                    df.setDescuento(0);
                    df.setTasaocuota("0.16");
                    arrf.add(df);
                }
                f.setArrcargo(arrayc);
                f.setArr(arrf);
                f.setArruuid(arruuid);
                //id del documento recien añadido
                int id = dfac.nuevancr(cpt, f, ACobranza);
                if (id != 0) {
                    System.out.println("Exito");
                    daoxml dx = new daoxml();
                    f.setId(id);
                    dx.generarfac(f, cpt, sqlempresa);
                }
            }

        }
    }

    private void actualizaimportes() {
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        double iva = 0;
        boolean resp = true;
        iva = 0.16;
        String rel = arrrelacion.get(JtRelacion.getSelectedIndex()).getRelacion();
        if (rel.equals("03")) {// Verifica el tipo de relacion y que no se pueda agregar renglones en los que no sean '03'
            //verirfica de que no tenga facturas
            if (!arrcargoseleccion.isEmpty()) {
                int rows = model.getRowCount();
                DecimalFormat formateador = new DecimalFormat("####.##");
                for (int i = 0; i < rows; i++) {
                    //Verifica de que sea un numero y no cualquier cosa

                    if (verificafloat(JtDetalle.getValueAt(i, 2).toString()) || verificaint(JtDetalle.getValueAt(i, 2).toString())
                            || verificaflotante(JtDetalle.getValueAt(i, 2).toString())) {
                        float precio = Float.parseFloat(JtDetalle.getValueAt(i, 2).toString());
                        int can = Integer.parseInt(JtDetalle.getValueAt(i, 3).toString());
                        subtotal += Float.parseFloat(formateador.format((precio) * can));
                        impuestos += Float.parseFloat(formateador.format(((precio) * can) * 0.16));
                    } else {
                        JOptionPane.showMessageDialog(null, "Introduce solo numeros e intentalo de nuevo");
                        break;

                    }
                }
                total = subtotal + impuestos;
                System.out.println(impuestos);
                //Solo para despliqgue de informacion
                JlIva.setText(formateador.format(impuestos));
                Jlsub.setText(formateador.format(subtotal));
                JlDesc.setText(formateador.format(descuentos));
                JlTotal.setText(formateador.format(total));
            } else {
                JtCliente.requestFocus();// regresa al campo inicial del cliente
            }
        } else {
            DecimalFormat formateador = new DecimalFormat("####.##");
            if (!arrcargoseleccion.isEmpty()) {// rellena de datos de acuerdo a las lineas que se capturen
                for (int i = 0; i < arrcargoseleccion.size(); i++) {
                    float precio = arrcargoseleccion.get(i).getDescuento();
                    //suma de totales
                    subtotal += Float.parseFloat(formateador.format(precio / 1.16));
                    impuestos += Float.parseFloat(formateador.format((precio / 1.16) * 0.16));
                }
                if (resp) {// Si, y solo si es un entero o decimal
                    //Variables para manejo de totales
//                descuentos = subtotal * Float.parseFloat(JtDescuento.getText()) / 100;
                    //impuestos =(float) ((subtotal - descuentos) * iva);
                    total = subtotal + impuestos;
                    System.out.println(impuestos);
                    //Solo para despliqgue de informacion
                    JlIva.setText(formateador.format(impuestos));
                    Jlsub.setText(formateador.format(subtotal));
                    JlDesc.setText(formateador.format(descuentos));
                    JlTotal.setText(formateador.format(total));
                }
            }
        }

    }

    private boolean verificaint(String cad) {
        boolean resp = false;
        String patt = "[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificafloat(String cad) {
        boolean resp = false;
        String patt = "[0-9]+||[0-9]+.[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificaflotante(String cad) {
        boolean check = true;
        Character c;
        int control = 0;
        String cadena = cad;
        for (int i = 0; i < cad.length(); i++) {
            c = cadena.charAt(i);
            if (!Character.isDigit(c)) {
                if (c.equals('.') && control == 0) {
                    control++;
                } else if (control == 1) {
                    check = false;
                    break;
                }
                check = false;
                break;
            }
        }
        return check;
    }

    private boolean verificadetalle() {
        boolean resp = true;
        for (int i = 0; i < k.size(); i++) {
            String precio = JtDetalle.getValueAt(i, 3).toString();
            if (!verificafloat(precio)) {
                resp = false;
                break;
            }
        }
        return resp;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcCuenta;
    private javax.swing.JComboBox<String> JcForma;
    private javax.swing.JComboBox<String> JcMetodo;
    private javax.swing.JComboBox<String> JcUso;
    private javax.swing.JLabel JlDesc;
    private javax.swing.JLabel JlIva;
    private javax.swing.JLabel JlNombre;
    private javax.swing.JLabel JlTotal;
    private javax.swing.JList<String> Jlcargofac;
    private javax.swing.JLabel Jlsub;
    public javax.swing.JTextField JtCliente;
    private javax.swing.JTable JtDetalle;
    private javax.swing.JTextArea JtObs;
    private javax.swing.JComboBox<String> JtRelacion;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu pop;
    // End of variables declaration//GEN-END:variables
}
