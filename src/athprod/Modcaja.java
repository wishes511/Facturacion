/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package athprod;

import DAO.daoDocscpt;
import Modelo.Documentoscpt;
import Server.Serverprod;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GATEWAY1-
 */
public class Modcaja extends javax.swing.JInternalFrame {

    Serverprod prod = new Serverprod();
    Connection CPT, RCPT;
    daoDocscpt docs = new daoDocscpt();
    ArrayList<Documentoscpt> arr = new ArrayList<>();

    /**
     * Creates new form Clientes
     */
    public Modcaja() {
        initComponents();
        setconexiones();
        generartabla();

    }

    private void setconexiones() {
        try {
            CPT = prod.getconexionserver8("CPT");
            RCPT = prod.getconexionserver8("RCPT");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Modcaja.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Modcaja.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Modcaja.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void generartabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Folio");
        model.addColumn("Serie");
        model.addColumn("Subtotal");
        model.addColumn("Impuestos");
        model.addColumn("Total");
        model.addColumn("Fecha");
        model.addColumn("Cajas");
        model.addColumn("Nombre");
        model.addColumn("");
        arr = docs.getdocs(CPT);
        model.setRowCount(arr.size());
        for (int i = 0; i < arr.size(); i++) {
            String e = (arr.get(i).getEstatus() == 1) ? "Activo" : "Cancelado";
            model.setValueAt(arr.get(i).getFolio(), i, 0);
            model.setValueAt(arr.get(i).getSerie(), i, 1);
            model.setValueAt(arr.get(i).getSubtotal(), i, 2);
            model.setValueAt(arr.get(i).getImpuestos(), i, 3);
            model.setValueAt(arr.get(i).getTotal(), i, 4);
            model.setValueAt(arr.get(i).getFecha(), i, 5);
            model.setValueAt(arr.get(i).getCajas(), i, 6);
            model.setValueAt(arr.get(i).getNombre(), i, 7);
            model.setValueAt(e, i, 8);
        }
        JtDocs.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Pop = new javax.swing.JPopupMenu();
        JmCajas = new javax.swing.JMenuItem();
        JmTotal = new javax.swing.JMenuItem();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtDocs = new javax.swing.JTable();

        JmCajas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/box_full_products_14639.png"))); // NOI18N
        JmCajas.setText("Modificacion de cajas");
        JmCajas.setToolTipText("Modifica el numero de cajas de una Factura");
        JmCajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JmCajasActionPerformed(evt);
            }
        });
        Pop.add(JmCajas);

        JmTotal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/1486564168-finance-bank-check_81495.png"))); // NOI18N
        JmTotal.setText("Ajuste de totales");
        JmTotal.setToolTipText("Ajusta Importe, iva y total");
        JmTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JmTotalActionPerformed(evt);
            }
        });
        Pop.add(JmTotal);

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Documentos");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/1486504352-checklist-clipboard-inventory-list-report-tasks-todo_81326.png"))); // NOI18N

        JtDocs.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JtDocs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JtDocs.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JtDocs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtDocsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(JtDocs);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1105, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JtDocsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDocsMouseClicked
        if (evt.getButton() == 3) {// activar con clic derecho
            Pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JtDocsMouseClicked

    private void JmCajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JmCajasActionPerformed
        String seleccion = JOptionPane.showInputDialog(null, "", JOptionPane.QUESTION_MESSAGE);
        if (verificaint(seleccion)) {
            int row = JtDocs.getSelectedRow();
            arr.get(row).setCajas(Integer.parseInt(seleccion));
            if(docs.modcaja(CPT, arr.get(row))){
                docs.modcaja(RCPT, arr.get(row));
                JOptionPane.showMessageDialog(null, "Exito al modificar Cajas");
                generartabla();
            }else{
                JOptionPane.showMessageDialog(null, "Algo salio mal, intentelo de nuevo");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Error al actualizar registro, solo introducir numeros");
        }
    }//GEN-LAST:event_JmCajasActionPerformed

    private void JmTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JmTotalActionPerformed
        Documentoscpt d1;
        Documentoscpt d2;
        int row = JtDocs.getSelectedRow();
        d1=docs.getdocs(CPT, arr.get(row).getFolio());
        d2=docs.getdocs(RCPT, arr.get(row).getFolio());
        if((d1.getImpuestos()!=d2.getImpuestos())||(d1.getTotal()!=d2.getTotal())){
            docs.modtotales(CPT, d2);//mpdificacion de importes solo en cpt
            JOptionPane.showMessageDialog(null, "Modificacion completa!");
            generartabla();
        }else{
            JOptionPane.showMessageDialog(null, "No hay diferencia de importes");
        }
        
    }//GEN-LAST:event_JmTotalActionPerformed

    private boolean verificaint(String cad) {
        boolean resp = false;
        String patt = "[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JmCajas;
    private javax.swing.JMenuItem JmTotal;
    private javax.swing.JTable JtDocs;
    private javax.swing.JPopupMenu Pop;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
