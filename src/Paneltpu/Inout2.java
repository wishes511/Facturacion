/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneltpu;

import DAO.daoConceptos;
import Paneles.*;
import DAO.daocfdi;
import DAO.daoempresa;
import DAO.daofactura;
import DAO.daokardexrcpt;
import DAO.daopedimentos;
import Modelo.Agentes;
import Modelo.Cliente;
import Modelo.ConceptosES;
import Modelo.Dfactura;
import Modelo.Empresas;
import Modelo.KardexCmp;
import Modelo.Kardexrcpt;
import Modelo.Nocolisiontpu;
import Modelo.Usuarios;
import Modelo.convertirNumeros;
import Modelo.factura;
import Modelo.pedimento;
import Server.Serverprod;
import Server.Serverylite;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author GATEWAY1-
 */
public class Inout2 extends javax.swing.JPanel {

    public String nombre, empresa, empresarcpt, empresacob;
    public Connection sqlcfdi, sqlempresa;
    public Connection ACobranza, rcpt, cpt, cobB;
    Serverylite slite = new Serverylite();
    Serverprod prod = new Serverprod();
    public ArrayList<Agentes> arragente = new ArrayList<>();
    public ArrayList<Cliente> arrcliente = new ArrayList<>();
    public ArrayList<ConceptosES> arrcuentas = new ArrayList<>();
    public ArrayList<KardexCmp> arrk = new ArrayList<>();

    daocfdi dcfdi = new daocfdi();
    double descuentos;
    double impuestos;
    double subtotal;
    double total;
    public Usuarios u;
    int cuenta = 1;

//    ArrayList<Kardexrcpt> k0 = new ArrayList<>();
    ArrayList<pedimento> k1 = new ArrayList<>();
    ArrayList<pedimento> k2 = new ArrayList<>();
    //para factura relacionada

    /**
     * Creates new form Cliente1
     */
    public Inout2() {
        initComponents();
        JtCliente.requestFocus();
        JtFolio1.setVisible(false);
        jRadioButton1.setSelected(true);
        grupo.add(jRadioButton1);
        grupo.add(jRadioButton2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        JtCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        JtFolio1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Jlsub = new javax.swing.JLabel();
        JlTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JsRel1 = new javax.swing.JScrollPane();
        JlCliente1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        JcCliente = new javax.swing.JComboBox<>();
        JcConceptos = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        JtReferencia = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        JtCliente.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        JtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtCliente.setBorder(null);
        JtCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtClienteMousePressed(evt);
            }
        });
        JtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Pedimento");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel6MousePressed(evt);
            }
        });

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JtFolio1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JtFolio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtFolio1ActionPerformed(evt);
            }
        });

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JtDetalle.setSelectionBackground(new java.awt.Color(213, 215, 250));
        JtDetalle.setSelectionForeground(new java.awt.Color(0, 0, 0));
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Subtotal");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Total");

        Jlsub.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Jlsub.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlsub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Jlsub, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JlTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar factura");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Refresh_36729.png"))); // NOI18N
        jLabel3.setToolTipText("Actualiza datos");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });

        JlCliente1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        JlCliente1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JlCliente1.setAutoscrolls(false);
        JlCliente1.setValueIsAdjusting(true);
        JlCliente1.setVisibleRowCount(10);
        JlCliente1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JlCliente1MousePressed(evt);
            }
        });
        JlCliente1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JlCliente1ValueChanged(evt);
            }
        });
        JsRel1.setViewportView(JlCliente1);

        jLabel20.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel20.setText("Cliente");

        jLabel21.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel21.setText("Conceptos");

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Entrada");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("Salida");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        JtReferencia.setFont(new java.awt.Font("Calibri", 0, 15)); // NOI18N
        JtReferencia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtReferencia.setBorder(null);
        JtReferencia.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JtReferencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtReferenciaMousePressed(evt);
            }
        });
        JtReferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtReferenciaActionPerformed(evt);
            }
        });

        jSeparator3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Referencia");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel8MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JtCliente)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(JtFolio1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JsRel1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(JtReferencia)
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jRadioButton1))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 413, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(48, 48, 48))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JcConceptos, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel21)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JsRel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JtFolio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JtReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton2)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JcConceptos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JtClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtClienteMousePressed
        JtCliente.setText("");
    }//GEN-LAST:event_JtClienteMousePressed

    private void JtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtClienteActionPerformed
        String r = JtCliente.getText();
        daopedimentos dk1 = new daopedimentos();
        k1 = dk1.getpedimentosimple(cpt, empresacob, r);
        llenalistasalida();
        cargacombos();
    }//GEN-LAST:event_JtClienteActionPerformed

    private void JtFolio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtFolio1ActionPerformed
//        seleccionfolio();
    }//GEN-LAST:event_JtFolio1ActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        if (!k2.isEmpty()) {

            boolean a1 = verificadetalle();
            if (!a1) {
                JOptionPane.showMessageDialog(null, "Error, Verifica los precios");
            }
            System.out.println(" - " + a1);
            if (!a1) {

            } else {
                ArrayList<KardexCmp> arrk = new ArrayList<>();
//                Kardexrcpt  kar = new kardexCmp();
                daokardexrcpt dk = new daokardexrcpt();
                java.util.Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
                Calendar fecha = Calendar.getInstance();
                daofactura dfac = new daofactura();
                DecimalFormat formateador = new DecimalFormat("####.##");//para los decimales
                int rowc = JcCliente.getSelectedIndex();
                int folio = dk.maxkardexsincuenta(cpt);
//                Detallado de productos selecionados
                for (int i = 0; i < k2.size(); i++) {
                    if (JtDetalle.getValueAt(i, 7).toString().equals("*")) {
                        KardexCmp kar = new KardexCmp();
                        double precio = Double.parseDouble(formateador.format(Double.parseDouble(JtDetalle.getValueAt(i, 3).toString())));
                        double cant = Double.parseDouble(formateador.format(Double.parseDouble(JtDetalle.getValueAt(i, 2).toString())));
                        int cue=Integer.parseInt(arrcuentas.get(JcConceptos.getSelectedIndex()).getCuenta());
                        double stock=0;
                        if(cue==1){
                            stock=k2.get(i).getDp().getCantrestante()+cant;
                        }else{
                            stock=k2.get(i).getDp().getCantrestante()-cant;
                        }
                        kar.setCantrestante(stock);
                        kar.setCuenta(arrcuentas.get(JcConceptos.getSelectedIndex()).getId_concepto());
                        kar.setId_cliente(arrcliente.get(rowc).getCvecliente());
                        kar.setId_kardex(folio);
                        kar.setDocref(JtReferencia.getText().toUpperCase());
                        kar.setId_material(k2.get(i).getDp().getId_material());
                        kar.setAlmacen(1);
                        kar.setId_prov(0);
                        kar.setId_pedimento(k2.get(i).getId_pedimento());
                        kar.setId_dpedimento(k2.get(i).getDp().getId_dpedimento());
                        kar.setNombreusuario(u.getUsuario());
                        kar.setFechamov(sdf.format(date));
                        kar.setCosto(precio);
                        kar.setCantidad(cant);
                        kar.setDureza(k2.get(i).getDp().getDureza());
                        kar.setRenglon(i + 1);
                        arrk.add(kar);
                    }
                }

//                int id = dfac.nuevaremtpu(cpt, f, cobB);
                if (dk.nuevokardextpu(cpt, arrk)) {
//                    setreport(id, f.getRegimen(), f.getMoneda(), "B", f.getPedido());
                    JOptionPane.showMessageDialog(null, "Proceso terminado ");
                    vaciarcampos();
                    JtCliente.requestFocus();
                }

            }
        }
    }//GEN-LAST:event_jLabel2MousePressed

    public void cargacombos() {//catalogos de Sat
        DefaultComboBoxModel cliente = new DefaultComboBoxModel();
        daoConceptos d = new daoConceptos();
        for (Cliente arruso1 : arrcliente) {
            cliente.addElement(arruso1.getNombre());
        }
        JcCliente.setModel(cliente);
        getconceptos();
    }

    /**
     * Funcion para determinar si la cantidad decimal es redondeada o truncada
     * ya que el sat maneja ambos y no solo uno porque si no aveces saldran mal
     * los calculos de los centavos
     *
     * @param cant cantidad en decimal
     * @return Cantidad redondeada o truncada
     */
    private double formatdecimal(double cant) {
        int dato = 0;
        int punto = 0;
        boolean band = false;
        double resp;
        String c = String.valueOf(cant);
//        String cadena = "";
        for (int i = 0; i < c.length(); i++) {
//            Empieza a tomar datos despues del punto
            if (c.charAt(i) == '.') {
                band = true;
            }
            if (band) {
//                3 digitos de decimal para saber qe hacer con los decimales
                if (punto == 3) {
                    dato = Integer.parseInt(c.charAt(i) + "");
                    i = c.length();
                    break;
                }
//                cadena += c.charAt(i);
                punto++;
            }
        }
        if ((dato <= 5)) {
            resp = BigDecimal.valueOf(cant).setScale(2, RoundingMode.FLOOR).doubleValue();
        } else {
            resp = BigDecimal.valueOf(cant).setScale(2, RoundingMode.HALF_UP).doubleValue();
        }
        return resp;
    }

    /**
     *
     * @param folio Folio de la factura
     * @param arrmetodo Array que contiene el metodo de pago
     * @param arruso Array que contiene el uso de cfdi
     * @see Despliegue y creacion del archivo pdf con los datos previamente
     * creados El reporte fue previamente creado en un modulo anterior que solo
     * creaba el pdf el proyecto se llama "Facturas"
     *
     */
    private void setreport(int folio, String regimen, String moneda, String serie, String pedido) {
        try {
            daoempresa d = new daoempresa();
//            Identificar si es de ath o uptown
            String n = "1";
            String logo = "AF.png";
            Empresas e = d.getempresarfc(sqlempresa, n);
//             fin identificar empresa
            Map parametros = new HashMap();
//            Clase que contiene el numero convertido a caracter
            convertirNumeros cnum = new convertirNumeros();
            DecimalFormat formateador = new DecimalFormat("####.##");//para los decimales
            String numeros = formateador.format(total);
            String letratotal = "";
            letratotal = cnum.Convertir(numeros, true, moneda);
//            Agregar parametros al reporte
            parametros.put("id", folio);
            parametros.put("totalletra", letratotal);
//            parametros.put("nombre", e.getNombre());
//            parametros.put("rfc", e.getRfc());
//            parametros.put("regimen", e.getRegimen());
//            parametros.put("lugar", e.getCp());
            parametros.put("logo", "C:\\af\\bin\\" + logo);// direcion predefinida, posible cambiar en un futuro
            parametros.put("serie", serie);
            JasperReport jasper = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportestpu/Pedidos.jasper"));
            JasperPrint print = JasperFillManager.fillReport(jasper, parametros, cpt);
            JasperViewer ver = new JasperViewer(print, false); //despliegue de reporte
            ver.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ver.setTitle("Pedido " + pedido);
            ver.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(fac1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        String active = JtDetalle.getValueAt(JtDetalle.getSelectedRow(), 7).toString();
        if (active.equals("")) {
            JtDetalle.setValueAt("*", JtDetalle.getSelectedRow(), 7);
        } else {
            JtDetalle.setValueAt("", JtDetalle.getSelectedRow(), 7);
        }
        if (!k2.isEmpty()) {
            actualizaimportes();
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        actualizaimportes();
    }//GEN-LAST:event_jLabel3MousePressed

    private void jLabel6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MousePressed

    }//GEN-LAST:event_jLabel6MousePressed

    private void JlCliente1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JlCliente1MousePressed
        int ind[] = JlCliente1.getSelectedIndices();
        String folios = "";
        if (ind.length == 1) {
            folios = "referencia ='" + k1.get(JlCliente1.getSelectedIndex()).getReferencia() + "'";
        } else {
            for (int i = 0; i < ind.length; i++) {
                System.out.println(ind[i]);
                if (i == 0) {
                    folios = "referencia ='" + k1.get(i).getReferencia() + "'";
                } else {
                    folios += " or referencia ='" + k1.get(i).getReferencia() + "'";
                }
            }
        }
        seleccionfolio(folios);

    }//GEN-LAST:event_JlCliente1MousePressed

    private void JlCliente1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JlCliente1ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_JlCliente1ValueChanged

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        cuenta = 1;
        getconceptos();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        cuenta = 60;
        getconceptos();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void JtReferenciaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtReferenciaMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtReferenciaMousePressed

    private void JtReferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtReferenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtReferenciaActionPerformed

    private void jLabel8MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel8MousePressed

    private void getconceptos() {
        DefaultComboBoxModel cuentas = new DefaultComboBoxModel();
        daoConceptos d = new daoConceptos();
        arrcuentas = d.getConceptos(cpt, cuenta);
        for (ConceptosES arruso1 : arrcuentas) {
            cuentas.addElement(arruso1.getCuenta() + ", " + arruso1.getSubcuenta() + " - " + arruso1.getNombre());
            System.out.println("concepto "+arruso1.getId_concepto());
        }
        JcConceptos.setModel(cuentas);
    }

//    Llena la lista con todos los folios de acuerdo al cliente
    private void llenalistasalida() {
        DefaultListModel<String> model = new DefaultListModel<>();
        int folio = 0;
        for (int i = 0; i < k1.size(); i++) {
            if (folio != k1.get(i).getId_pedimento()) {
                model.addElement(k1.get(i).getReferencia() + " - " + k1.get(i).getNprov());
            }
//            folio = k1.get(i).getId_pedimento();
        }
        JlCliente1.setModel(model);
        JlCliente1.requestFocus();
    }

    private void vaciarcampos() {
        if (!k1.isEmpty()) {
            k1.clear();
        }
        if (!k2.isEmpty()) {
            k2.clear();
        }
        generatabla();
        JtCliente.setText("");
        JtCliente.requestFocus();
        JtReferencia.setText("");
        llenalistasalida();
    }

    private void seleccionfolio(String folios) {
        daopedimentos dk1 = new daopedimentos();
        k2 = dk1.getpedimentoaadv(cpt, folios);
        generatabla();
    }

    public final void generatabla() {//Tabla actualizable con respecto al descuento e iva
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Material");//0  estilo combinacion corrida
        model.addColumn("Clave SAT");//1
        model.addColumn("Cantidad");//2
        model.addColumn("Precio");//3
        model.addColumn("Descuento");//4
        model.addColumn("Impuestos");//5
        model.addColumn("Importe");//6
        model.addColumn("Activo");//7
        model.addColumn("Unidad");//8
        model.addColumn("Pedimento");//9
        model.addColumn("Total actual");//9
        
        DecimalFormat formateador = new DecimalFormat("####.##");//para los decimales
        if (!k2.isEmpty()) {// rellena de datos de acuerdo a las lineas que se capturen
            model.setRowCount(k2.size());
            for (int i = 0; i < k2.size(); i++) {
                double tpares = k2.get(i).getDp().getCantrestante();
//                double desc = Double.parseDouble(JtDescuento.getText()) / 100;
                double precio = k2.get(i).getDp().getPrecio();
                double descuento = (tpares * precio) * 0;
                model.setValueAt(k2.get(i).getDp().getMatped(), i, 0);
                model.setValueAt(k2.get(i).getDp().getCodigosat(), i, 1);
                model.setValueAt("", i, 2);
                model.setValueAt(formateador.format(precio), i, 3);
                model.setValueAt(formateador.format(descuento), i, 4);
                model.setValueAt("0", i, 5);
                model.setValueAt(formateador.format((tpares * precio) - descuento), i, 6);
                model.setValueAt("", i, 7);
                model.setValueAt(k2.get(i).getDp().getUnidad(), i, 8);
                model.setValueAt(k2.get(i).getReferencia(), i, 9);
                model.setValueAt(tpares, i, 10);
                //suma de totales
                subtotal += tpares * precio;
            }
        }
        //Variables para manejo de totales
//        descuentos = subtotal * Double.parseDouble(JtDescuento.getText()) / 100;
        impuestos = 0;
        total = subtotal - descuentos;
        //Solo para despliqgue de informacion
        Jlsub.setText(formateador.format(subtotal));
        JlTotal.setText(formateador.format(total));
        JtDetalle.setModel(model);
    }

    private void actualizaimportes() {
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        boolean resp = true;
        DecimalFormat formateador = new DecimalFormat("####.##");
        if (!k2.isEmpty()) {// rellena de datos de acuerdo a las lineas que se capturen
            for (int i = 0; i < k2.size(); i++) {
                String act = JtDetalle.getValueAt(i, 7).toString();// Se obtiene el valor del activo
                if (!verificafloat(JtDetalle.getValueAt(i, 3).toString())) {// que no se pase algo que no sea un numero
                    JOptionPane.showMessageDialog(null, "Error, Verifica los precios");
                    JtDetalle.setValueAt("0", i, 3);
                    resp = false;
                    break;
                } else {
                    if (act.equals("*")) {// tomara en cuanta solo los que estan activos
                        double tpares = Double.parseDouble(JtDetalle.getValueAt(i, 2).toString());
                        if (tpares > k2.get(i).getDp().getCantrestante()) {
                            JtDetalle.setValueAt("", i, 7);
                            JOptionPane.showMessageDialog(null, "Error, El valor introducido en cantidad no puede ser mayor a la cantidad restante del material");
                        } else {
                            double precio = Double.parseDouble(JtDetalle.getValueAt(i, 3).toString());
                            double descuento = 0;
                            JtDetalle.setValueAt(precio, i, 3);
                            JtDetalle.setValueAt(formateador.format(descuento), i, 4);
                            JtDetalle.setValueAt("0", i, 5);
                            JtDetalle.setValueAt(formateador.format((tpares * precio)), i, 6);
                            //suma de totales
//                        subtotal += Double.parseDouble(formateador.format((tpares * precio)));
                            subtotal += tpares * precio;
//                        impuestos += Double.parseDouble(formateador.format(((tpares * precio) - descuento) * iva));
                            impuestos = 0;
                        }

                    }
                }
            }
            if (resp) {// Si, y solo si es un entero o decimal
                //Variables para manejo de totales
//                descuentos = subtotal * Float.parseFloat(JtDescuento.getText()) / 100;
                //impuestos =(float) ((subtotal - descuentos) * iva);
                double desc = 0;
                descuentos = subtotal * desc;
                impuestos = 0;
                total = impuestos + subtotal - descuentos;
//                total = subtotal - descuentos + impuestos;
//                System.out.println(total + " -- " + impuestos + " -- " + subtotal + " -- " + descuentos+" --"+tot);
//                System.out.println(impuestos);
                //Solo para despliqgue de informacion
                Jlsub.setText(formateador.format(subtotal));
                JlTotal.setText(formateador.format(total));
            }
        }
    }

    private boolean verificaint(String cad) {
        boolean resp = false;
        String patt = "[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificafloat(String cad) {
        boolean resp = false;
        String patt = "[0-9]+||[0-9]+.[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificadetalle() {
        boolean resp = true;
        for (int i = 0; i < k2.size(); i++) {
            String precio = JtDetalle.getValueAt(i, 3).toString();
            if (!verificafloat(precio)) {
                resp = false;
                break;
            }
        }
        return resp;
    }

    private boolean verificaregimen(Connection cfdi, String regimen, String uso) {
        daocfdi df = new daocfdi();
        boolean a = true;
        String resp = df.getRegimenxuso(cfdi, regimen, uso);
        if (resp.equals("")) {
            JOptionPane.showMessageDialog(null, "Error, El regimen del cliente no se puede usar con este uso cfdi");
            a = false;
        }
        return a;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcCliente;
    private javax.swing.JComboBox<String> JcConceptos;
    private javax.swing.JList<String> JlCliente1;
    private javax.swing.JLabel JlTotal;
    private javax.swing.JLabel Jlsub;
    private javax.swing.JScrollPane JsRel1;
    public javax.swing.JTextField JtCliente;
    private javax.swing.JTable JtDetalle;
    private javax.swing.JComboBox<String> JtFolio1;
    public javax.swing.JTextField JtReferencia;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
