/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneltpu;

import Paneles.*;
import DAO.daocfdi;
import DAO.daoempresa;
import DAO.daofactura;
import DAO.daoxmlncrtpu;
import DAO.daoxmlpagostpu;
import Modelo.ConceptosES;
import Modelo.Detpagos;
import Modelo.Dfactura;
import Modelo.Empresas;
import Modelo.Formadepago;
import Modelo.Kardexrcpt;
import Modelo.Sellofiscal;
import Modelo.Usuarios;
import Modelo.cargo;
import Modelo.convertnum;
import Modelo.factura;
import Modelo.metodopago;
import Modelo.relacion;
import Modelo.usocfdi;
import Server.Serverprod;
import Server.Serverylite;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import mx.sat.cfd40.timbrarXML;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author GATEWAY1-
 */
public class pagotpu2 extends javax.swing.JPanel {

    public String nombre, empresa;
    public Connection sqlcfdi, sqlempresa;
    public Connection ACobranza, rcpt, cpt;
    Serverylite slite = new Serverylite();
    Serverprod prod = new Serverprod();
    public ArrayList<Formadepago> arrfpago = new ArrayList<>();
    public ArrayList<usocfdi> arruso = new ArrayList<>();
    public ArrayList<metodopago> arrmetodo = new ArrayList<>();
    public ArrayList<ConceptosES> arrcuentas = new ArrayList<>();
    public ArrayList<relacion> arrrelacion = new ArrayList<>();
    ArrayList<cargo> arrcargo = new ArrayList<>();
    ArrayList<cargo> arrcargoseleccion = new ArrayList<>();//cargos seleccionados
    daocfdi dcfdi = new daocfdi();

    double descuentos;
    double impuestos;
    double subtotal;
    double total;
    public Usuarios u;

    //kardex para fac
    ArrayList<Kardexrcpt> k = new ArrayList<>();
    ArrayList<Kardexrcpt> k0 = new ArrayList<>();

    /**
     * Creates new form Cliente1
     */
    public pagotpu2() {
        initComponents();
//        cargatabla();
        JlTcambio.setVisible(false);
        JtTCambio.setVisible(false);
        JtCliente.requestFocus();
//        iniciarconexiones();  Solo si se usa solo la clase si no se pasan directamente desde facturacion
// carga en combos los catalogos del sat

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        pop = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        JlNombre = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        JtCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        JcMetodo = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        JcForma = new javax.swing.JComboBox<>();
        JcUso = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        JcCuenta = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtObs = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        JcUsd = new javax.swing.JCheckBox();
        JtTCambio = new javax.swing.JTextField();
        JlTcambio = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Jlcargofac = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Jlsub = new javax.swing.JLabel();
        JlDesc = new javax.swing.JLabel();
        JlIva = new javax.swing.JLabel();
        JlTotal = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        JtFecha = new com.toedter.calendar.JDateChooser();

        pop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                popMousePressed(evt);
            }
        });

        jMenuItem1.setText("Elimina linea");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        pop.add(jMenuItem1);

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        JlNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JlNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JtCliente.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        JtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtCliente.setBorder(null);
        JtCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtClienteMousePressed(evt);
            }
        });
        JtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("# Cliente");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Metodo de Pago");

        JcMetodo.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        JcMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcMetodoActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Forma de Pago");

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Uso Cfdi");

        JcForma.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        JcForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcFormaActionPerformed(evt);
            }
        });

        JcUso.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        JcUso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JcForma, 0, 441, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(JcUso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JcMetodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(JcMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(JcForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(JcUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        JcCuenta.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcCuentaActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel20.setText("Cuentas");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 41, Short.MAX_VALUE)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JcCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(JcCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Factura", "Pago", "Importe", "Iva"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Refresh_36729.png"))); // NOI18N
        jLabel3.setToolTipText("Actualiza datos");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel3MouseReleased(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar Pago");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        JtObs.setColumns(20);
        JtObs.setRows(5);
        jScrollPane2.setViewportView(JtObs);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        JcUsd.setText("USD - Dolares");
        JcUsd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsdActionPerformed(evt);
            }
        });

        JtTCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtTCambioActionPerformed(evt);
            }
        });

        JlTcambio.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JlTcambio.setText("Tipo de cambio");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JcUsd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JtTCambio)
                    .addComponent(JlTcambio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JcUsd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(JlTcambio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JtTCambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/flat-style-circle-save_icon-icons.com_66942.png"))); // NOI18N
        jLabel4.setToolTipText("Actualiza datos");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });

        Jlcargofac.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(Jlcargofac);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Facturas en Uso");

        jPanel3.setBackground(new java.awt.Color(10, 78, 160));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Subtotal");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Descuento");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Iva");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Total");

        Jlsub.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Jlsub.setForeground(new java.awt.Color(255, 255, 255));
        Jlsub.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlDesc.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlDesc.setForeground(new java.awt.Color(255, 255, 255));
        JlDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlIva.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlIva.setForeground(new java.awt.Color(255, 255, 255));
        JlIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlTotal.setForeground(new java.awt.Color(255, 255, 255));
        JlTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlsub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlIva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Jlsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JlTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Observaciones");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 11, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
        );

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("Fecha Pago");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(JlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(41, 41, 41))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(0, 138, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(20, 20, 20))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                            .addGap(66, 66, 66)
                                            .addComponent(jLabel2))
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                            .addGap(29, 29, 29)
                                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(JlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel6)))
                                            .addGap(6, 6, 6)
                                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(71, 71, 71))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                            .addComponent(jLabel21)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(JtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
    }// </editor-fold>//GEN-END:initComponents

//    private void cargatabla() {
//        model.addColumn("Descripcion");
//        model.addColumn("Clave sat");
//        model.addColumn("Descuento");
//        model.addColumn("Cantidad");
//        JtDetalle.setModel(model);
//    }
    public void cargacombos() {//catalogos de Sat
        DefaultComboBoxModel metodo = new DefaultComboBoxModel();
        DefaultComboBoxModel forma = new DefaultComboBoxModel();
        DefaultComboBoxModel uso = new DefaultComboBoxModel();
        DefaultComboBoxModel relacion = new DefaultComboBoxModel();
        DefaultComboBoxModel cuentas = new DefaultComboBoxModel();
        for (Formadepago arrfpago1 : arrfpago) {
            forma.addElement(arrfpago1.getFormapago() + " - " + arrfpago1.getConcepto());
        }
//        for (metodopago arrmetodo1 : arrmetodo) {
////            metodo.addElement(arrmetodo1.getMetodopago() + " - " + arrmetodo1.getDescripcion());
//        }
        metodo.addElement("PUE - PAGO EN UNA SOLA EXHIBICION");
        uso.addElement("CP01 - Pagos");
//        for (usocfdi arruso1 : arruso) {
//            uso.addElement(arruso1.getusocfdi() + " - " + arruso1.getDescripcion());
//        }
//        for (relacion arruso1 : arrrelacion) {
//            relacion.addElement(arruso1.getRelacion() + " - " + arruso1.getConcepto());
//        }
        JcForma.setModel(forma);
        JcMetodo.setModel(metodo);
        JcUso.setModel(uso);
//        JtRelacion.setModel(relacion);
        // Cuentas
        daofactura d = new daofactura();
        arrcuentas = d.getalcuentastpu(ACobranza, "60");
        for (ConceptosES arruso1 : arrcuentas) {
            cuentas.addElement(arruso1.getCuenta() + ", " + arruso1.getSubcuenta() + " - " + arruso1.getNombre());
        }
        JcCuenta.setModel(cuentas);

    }

    private void JtClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtClienteMousePressed
        JtCliente.setText("");
    }//GEN-LAST:event_JtClienteMousePressed

    private void JtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtClienteActionPerformed
        String r = JtCliente.getText();
        daofactura df = new daofactura();
        arrcargo = df.getfactsoncrtpu(cpt, r, empresa);// cpt a usar
        if (arrcargo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No hay cargos con ese cliente");
            JtCliente.setText("");
            JtCliente.requestFocus();
        } else {
            JlNombre.setText(arrcargo.get(0).getNombre());
            cargacombos();
//            cargacargos();
        }

    }//GEN-LAST:event_JtClienteActionPerformed

    private void JcMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcMetodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcMetodoActionPerformed

    private void JcFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcFormaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcFormaActionPerformed

    private void JcUsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsoActionPerformed

    }//GEN-LAST:event_JcUsoActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        setfactura();
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        actualizaimportes();
    }//GEN-LAST:event_jLabel3MousePressed

    private void JcCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcCuentaActionPerformed

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        if (!arrcargo.isEmpty()) {
            cargacargos();
        }
    }//GEN-LAST:event_jLabel4MousePressed

    private boolean verificaregimen(Connection cfdi, String regimen, String uso) {
        daocfdi df = new daocfdi();
        boolean a = true;
        String resp = df.getRegimenxuso(cfdi, regimen, uso);
        if (resp.equals("")) {
            JOptionPane.showMessageDialog(null, "Error, El regimen del cliente no se puede usar con este uso cfdi");
            a = false;
        }
        return a;
    }

    private void popMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popMousePressed

    }//GEN-LAST:event_popMousePressed

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        if (evt.getButton() == 3) {// activar con clic derecho
            pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jLabel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseReleased

    private void JcUsdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsdActionPerformed
        setdolar();
    }//GEN-LAST:event_JcUsdActionPerformed

    private void JtTCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtTCambioActionPerformed
        if (!verificafloat(JtTCambio.getText().toUpperCase())) {
            JOptionPane.showMessageDialog(null, "Error, Introduce un valor valido en el tipo de cambio");
            JtTCambio.requestFocus();
        }
    }//GEN-LAST:event_JtTCambioActionPerformed

    private void setdolar() {
        if (JcUsd.isSelected()) {
            JlTcambio.setVisible(true);
            JtTCambio.setVisible(true);
            JtTCambio.requestFocus();
        } else {
            JlTcambio.setVisible(false);
            JtTCambio.setVisible(false);
        }
    }

    private void actualizaempresa() {
        arrcargoseleccion.clear();
        JtCliente.setText("");
        JtCliente.requestFocus();
        llenalistafac();
    }

    private void cargacargos() {
        if (!arrcargo.isEmpty()) {
            Cargosncrtpu p = new Cargosncrtpu(null, true);
//        p.setAlwaysOnTop(true);
//            p.relacion = arrrelacion.get(JtRelacion.getSelectedIndex()).getRelacion();
            p.arrcargo = arrcargo;
            p.desplieguecargos();
            p.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            p.setVisible(true);
            arrcargoseleccion = p.arrcargoseleccion;
            llenalistafac();
            actualizaimportes();
//            if (!p.prod.getDesccombinacion().equals("")) {
//                System.out.println("");
//                System.out.println("aqui");
//            }
        }

    }

    private void llenalistafac() {
        DefaultListModel<String> model = new DefaultListModel<>();
        DecimalFormat formateador = new DecimalFormat("####.##");
        for (cargo arrcargoseleccion1 : arrcargoseleccion) {
            model.addElement("FAC " + arrcargoseleccion1.getReferencia() + " - " + formateador.format(arrcargoseleccion1.getDescuento()));
        }
        Jlcargofac.setModel(model);
    }

    private void setfactura() {
        if (arrcargoseleccion.isEmpty()) {
            JtCliente.requestFocus();
        } else {
            double totalrev = 0;
            //Se obtiene el total de las facturas que anter se capturaron
            for (int i = 0; i < arrcargoseleccion.size(); i++) {
//                totalrev += Double.parseDouble(formateador.format(arrcargoseleccion.get(i).getDescuento()));
                totalrev += formatdecimal(arrcargoseleccion.get(i).getDescuento());
            }
//            System.out.println(total + " " + totalrev);
//            System.out.println(total + " " + formateador.format(totalrev));
//            if (totalrev != total) {
//            System.out.println(formatdecimal(total) + " ** " + formatdecimal(totalrev));
            if (formatdecimal(total) != formatdecimal(totalrev)) {
                JOptionPane.showMessageDialog(null, "El total de las lineas debe de ser igual al seleccionado en las facturas");
                JtDetalle.requestFocus();
            } else {
                factura f = new factura();
//            int row = JtFolio1.getSelectedIndex();
                java.util.Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
                daofactura dfac = new daofactura();
//                Nocolisionncr n = new Nocolisionncr();
                f.setFolio(dfac.getmaxfoliotpu(cpt, "PAG"));//Obtiene y setea el foliomaximo de *documentos
//                n.setConnecxiones(rcpt, f.getFolio());
//                n.start();
////                JOptionPane.showMessageDialog(null, "Espera al msj de Aceptacion de folio "+n.isAlive());
//                do {//ciclo hasta que termine la busqueda y asignacion, no es lo ideal pero es temporal y reduce colisiones
//
//                } while (n.isAlive());
                if (JcUsd.isSelected()) {
                    f.setMoneda("USD");
                    f.setTipocambio(Float.parseFloat(JtTCambio.getText()));
                } else {
                    f.setMoneda("MXN");
                    f.setTipocambio(1);
                }
                // fin setear impuestos
//                f.setImpiva16(getnewcantidades((total / 1.16) * 0.16, "iva"));// Nodo totales
//                f.setBaseiva16(getnewcantidades(total / 1.16, "importe"));
//                f.setTotalpago16(total);
                f.setImpiva16(impuestos);// Nodo totales
                f.setBaseiva16(subtotal);
                f.setTotalpago16(total);
//                Fin nodo totales
                f.setExportacion("01");
                f.setTiporelacion("");
                f.setEmpresa("1");
                f.setClaveusuario(u.getUsuario());
                f.setSerie("PAG");
                f.setFecha(sdf.format(date));
                f.setDescuento(0);
                f.setPedido("");
                f.setFechasolicitado(sdf.format(date));
                f.setTurno(u.getTurno());
                f.setFechapago(sdf.format(JtFecha.getDate()));
                f.setSubtotal(0);
                f.setTotal(total);
                f.setIdcliente(arrcargoseleccion.get(0).getCliente());
                f.setNombre(arrcargoseleccion.get(0).getNombre());
                f.setRfc(arrcargoseleccion.get(0).getRfc());
                f.setCp(arrcargoseleccion.get(0).getCp());
                f.setRegimen(arrcargoseleccion.get(0).getRegimen());
                f.setTotalcajas(0);
                f.setTiposerie("PAGO");
                f.setFormapago(arrfpago.get(JcForma.getSelectedIndex()).getFormapago());
                f.setMetodopago("PUE");
                f.setDescmetodop("PAGO EN UNA SOLA EXHIBICION");
                f.setUsocfdi("CP01");
                f.setCondicion("Contado");
                f.setAgente(arrcargoseleccion.get(0).getAgente());
                f.setPlazo(arrcargoseleccion.get(0).getPlazo());
                f.setMarca(arrcargoseleccion.get(0).getRef());
                f.setLugarexpedicion("36400");
                //concepto
                f.setCuentaabono(arrcuentas.get(JcCuenta.getSelectedIndex()).getId_concepto() + "");
                f.setDesccuenta(arrcuentas.get(JcCuenta.getSelectedIndex()).getNombre());
                String folios = "";
                String facturas = "";
                //Mandar un string con los folios fiscales
                ArrayList<Detpagos> arrdetpago = new ArrayList<>();
                ArrayList<Dfactura> arrdet = new ArrayList<>();
                ArrayList<Detpagos> arrdetpago17 = new ArrayList<>();
                //Detallado del pago
                for (int i = 0; i < arrcargoseleccion.size(); i++) {
                    Detpagos d = new Detpagos();
                    d.setIddocumento(f.getFolio());
                    d.setCantidad(1);
                    d.setDescripcion("SERVICIOS DE FACTURACION");
                    d.setCodigo("84111506");
                    d.setUmedida("ACT");
                    d.setPrecio(0);
                    d.setMoneda("MXN");
                    d.setMonto(total);
                    d.setRfcctaemisora("AB");
                    d.setCtaemisora("12");
                    d.setRfcctareceptora("BC");
                    d.setCtareceptora("34");
                    d.setUuid(arrcargoseleccion.get(i).getFoliofiscal());
                    d.setFolio(arrcargoseleccion.get(i).getReferencia());
                    d.setFormadedpago(arrfpago.get(JcForma.getSelectedIndex()).getFormapago());
                    d.setMetodopago("PUE");
                    d.setParcialidad(arrcargoseleccion.get(i).getParcialidad());
                    d.setIdcargo(arrcargoseleccion.get(i).getId_cargo());

                    double sa;
                    double pa; 
                    double sal;
                    sa = (f.getMoneda().equals("MXN")) ? arrcargoseleccion.get(i).getSaldomx() : arrcargoseleccion.get(i).getSaldo();
                    d.setSaldo(sa-arrcargoseleccion.get(i).getDescuento());
                    pa = arrcargoseleccion.get(i).getDescuento();
                    sal = sa - pa;
                    d.setImportesaldoant(getcant16(sa));
                    d.setImportepagado(getcant16(pa));
                    d.setImpsaldoinsoluto(getcant16(sal));
                    arrdetpago.add(d);
                }
//                Solo 1 renglon para el cuerpo de la factura
                Dfactura df = new Dfactura();
                df.setPrecio(0);
                df.setImpuesto("01");
                df.setImporta(0);
                df.setDescripcion("Pago");
                df.setUmedida("ACT");
                df.setCodigo("84111506");
                df.setCantidad(0);
                arrdet.add(df);
                f.setArr(arrdet);
                f.setArrpagos(arrdetpago);
                f.setArrpagos17(arrdetpago17);

                f.setRefncredito(facturas);
                f.setObservaciones(JtObs.getText().toUpperCase());
                f.setFoliofiscalorig(folios);
                int verifica = dfac.getbuscafoliotpu(cpt, "PAG", f.getFolio() + "");
                if (verifica != 0) {
                    JOptionPane.showMessageDialog(null, "Error!,- El folio ya se encuentra en uso, contacta a sistemas ");
                } else {
//                    int id = dfac.nuevancrtpu(cpt, f, ACobranza, rcpt);
                    int id = dfac.insertpagotpu(cpt, ACobranza, f);
                    if (id != 0) {
                        System.out.println("Exito");
                        daoxmlpagostpu dx = new daoxmlpagostpu();
                        f.setId(id);
                        dx.generarfac(f, cpt, sqlempresa);
                        timbrarXML tim = new timbrarXML();
                        Sellofiscal s = tim.timbrar(f.getSerie() + "_" + f.getFolio(), nombre, sqlempresa, f.getEmpresa());
                        dfac.Updatesellofiscalpagotpu(cpt, s, id);
                        setreport(f.getFolio(), f.getRegimen(), f.getMoneda());
                        JOptionPane.showMessageDialog(null, "Proceso terminado- " + s.getEstado());
                        vaciarcampos();
                        JtCliente.requestFocus();
                    }
                }
            }

        }
    }

    private double formatdecimal(double cant) {
        int dato = 0;
        int punto = 0;
        boolean band = false;
        double resp;
        String c = String.valueOf(cant);
//        String cadena = "";
        for (int i = 0; i < c.length(); i++) {
//            Empieza a tomar datos despues del punto
            if (c.charAt(i) == '.') {
                band = true;
            }
            if (band) {
//                3 digitos de decimal para saber qe hacer con los decimales
                if (punto == 3) {
                    dato = Integer.parseInt(c.charAt(i) + "");
//                    i = c.length();
                    break;
                }
//                Para un cuarto decimal, si es mayor a
//                if (punto == 4) {
//                    int datoaux = Integer.parseInt(c.charAt(i) + "");
//                    if (datoaux > 5) {
//                        dato += 1;
//                    }
//                    i = c.length();
//                    break;
//                }
//                cadena += c.charAt(i);
                punto++;
            }
        }
        if ((dato < 5)) {
            resp = BigDecimal.valueOf(cant).setScale(2, RoundingMode.FLOOR).doubleValue();
        } else {
            resp = BigDecimal.valueOf(cant).setScale(2, RoundingMode.HALF_UP).doubleValue();
        }
        return resp;
    }

    public ArrayList<cargo> getcargosfacs() {
        ArrayList<cargo> arr = new ArrayList<>();
        DecimalFormat formateador = new DecimalFormat("####.##");
        for (int y = 0; y < arrcargoseleccion.size(); y++) {
            cargo car = new cargo();
            double desc = Double.parseDouble(formateador.format(arrcargoseleccion.get(y).getDescuento()));
            car.setDescuento(Double.parseDouble(formateador.format(desc)));
            car.setFoliofiscal(arrcargoseleccion.get(y).getFoliofiscal());
            car.setCuenta(arrcargoseleccion.get(y).getCuenta());
            car.setSubcuenta(arrcargoseleccion.get(y).getSubcuenta());
            car.setCliente(arrcargoseleccion.get(y).getCliente());
            car.setReferencia(arrcargoseleccion.get(y).getReferencia());
            car.setFecha(arrcargoseleccion.get(y).getFecha());
            arr.add(car);
        }
        return arr;
    }

    /**
     *
     * @param folio Folio de la factura
     * @param arrmetodo Array que contiene el metodo de pago
     * @param arruso Array que contiene el uso de cfdi
     * @see Despliegue y creacion del archivo pdf con los datos previamente
     * creados El reporte fue previamente creado en un modulo anterior que solo
     * creaba el pdf el proyecto se llama "Facturas"
     *
     */
    private void setreport(int folio, String regimen, String moneda) {
        try {
            String conformidad = (!moneda.equals("MXN")) ? "De conformidad con el Art. 20 del C.F.F., informamos que "
                    + "para convertir moneda extranjera a su equivalente en moneda nacional, el tipo de cambio a "
                    + "utilizar para efectos de pagos será el que publique el Banco de México en el Diario Oficial "
                    + "de la Federación el día habil anterior al día de pago. Para su consulta: www.banxico.org.mx "
                    + "(sección: Mercado cambiario/Tipos de cambio para solventar obligaciones denominadas en dólares de los Ee.Uu:A., pagaderas en la República Mexicana)" : " ";
            daoempresa d = new daoempresa();
//            Identificar si es de ath o uptown
            String n = "1";
            String logo = "AF.png";
            Empresas e = d.getempresarfc(sqlempresa, n);
            String lugar="BLVD LAS TORRES 516 DEL VALLE SAN FRANCISCO DEL RINCON GUANAJUATO "+e.getCp();
//             fin identificar empresa
            Map parametros = new HashMap();
//            Clase que contiene el numero convertido a caracter
            convertnum conv = new convertnum();
//            Agregar parametros al reporte
            parametros.put("folio", folio);
            parametros.put("totalletra", conv.controlconversion(total).toUpperCase());
            parametros.put("nombre", e.getNombre());
            parametros.put("rfc", e.getRfc());
            parametros.put("regimen", e.getRegimen());
            parametros.put("lugar", lugar);
            parametros.put("comprobante", e.getNumcertificado());
            parametros.put("logo", "C:\\af\\bin\\" + logo);// direcion predefinida, posible cambiar en un futuro
            parametros.put("metodo", arrmetodo.get(JcMetodo.getSelectedIndex()).getDescripcion());
            parametros.put("uso", arruso.get(JcUso.getSelectedIndex()).getDescripcion());
            parametros.put("serie", "PAG");
            parametros.put("regimencliente", regimen);
            parametros.put("confo", conformidad);

            JasperReport jasper = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportestpu/index_ptpu.jasper"));
            JasperPrint print = JasperFillManager.fillReport(jasper, parametros, cpt);
            JasperViewer ver = new JasperViewer(print, false); //despliegue de reporte
            ver.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ver.setTitle("PAG " + folio);
            ver.setVisible(true);
//            Exportacion al archivo pdf
            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File(e.getXml() + "\\PAG_" + folio + ".pdf"));
            exporter.exportReport();
        } catch (JRException ex) {
            Logger.getLogger(fac1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void vaciarcampos() {
        arrcargoseleccion.clear();
        JtTCambio.setText("");
        JlDesc.setText("0");
        Jlsub.setText("0");
        JlIva.setText("0");
        JlTotal.setText("0");
        arrcargo.clear();
        JtCliente.setText("");
        JlNombre.setText("");
        JtObs.setText(nombre);
        llenalistafac();
        actualizaimportes();
        cargacombos();
    }

    private void actualizaimportes() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Factura");
        model.addColumn("Pago");
        model.addColumn("Importe");
        model.addColumn("Iva");
        int rows = arrcargoseleccion.size();
        model.setNumRows(rows);
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        if (!arrcargoseleccion.isEmpty()) {
            for (int i = 0; i < rows; i++) {
                String folio = arrcargoseleccion.get(i).getReferencia();
                double totalcar = arrcargoseleccion.get(i).getDescuento();
//                double importe = totalcar / 1.16;
//                double iva = (totalcar / 1.16) * 0.16;
                double importe = getnewcantidades(totalcar, "importe");
                double iva = getnewcantidades(totalcar, "iva");
                model.setValueAt(folio, i, 0);
                model.setValueAt(totalcar, i, 1);
                model.setValueAt(importe, i, 2);
                model.setValueAt(iva, i, 3);
//                total += totalcar;
                subtotal += getnewcantidades6(totalcar, "importe");
                impuestos += getnewcantidades6(totalcar, "iva");
            }
            JtDetalle.setModel(model);
            total = subtotal + impuestos;
            //Solo para despliqgue de informacion
            JlIva.setText(getcant(impuestos) + "");
            Jlsub.setText(getcant(subtotal) + "");
            JlDesc.setText(descuentos + "");
            JlTotal.setText(getcant(total) + "");
        } else {
            JtCliente.requestFocus();// regresa al campo inicial del cliente
        }
        JtDetalle.setModel(model);
    }

    private double getnewcantidades6(double a, String tipo) {
        double cant = 0;
        switch (tipo) {
            case "importe":
                cant = BigDecimal.valueOf(a).setScale(6, RoundingMode.HALF_UP).doubleValue() / 1.16;
                break;
            case "iva":
                cant = (BigDecimal.valueOf(a).setScale(6, RoundingMode.HALF_UP).doubleValue() / 1.16) * 0.16;
                break;
        }
        return cant;
    }

    private double getnewcantidades(double a, String tipo) {
        double cant = 0;
        switch (tipo) {
            case "importe":
                cant = BigDecimal.valueOf(a).setScale(6, RoundingMode.HALF_UP).doubleValue() / 1.16;
                break;
            case "iva":
                cant = (BigDecimal.valueOf(a).setScale(6, RoundingMode.HALF_UP).doubleValue() / 1.16) * 0.16;
                break;
        }
        cant = BigDecimal.valueOf(cant).setScale(2, RoundingMode.HALF_UP).doubleValue();
        return cant;
    }

    private double getcant16(double a) {
        double cant = BigDecimal.valueOf(a).setScale(6, RoundingMode.HALF_UP).doubleValue();
        return cant;
    }

    private double getcant(double a) {
        double cant = BigDecimal.valueOf(a).setScale(2, RoundingMode.HALF_UP).doubleValue();
        return cant;
    }

    private boolean verificaint(String cad) {
        boolean resp = false;
        String patt = "[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificafloat(String cad) {
        boolean resp = false;
        String patt = "[0-9]+||[0-9]+.[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificaflotante(String cad) {
        boolean check = true;
        Character c;
        int control = 0;
        String cadena = cad;
        for (int i = 0; i < cad.length(); i++) {
            c = cadena.charAt(i);
            if (!Character.isDigit(c)) {
                if (c.equals('.') && control == 0) {
                    control++;
                } else if (control == 1) {
                    check = false;
                    break;
                }
                check = false;
                break;
            }
        }
        return check;
    }

    private boolean verificadetalle() {
        boolean resp = true;
        for (int i = 0; i < k.size(); i++) {
            String precio = JtDetalle.getValueAt(i, 3).toString();
            if (!verificafloat(precio)) {
                resp = false;
                break;
            }
        }
        return resp;
    }

    private void respcod() {
//                                pre = Double.parseDouble(JtDetalle.getValueAt(i, 2).toString());
//                        precioantes = Double.parseDouble(formateador.format((pre)));
//                        pares = Integer.parseInt(JtDetalle.getValueAt(i, 3).toString());
//
//                        precio = Double.parseDouble(formateador.format((pre) * pares));
//
//                        //Precio interno para valores enteros y sin desglose de iva
//                        preciointerno = Double.parseDouble(JtDetalle.getValueAt(i, 2).toString()) * pares;
//                        descripcion = JtDetalle.getValueAt(i, 0).toString();
//                        codigosat = JtDetalle.getValueAt(i, 1).toString();
//                        umedida = "PR";
//                        double dato = Double.parseDouble(formateador.format(sumatotal + preciointerno + (precio * 0.16)));
//                        double desc = arrcargoseleccion.get(x).getDescuento();
//                        System.out.println("precio " + preciointerno + ", desc" + desc + ", " + dato + ", sumatotal " + sumatotal);
//                        //Hacer operaciones con los importes y resetear si aplica la suma total
//                        if (dato >= desc) {
//
//                            car.setFoliofiscal(folios);
//                            car.setCuenta(arrcargoseleccion.get(x).getCuenta());
//                            car.setSubcuenta(arrcargoseleccion.get(x).getSubcuenta());
//                            car.setCliente(arrcargoseleccion.get(x).getCliente());
//                            car.setReferencia(arrcargoseleccion.get(x).getReferencia());
//                            car.setFecha(arrcargoseleccion.get(x).getFecha());
//                            car.setDescnota(descripcion);
//                            car.setCantidad(pares);
//                            //Condiciones para saber si la suma de importes son igual o distintos al de la factura
//                            if (dato == desc) {
////                                car.setDescuento(preciointerno + extra);// importe a descontar de cargos
//                                car.setDescuento(dato + extra);
////                                arruuid.add(arrcargoseleccion.get(x).getFoliofiscal());
//                                sumatotal = 0;
//                                x++;
//                            } else {
//                                double flotanteaux = desc - sumatotal;
//
//                                // importe inferior menos sumatotal Ej(500-400) considerando 500 como lo introducido y 400 como la suma
//                                if (flotanteaux < 0) {
//                                    car.setDescuento(flotanteaux * (-1));
//                                } else {
//                                    car.setDescuento(flotanteaux);
//                                }
//                                extra = dato - desc;
////                                if (i + 1 == tamaño || flotanteaux + extra == desc) {
//                                if (i + 1 == tamaño || dato == desc) {
////                                    car.setDescuento(flotanteaux + extra);
//                                    car.setDescuento(dato + extra);
//                                }
////                                arruuid.add(arrcargoseleccion.get(x).getFoliofiscal());
//                                sumatotal += preciointerno + (precio * 0.16);
//                                sumatotal -= desc;
//                                x++;
//                            }
//                            arrayc.add(car);
//                        } else {
//                            //Asignar directo ya que no interfiere con el total de una factura seleccionada
//                            //No aplica en reciclar codigo por el contador interno de la seleccion
////                            arruuid.add(arrcargoseleccion.get(x).getFoliofiscal());
////                            car.setDescuento(preciointerno + extra);// importe a descontar de cargos
//                            car.setDescuento(dato + extra);
//                            car.setFoliofiscal(folios);
//                            car.setCuenta(arrcargoseleccion.get(x).getCuenta());
//                            car.setSubcuenta(arrcargoseleccion.get(x).getSubcuenta());
//                            car.setCliente(arrcargoseleccion.get(x).getCliente());
//                            car.setReferencia(arrcargoseleccion.get(x).getReferencia());
//                            car.setFecha(arrcargoseleccion.get(x).getFecha());
//                            car.setDescnota(descripcion);
//                            car.setCantidad(pares);
////                            sumatotal += preciointerno;
//                            sumatotal += dato;
//                            extra = 0;
//                            arrayc.add(car);
//                        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcCuenta;
    private javax.swing.JComboBox<String> JcForma;
    private javax.swing.JComboBox<String> JcMetodo;
    private javax.swing.JCheckBox JcUsd;
    private javax.swing.JComboBox<String> JcUso;
    private javax.swing.JLabel JlDesc;
    private javax.swing.JLabel JlIva;
    private javax.swing.JLabel JlNombre;
    private javax.swing.JLabel JlTcambio;
    private javax.swing.JLabel JlTotal;
    private javax.swing.JList<String> Jlcargofac;
    private javax.swing.JLabel Jlsub;
    public javax.swing.JTextField JtCliente;
    private javax.swing.JTable JtDetalle;
    private com.toedter.calendar.JDateChooser JtFecha;
    private javax.swing.JTextArea JtObs;
    private javax.swing.JTextField JtTCambio;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu pop;
    // End of variables declaration//GEN-END:variables
}
