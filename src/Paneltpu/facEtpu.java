/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneltpu;

import Paneles.*;
import DAO.daoAgentes;
import DAO.daocfdi;
import DAO.daoempresa;
import DAO.daofactura;
import DAO.daoxmltpu;
import Dao.Dao_Agente;
import Dao.Dao_Catalogo;
import Modelo.Agentes;
import Modelo.Cliente;
import Modelo.Dfactura;
import Modelo.Empresas;
import Modelo.Formadepago;
import Modelo.Formateodedatos;
import Modelo.Nocolisiontpu;
import Modelo.Poliza;
import Modelo.Sellofiscal;
import Modelo.Usuarios;
import Modelo.cargo;
import Modelo.convertirNumeros;
import Modelo.convertnum;
import Modelo.factura;
import Modelo.metodopago;
import Modelo.usocfdi;
import Server.Serverprod;
import Server.Serverylite;
import java.sql.Connection;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import mx.sat.cfd40.timbrarXML;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author GATEWAY1-
 */
public class facEtpu extends javax.swing.JPanel {

    public String nombre, empresa, empresarcpt, empresacob;
    public Connection sqlcfdi, sqlempresa;
    public Connection ACobranza, rcpt, cpt, cobB;
    Serverylite slite = new Serverylite();
    Serverprod prod = new Serverprod();
    public ArrayList<Formadepago> arrfpago = new ArrayList<>();
    public ArrayList<usocfdi> arruso = new ArrayList<>();
    public ArrayList<metodopago> arrmetodo = new ArrayList<>();
    public ArrayList<Agentes> arragente = new ArrayList<>();
    public ArrayList<Cliente> arrcliente = new ArrayList<>();
    daocfdi dcfdi = new daocfdi();
    double descuentos;
    double impuestos;
    double subtotal;
    double total;
    public Usuarios u;
    String relacion = "";
    String traslado = "1";

    //para factura relacionada
    ArrayList<cargo> arrcargo = new ArrayList<>();
    ArrayList<cargo> arrcargoseleccion = new ArrayList<>();//cargos seleccionados
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form Cliente1
     */
    public facEtpu() {
        initComponents();
        JcPublico.setVisible(false);
        setdolar();
        generatabla();

//        iniciarconexiones();  Solo si se usa solo la clase si no se pasan directamente desde facturacion
// carga en combos los catalogos del sat
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        pop = new javax.swing.JPopupMenu();
        JmEliminarren = new javax.swing.JMenuItem();
        JtDescuento = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        JcMetodo = new javax.swing.JComboBox<>();
        JcForma = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        JcUso = new javax.swing.JComboBox<>();
        Jlfp = new javax.swing.JLabel();
        JlUso = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        JcPublico = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Jlsub = new javax.swing.JLabel();
        JlDesc = new javax.swing.JLabel();
        JlIva = new javax.swing.JLabel();
        JlTotal = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtObs = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        JsRel = new javax.swing.JScrollPane();
        JlRel = new javax.swing.JList<>();
        JlTcambio1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        JcAgente = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        JcCliente = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        JcUsd1 = new javax.swing.JCheckBox();
        JtTCambio1 = new javax.swing.JTextField();
        JlTcambio2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        JmEliminarren.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/eraser_icon-icons.com_60679.png"))); // NOI18N
        JmEliminarren.setText("Eliminar linea");
        JmEliminarren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JmEliminarrenActionPerformed(evt);
            }
        });
        pop.add(JmEliminarren);

        setBackground(new java.awt.Color(255, 255, 255));

        JtDescuento.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JtDescuento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtDescuento.setText("0");
        JtDescuento.setBorder(null);
        JtDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtDescuentoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Descuento");

        jSeparator1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Metodo de Pago");

        JcMetodo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcMetodoActionPerformed(evt);
            }
        });

        JcForma.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcFormaActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel16.setText("Forma de Pago");

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Uso Cfdi");

        JcUso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcUso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JcMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JcForma, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Jlfp, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JlUso, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JcUso, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(JcMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16)
                        .addComponent(JcForma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)
                        .addComponent(JcUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlfp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlUso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JtDetalle.setSelectionBackground(new java.awt.Color(213, 215, 250));
        JtDetalle.setSelectionForeground(new java.awt.Color(0, 0, 0));
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        JcPublico.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcPublico.setText("Sin iva");
        JcPublico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcPublicoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Subtotal");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Descuento");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setText("Iva");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setText("Total");

        Jlsub.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Jlsub.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlDesc.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlIva.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlsub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlIva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Jlsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JlTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar factura");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        JtObs.setColumns(8);
        JtObs.setRows(3);
        jScrollPane2.setViewportView(JtObs);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Observaciones");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Refresh_36729.png"))); // NOI18N
        jLabel3.setToolTipText("Actualiza datos");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        JlRel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        JlRel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JlRelMousePressed(evt);
            }
        });
        JlRel.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                JlRelValueChanged(evt);
            }
        });
        JsRel.setViewportView(JlRel);

        JlTcambio1.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        JlTcambio1.setText("Relacion de factura");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(JlTcambio1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(JsRel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JlTcambio1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JsRel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/propagation_calculator_calc_6110.png"))); // NOI18N
        jLabel13.setToolTipText("Relacion de facturas");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel13MousePressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel18.setText("Agentes");

        jLabel20.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jLabel20.setText("Cliente");

        JcCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JcClienteItemStateChanged(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Recursos/bordemorado4x4.png")))); // NOI18N

        JcUsd1.setBackground(new java.awt.Color(255, 255, 255));
        JcUsd1.setText("USD - Dolares");
        JcUsd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsd1ActionPerformed(evt);
            }
        });

        JtTCambio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtTCambio1ActionPerformed(evt);
            }
        });

        JlTcambio2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JlTcambio2.setText("Tipo de cambio");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JcUsd1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JtTCambio1)
                    .addComponent(JlTcambio2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JcUsd1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(JlTcambio2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JtTCambio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/new.png"))); // NOI18N
        jLabel5.setToolTipText("Añadir Renglones");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JtDescuento)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JcPublico))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JcAgente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel2)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(6, 6, 6))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(69, 69, 69)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel20)
                                    .addComponent(JcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(JcAgente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(21, 21, 21)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(JtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(JcPublico))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void cargacombos() {//catalogos de Sat
        DefaultComboBoxModel metodo = new DefaultComboBoxModel();
        DefaultComboBoxModel forma = new DefaultComboBoxModel();
        DefaultComboBoxModel uso = new DefaultComboBoxModel();
        DefaultComboBoxModel cliente = new DefaultComboBoxModel();
        for (Formadepago arrfpago1 : arrfpago) {
            forma.addElement(arrfpago1.getFormapago() + " - " + arrfpago1.getConcepto());
        }
        metodo.addElement("PUE - PAGO EN UNA EXHIBICION");

        for (usocfdi arruso1 : arruso) {
            uso.addElement(arruso1.getusocfdi() + " - " + arruso1.getDescripcion());
        }
        for (Cliente arruso1 : arrcliente) {
            cliente.addElement(arruso1.getNombre());
        }
        JcForma.setModel(forma);
        JcMetodo.setModel(metodo);
        JcUso.setModel(uso);
        JcCliente.setModel(cliente);
        setAgentes();
    }

    /**
     * Se obtienen todos los cliente, se cargan y se busca cual es el agente que
     * llega con la salida y da la opcion de elegir cualquier otro
     */
    private void setAgentes() {
        DefaultComboBoxModel ag = new DefaultComboBoxModel();
        //daoAgentes da = new daoAgentes();
        Dao_Agente da1 = new Dao_Agente();
        arragente = da1.getagentes_all(ACobranza);
        //arragente = da.getAgentes(ACobranza);
        for (Agentes agent : arragente) {
            ag.addElement(agent.getNombre());
        }
        JcAgente.setModel(ag);
        setagenteindividual();
    }

    /**
     * Autoselecciona el agente predeterminado del cliente
     */
    private void setagenteindividual() {
        for (int i = 0; i < arragente.size(); i++) {
            if (arrcliente.get(JcCliente.getSelectedIndex()).getAg().getIdagente() == arragente.get(i).getIdagente()) {
                JcAgente.setSelectedIndex(i);
            }
        }
    }

    private void JtDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtDescuentoActionPerformed
        if (verificafloat(JtDescuento.getText())) {
//            generatabla();
        } else {
            JOptionPane.showMessageDialog(null, "Error, solo colocar numeros enteros en el descuento");
        }
    }//GEN-LAST:event_JtDescuentoActionPerformed

    private void JcMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcMetodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcMetodoActionPerformed

    private void JcFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcFormaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcFormaActionPerformed

    private void JcUsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsoActionPerformed
        String regimen = arrcliente.get(JcCliente.getSelectedIndex()).getRegimen();
        String uso = arruso.get(JcUso.getSelectedIndex()).getusocfdi();
        verificaregimen(sqlcfdi, regimen, uso);
    }//GEN-LAST:event_JcUsoActionPerformed

    private void JcPublicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcPublicoActionPerformed
//        generatabla();
    }//GEN-LAST:event_JcPublicoActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        if (checkclvprov() && checkunidad()) {
            setfactura();
        } else {
            JOptionPane.showMessageDialog(null, "Error al verificar la clave de producto, intentalo de nuevo");
        }
    }//GEN-LAST:event_jLabel2MousePressed

    /**
     * Verifica que la clave de producto exista antes de pasar a la factura
     *
     * @return boolean respuesta
     */
    private boolean checkclvprov() {
        boolean resp = true;
        Dao_Catalogo dc = new Dao_Catalogo();
        for (int i = 0; i < JtDetalle.getRowCount(); i++) {
            String cv = JtDetalle.getValueAt(i, 1).toString();
            if (!dc.getClaveprod_Var(cv)) {
                resp = false;
                JtDetalle.setValueAt("", i, 1);
                break;
            }
        }
        return resp;
    }

    /**
     * Verifica que exista la unidad en lo que se introducjo en la tabla
     *
     * @return
     */
    private boolean checkunidad() {
        boolean resp = true;
        Dao_Catalogo dc = new Dao_Catalogo();
        for (int i = 0; i < JtDetalle.getRowCount(); i++) {
            String cv = JtDetalle.getValueAt(i, 7).toString();
            if (!dc.getUnidad_Var(cv)) {
                resp = false;
                JtDetalle.setValueAt("", i, 7);
                break;
            }
        }
        if (!resp) {
            JOptionPane.showMessageDialog(null,
                    "ERROR AL VALIDAR LA UNIDAD DEL PRODUCTO, INTENTE DE NEUVO",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        return resp;
    }

    private void setfactura() {
        if (JtDetalle.getRowCount() != 0) {
            boolean a = verificafloat(JtDescuento.getText());
            boolean a1 = verificadetalle();
            if (!a) {
                JOptionPane.showMessageDialog(null, "Error, solo colocar numeros enteros en el descuento");
            }
            if (!a1) {
                JOptionPane.showMessageDialog(null, "Error, Verifica los precios y cantidades");
            }
//            System.out.println(a + " - " + a1);
            if (!a && !a1) {
                JtDescuento.requestFocus();
            } else {
                factura f = new factura();
                String condicion;
                java.util.Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
                daofactura dfac = new daofactura();
                ArrayList<Dfactura> arrf = new ArrayList<>();
                Formateodedatos fd = new Formateodedatos();
                if (JcPublico.isSelected()) {//Setear impuestos
                    f.setIva(0);
                    f.setImpuestos(0);
                } else {
                    f.setIva(16);
                }
                // fin setear impuestos
                Nocolisiontpu n = new Nocolisiontpu();
                f.setFolio(dfac.getmaxfoliotpu(cpt, "FAC"));//Obtiene y setea el foliomaximo de *documentos
                n.setConnecxiones(cpt, f.getFolio(), "FAC");
                n.start();
//                JOptionPane.showMessageDialog(null, "Espera al msj de Aceptacion de folio "+n.isAlive());
                do {

                } while (n.isAlive());
                int rowc = JcCliente.getSelectedIndex();
                f.setExportacion("01");
                f.setFolio(n.getfolio());
                f.setFoliokardex(0);// folio del kardex
                f.setClaveusuario(u.getUsuario());
//                Obtiene la serie fiscal de acuerdo al turno
                f.setSerie("FAC");
                f.setTipofac("E");
                f.setTurno(u.getTurno());
                f.setConceptos(15);
                f.setFecha(sdf.format(date));
                f.setIdcliente(arrcliente.get(rowc).getCvecliente());
                f.setNombre(arrcliente.get(rowc).getNombre());
                f.setRfc(arrcliente.get(rowc).getRfc());
                f.setCalle(arrcliente.get(rowc).getCalle());
                f.setNexterior("0");
                f.setNinterior("0");
                f.setColonia(arrcliente.get(rowc).getColonia());
                f.setMunicipio(arrcliente.get(rowc).getCiudad());
                f.setEstado(arrcliente.get(rowc).getEstado());
                f.setPais(arrcliente.get(rowc).getPais());
                f.setCp(arrcliente.get(rowc).getCp());
                f.setRegimen(arrcliente.get(rowc).getRegimen());
                f.setPlazo(arrcliente.get(rowc).getPlazo());
                f.setObservaciones(JtObs.getText().toUpperCase());
                f.setTotalcajas(0);
                f.setCantidadxcaja(0);
                f.setFormapago(arrfpago.get(JcForma.getSelectedIndex()).getFormapago());
                f.setMetodopago("PUE");
                f.setDescmetodop("PAGO EN UNA SOLA EXHIBICION");
                f.setUsocfdi(arruso.get(JcUso.getSelectedIndex()).getusocfdi());
                condicion = (f.getMetodopago().equals("PUE")) ? "Contado" : "Credito";
                f.setCondicion(condicion);
                f.setLugarexpedicion(fd.Lugarexp());
                f.setAgente(arrcliente.get(rowc).getAg().getIdagente());

                if (JcUsd1.isSelected()) {
                    f.setMoneda("USD");
                    f.setTipocambio(Double.parseDouble(JtTCambio1.getText()));
                } else {
                    f.setMoneda("MXN");
                    f.setTipocambio(1);
                }
                f.setTiporelacion(relacion);
                f.setEmpresa("1");
                String folios = "";
                String facturas = "";
                ArrayList<String> arruuid = new ArrayList<>();
                if (!relacion.equals("")) {
                    for (int i = 0; i < arrcargoseleccion.size(); i++) {
                        if (i == 0) {
                            folios = arrcargoseleccion.get(i).getFoliofiscal();
                            facturas = arrcargoseleccion.get(i).getReferencia();
                        } else {
                            folios += ", " + arrcargoseleccion.get(i).getFoliofiscal();
                            facturas += ", " + arrcargoseleccion.get(i).getReferencia();
                        }
                        arruuid.add(arrcargoseleccion.get(i).getFoliofiscal());
                    }
                    f.setRefncredito(facturas);
                    f.setSeriefoliofiscalorig(folios);
                    f.setArruuid(arruuid);
                }
                double iva = 0.00;
                if (!JcPublico.isSelected()) {// verifica 
                    iva = 0.16;
                }
                int totalpares = 0;// Se usa para la tabla facturas
//                impuestos = 0;
//                descuentos = 0;
//                subtotal = 0;
//                Detallado de productos selecionados
                for (int i = 0; i < JtDetalle.getRowCount(); i++) {
                    Dfactura df = new Dfactura();
                    String sodigosat = JtDetalle.getValueAt(i, 1).toString();
                    double precio = fd.formatdecimalv2(Double.parseDouble(JtDetalle.getValueAt(i, 3).toString()));
                    double tpares = fd.formatdecimalv2(Double.parseDouble(JtDetalle.getValueAt(i, 2).toString()));
                    double desc = Double.parseDouble(JtDescuento.getText()) / 100;
                    String maq = JtDetalle.getValueAt(i, 0).toString();
                    double descuento = fd.formatdecimalv2((tpares * precio) * desc);
                    String unidad = "";
                    df.setDescripcion(maq);
                    df.setRenglon(i + 1);
                    df.setProducto(0);
                    //Formatea cantidad y no en la consulta
                    df.setCantrestante(0);
                    df.setCantidadfloat(tpares);
                    df.setCodigo(sodigosat);
                    df.setUmedida(unidad);
                    df.setDureza("N/A");
                    df.setId_dpedimento(0);
                    df.setId_pedimento(0);
                    df.setDescumedida("");
                    df.setPrecio(fd.formatdecimalv2(precio));
                    df.setBase(fd.formatdecimalv2(precio * tpares));
                    df.setImpuesto("002");
                    df.setTipofactor("Tasa");
//                        Este en especial por cuestion de centavos
                    double dimpu = ((tpares * precio) - descuento) * iva;
                    df.setImporta(fd.formatdecimalv2(dimpu));
//                        df.setImporta(Double.parseDouble(formateador.format(((tpares * precio) - descuento) * iva)));
//                        df.setDescuento(Double.parseDouble(formateador.format(descuento)));
                    String as1 = String.valueOf(fd.formatdecimalv2(descuento));
                    df.setDescuento(Double.parseDouble(as1));
                    df.setTasaocuota(iva + "");

                    arrf.add(df);
                    totalpares += tpares;
//                        subtotal += df.getBase();
//                        impuestos += Double.parseDouble(as);
//                        descuentos += Double.parseDouble(as1);
                }
//                total = subtotal - descuentos + impuestos;
                f.setTotalpares(totalpares);
                f.setArr(arrf);
                f.setImpuestos(fd.formatdecimalv2(impuestos));
                f.setDescuento(fd.formatdecimalv2(descuentos));
                f.setSubtotal(fd.formatdecimalv2(subtotal));
                f.setTotal(fd.formatdecimalv2(total));
                //Obtiene los asientos contable de cobranza
                //Todo este bloque es para la realizacion de las polizas
                ArrayList<Poliza> arrpoliza = dfac.getasientoscontable(ACobranza);
                ArrayList<Poliza> arrpolizas = new ArrayList<>();
                int conta = 0;
//                Polizas
                for (int i = 0; i < arrpoliza.size(); i++) {
                    String c = arrpoliza.get(i).getCuentalarga();
                    String cuenta = fd.convertcliente(c + fd.formatclientedigito(arrcliente.get(rowc).getCvecliente() + ""));
                    Poliza p = new Poliza();
                    p.setCuenta(1);
                    p.setSub(5);
                    p.setFecha(sdf.format(date));
                    p.setFolio(f.getFolio() + "");
                    p.setIdcliente(arrcliente.get(rowc).getCvecliente());
                    p.setIdentificacion("M");
                    p.setCuentalarga(cuenta);
                    p.setCa(arrpoliza.get(i).getCa());
                    p.setOrden(arrpoliza.get(i).getOrden());
                    p.setDiario("000");
                    p.setMext("            0.00");
                    p.setAcumulativo(arrpoliza.get(i).getAcumulativo());
                    p.setConcepto(arrpoliza.get(i).getConcepto() + f.getFolio() + "");
                    if (arrpoliza.get(i).getCuentalarga().equals("4005")) {
                        p.setReferencia(arrcliente.get(rowc).getAg().getIdcanal() + "1" + fd.convierteagente(String.valueOf(arrcliente.get(rowc).getAgente())) + " 4.001");
                    } else {
                        p.setReferencia("4.001");
                    }
                    switch (conta) {
                        case 0:
                            p.setImporte(fd.ftotal(String.valueOf(fd.formatdecimalv2(total))));
                            conta++;
                            break;
                        case 1:
                            p.setImporte(fd.ftotal(String.valueOf(fd.formatdecimalv2(impuestos))));
                            conta++;
                            break;
                        case 2:
                            p.setImporte(fd.ftotal(String.valueOf(fd.formatdecimalv2(subtotal - descuentos))));
                            conta = 0;
                            break;
                    }
                    arrpolizas.add(p);
                }
                f.setArrpolizas(arrpolizas);
//              Aqui termina el bloque de las polizas    
//                Tiene 3 procesos de commit, 1. la fatura. 2. los sellos y cadena original, 3. sellos fiscales
                if (arrf.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Error al realizar factura, intente capturar de nuevo");
                    vaciarcampos();
                } else {
                    int id = dfac.nuevafactpu_Especial(cpt, f, ACobranza);
                    Sellofiscal s;
                    //Si hay algun error en la insercion que no se ejecute
                    if (id != 0) {
                        daoxmltpu dx = new daoxmltpu();
                        f.setId(id);
                        dx.generarfac(f, cpt, sqlempresa);
                        timbrarXML tim = new timbrarXML();
                        // Una ves generado el xml se manda al sat y obtener los sellos
                        s = tim.timbrar(f.getSerie() + "_" + f.getFolio(), nombre, sqlempresa, f.getEmpresa());
                        dfac.Updatesellofiscaltpu(cpt, s, id);
                        setreport(f.getFolio(), f.getRegimen(), f.getMoneda(), "FAC");
                        JOptionPane.showMessageDialog(null, "Proceso terminado: \n " + s.getEstado());
                        vaciarcampos();
                    }
                }
            }
        }
    }

    /**
     *
     * @param folio Folio de la factura
     * @param arrmetodo Array que contiene el metodo de pago
     * @param arruso Array que contiene el uso de cfdi
     * @see Despliegue y creacion del archivo pdf con los datos previamente
     * creados El reporte fue previamente creado en un modulo anterior que solo
     * creaba el pdf el proyecto se llama "Facturas"
     *
     */
    private void setreport(int folio, String regimen, String moneda, String serie) {
        try {
            daoempresa d = new daoempresa();
//            Identificar si es de ath o uptown
            String n = "1";
            String logo = "AF.png";
            String ser;
            String report;

            Empresas e = d.getempresarfc(sqlempresa, n);
            String lugar = "BLVD LAS TORRES 516 DEL VALLE SAN FRANCISCO DEL RINCON GUANAJUATO " + e.getCp();
//             fin identificar empresa
            Map parametros = new HashMap();
//            Clase que contiene el numero convertido a caracter
            convertnum conv = new convertnum();
            convertirNumeros cnum = new convertirNumeros();
            DecimalFormat formateador = new DecimalFormat("####.##");//para los decimales
            String numeros = formateador.format(total);
            String letratotal = "";
            if (serie.equals("T")) {
                letratotal = "CERO PESOS, 00/100";
                ser = "T";
                report = "index_traslado";
            } else {
                letratotal = cnum.Convertir(numeros, true, moneda);
                ser = "FAC";
                report = "indextpu";
            }
//            Agregar parametros al reporte
            parametros.put("folio", folio);
//            parametros.put("totalletra", conv.controlconversion(total).toUpperCase());
            parametros.put("totalletra", letratotal);
            parametros.put("nombre", e.getNombre());
            parametros.put("rfc", e.getRfc());
            parametros.put("regimen", e.getRegimen());
            parametros.put("lugar", lugar);
            parametros.put("comprobante", e.getNumcertificado());
            parametros.put("logo", "C:\\af\\bin\\" + logo);// direcion predefinida, posible cambiar en un futuro
            parametros.put("metodo", arrmetodo.get(JcMetodo.getSelectedIndex()).getDescripcion());
            parametros.put("uso", arruso.get(JcUso.getSelectedIndex()).getDescripcion());
            parametros.put("serie", ser);
            parametros.put("regimencliente", regimen);

            JasperReport jasper = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportestpu/" + report + ".jasper"));
            JasperPrint print = JasperFillManager.fillReport(jasper, parametros, cpt);
            JasperViewer ver = new JasperViewer(print, false); //despliegue de reporte
            ver.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ver.setTitle("FAC " + folio);
            ver.setVisible(true);
//            Exportacion al archivo pdf
            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File(e.getXml() + "\\" + ser + "_" + folio + ".pdf"));
            exporter.exportReport();
        } catch (JRException ex) {
            Logger.getLogger(fac1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        if (evt.getButton() == 3) {// activar con clic derecho
            pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        actualizaimportes();
    }//GEN-LAST:event_jLabel3MousePressed
    /**
     * carga de facturas para relacion, por default es relacion "07"
     *
     * @param evt
     */
    private void jLabel13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MousePressed
        int row = JcCliente.getSelectedIndex();
        Formateodedatos fd = new Formateodedatos();
        FactsReltpu f = new FactsReltpu(null, true);
        daofactura df = new daofactura();
        //Busca las facturas disponibles con el cliente y turno
        arrcargo = df.getfactstoFACReltpu(cpt, arrcliente.get(row).getCvecliente() + "", fd.getbd_tocargo(u.getTurno()));
        f.arrcargo = arrcargo;
        f.setVisible(true);
        arrcargoseleccion = f.arrcargoseleccion;
        if (!arrcargoseleccion.isEmpty()) {
            llenalista();
            relacion = "07";
        }
    }//GEN-LAST:event_jLabel13MousePressed

    private void JlRelValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_JlRelValueChanged

    }//GEN-LAST:event_JlRelValueChanged

    private void JlRelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JlRelMousePressed

    }//GEN-LAST:event_JlRelMousePressed

    private void JcUsd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsd1ActionPerformed
        setdolar();
    }//GEN-LAST:event_JcUsd1ActionPerformed

    private void JtTCambio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtTCambio1ActionPerformed
        if (!verificafloat(JtTCambio1.getText().toUpperCase())) {
            JOptionPane.showMessageDialog(null, "Error, Introduce un valor valido en el tipo de cambio");
            JtTCambio1.requestFocus();
        }
    }//GEN-LAST:event_JtTCambio1ActionPerformed

    private void JcClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JcClienteItemStateChanged
        setagenteindividual();
    }//GEN-LAST:event_JcClienteItemStateChanged

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
        String[] rowt = {"", "", "", "", "", "", "", ""};
        model.addRow(rowt);
    }//GEN-LAST:event_jLabel5MousePressed

    private void JmEliminarrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JmEliminarrenActionPerformed
        int row = JtDetalle.getSelectedRow();
        eliniarrenglon(row);
    }//GEN-LAST:event_JmEliminarrenActionPerformed

    private void llenalista() {
        DefaultListModel<String> model = new DefaultListModel<>();
        for (cargo arrcargoseleccion1 : arrcargoseleccion) {
            model.addElement(arrcargoseleccion1.getReferencia() + " - " + arrcargoseleccion1.getDescuento());
        }
        JlRel.setModel(model);
    }

    private void vaciarcampos() {
        if (!arrcargo.isEmpty()) {
            arrcargo.clear();
        }
        if (!arrcargoseleccion.isEmpty()) {
            arrcargoseleccion.clear();
        }
        JcUsd1.setSelected(false);
        setdolar();
        relacion = "";
        JtDescuento.setText("0");
        JtObs.setText("");
        cargacombos();
        llenalista();
        for (int i = 0; i < JtDetalle.getRowCount(); i++) {
            model.removeRow(i);
        }
        model.setNumRows(0);
    }

    /**
     * En esta ocasion solo se cargará una ves esta funcion, ya que lo que se
     * moverá es el modelo.
     */
    public final void generatabla() {//Tabla actualizable con respecto al descuento e iva
        model.addColumn("Material");//0  estilo combinacion corrida
        model.addColumn("Clave SAT");//1
        model.addColumn("Cantidad");//2
        model.addColumn("Precio");//3
        model.addColumn("Descuento");//4
        model.addColumn("Impuestos");//5
        model.addColumn("Importe");//6
        model.addColumn("Unidad");//7
        JtDetalle.setModel(model);
    }

    private void despliegaimportes(Formateodedatos fd) {
        double desc = Double.parseDouble(JtDescuento.getText()) / 100;
        descuentos = subtotal * desc;
        impuestos = fd.formatdecimalv2(impuestos);
        //impuestos = (subtotal - descuentos) * iva;
        total = impuestos + subtotal - descuentos;
        JlIva.setText(impuestos + "");
        Jlsub.setText(fd.formatdecimalv2(subtotal) + "");
        JlDesc.setText(fd.formatdecimalv2(descuentos) + "");
        JlTotal.setText(fd.formatdecimalv2(total) + "");
    }

    /**
     * Actualiza precio, cantidades, importes y totales dentro de la tabla Y
     * desplegado el subtotal, iva y total de todos los campos seleccionados
     */
    private void actualizaimportes() {
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        double iva = 0;
        boolean resp = true;
        if (!JcPublico.isSelected()) {// verifica 
            iva = 0.16;
        }
        Formateodedatos fd = new Formateodedatos();
        for (int i = 0; i < JtDetalle.getRowCount(); i++) {
            if (verificacantidades(i) && verificacampotexto(i)) {// que no se pase algo que no sea un numero
                JOptionPane.showMessageDialog(null, "Error, Verifica los precios");
                JtDetalle.setValueAt("0", i, 3);
                JtDetalle.setValueAt("0", i, 2);
                resp = false;
                break;
            } else {
                double tpares = Double.parseDouble(JtDetalle.getValueAt(i, 2).toString());
                double desc = Double.parseDouble(JtDescuento.getText()) / 100;
                double precio = Double.parseDouble(JtDetalle.getValueAt(i, 3).toString());
                double descuento = (tpares * precio) * desc;
                JtDetalle.setValueAt(precio, i, 3);
                JtDetalle.setValueAt(fd.formatdecimalv2(descuento), i, 4);
                JtDetalle.setValueAt(fd.formatdecimalv2(((tpares * precio) - descuento) * iva), i, 5);
                JtDetalle.setValueAt(fd.formatdecimalv2((tpares * precio)), i, 6);
                //suma de totales
                descuentos += fd.formatdecimalv2(descuento);
                subtotal += fd.formatdecimalv2(tpares * precio);
                double imp = ((tpares * precio) - descuento) * iva;
                impuestos += fd.formatdecimalv2(imp);
            }
        }
        if (resp) {// Si, y solo si es un entero o decimal
            //Variables para manejo de totales
            despliegaimportes(fd);
        }
        //Tambien verificar el clave del proveedor al momento de actualizar valores
        if (!checkclvprov()) {
            JOptionPane.showMessageDialog(null, "Verifica la clave del SAT");
        }
        checkunidad();
    }

    private boolean verificacampotexto(int i) {
        boolean resp = true;
        Formateodedatos fd = new Formateodedatos();
        String cad = JtDetalle.getValueAt(i, 0).toString();
        if (fd.verificaStringsSC(cad) && !cad.equals("") && !cad.isEmpty()) {
            JtDetalle.setValueAt("", i, 0);
            JOptionPane.showMessageDialog(null,
                    "Error al validar el producto, tiene caracteres invalidos o esta vacio");
            resp = false;
        }
        return resp;
    }

    /**
     * Verifica los campos de cantidades que cumplan que sean enteros o
     * decimales, que no sea cero, y que no esten vacioas
     *
     * @param i
     * @return
     */
    private boolean verificacantidades(int i) {
        boolean resp = true;
        String cant = JtDetalle.getValueAt(i, 2).toString();
        String precio = JtDetalle.getValueAt(i, 3).toString();
//        System.out.println(cant + " --- " + precio);
        if (verificafloat(cant) && verificafloat(precio)
                && !cant.isEmpty() && !precio.isEmpty()
                && (!cant.equals("0") && !precio.equals("0"))
                && (!cant.equals("") && !precio.equals(""))) {
            return false;
        }
        return resp;
    }

    private void setdolar() {
        if (JcUsd1.isSelected()) {
            JlTcambio2.setVisible(true);
            JtTCambio1.setVisible(true);
            JtTCambio1.requestFocus();
        } else {
            JlTcambio2.setVisible(false);
            JtTCambio1.setVisible(false);
        }
    }

    private boolean verificafloat(String cad) {
        boolean resp = false;
        String patt = "[0-9]+||[0-9]+.[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    /**
     * Verifica precio y cantidad de cada renglon de la tabla, si los campos no
     * son validaos regresa un false
     *
     * @return
     */
    private boolean verificadetalle() {
        boolean resp = true;
        for (int i = 0; i < JtDetalle.getRowCount(); i++) {
            String precio = JtDetalle.getValueAt(i, 3).toString();
            String cant = JtDetalle.getValueAt(i, 2).toString();
            if (!verificafloat(precio) || !verificafloat(cant)) {
                JtDetalle.setValueAt("", i, 2);
                JtDetalle.setValueAt("", i, 3);
                resp = false;
                break;
            }
        }
        return resp;
    }

    /**
     * Verifica el regimen de acuerdo al uso de cfdi seleccionado
     *
     * @param cfdi
     * @param regimen
     * @param uso
     * @return
     */
    private boolean verificaregimen(Connection cfdi, String regimen, String uso) {
        daocfdi df = new daocfdi();
        boolean a = true;
        String resp = df.getRegimenxuso(cfdi, regimen, uso);
        if (resp.equals("")) {
            JOptionPane.showMessageDialog(null, "Error, El regimen del cliente no se puede usar con este uso cfdi");
            a = false;
        }
        return a;
    }

    /**
     * Eliminar renglon de la tabla
     *
     * @param row
     */
    private void eliniarrenglon(int row) {
        JtDetalle.setValueAt("", row, 0);
        JtDetalle.setValueAt("", row, 1);
        JtDetalle.setValueAt("", row, 2);
        JtDetalle.setValueAt("", row, 3);
        JtDetalle.setValueAt("", row, 4);
        JtDetalle.setValueAt("", row, 5);
        JtDetalle.setValueAt("", row, 6);
        JtDetalle.setValueAt("", row, 7);
        model.removeRow(JtDetalle.getSelectedRow());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcAgente;
    private javax.swing.JComboBox<String> JcCliente;
    private javax.swing.JComboBox<String> JcForma;
    private javax.swing.JComboBox<String> JcMetodo;
    private javax.swing.JCheckBox JcPublico;
    private javax.swing.JCheckBox JcUsd1;
    private javax.swing.JComboBox<String> JcUso;
    private javax.swing.JLabel JlDesc;
    private javax.swing.JLabel JlIva;
    private javax.swing.JList<String> JlRel;
    private javax.swing.JLabel JlTcambio1;
    private javax.swing.JLabel JlTcambio2;
    private javax.swing.JLabel JlTotal;
    private javax.swing.JLabel JlUso;
    private javax.swing.JLabel Jlfp;
    private javax.swing.JLabel Jlsub;
    private javax.swing.JMenuItem JmEliminarren;
    private javax.swing.JScrollPane JsRel;
    private javax.swing.JTextField JtDescuento;
    private javax.swing.JTable JtDetalle;
    private javax.swing.JTextArea JtObs;
    private javax.swing.JTextField JtTCambio1;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPopupMenu pop;
    // End of variables declaration//GEN-END:variables
}
