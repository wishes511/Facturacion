/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneltpu;

import Paneles.*;
import DAO.daoClientes;
import DAO.daocfdi;
import DAO.daoempresa;
import DAO.daofactura;
import DAO.daoxmlTraslado;
import Modelo.Agentes;
import Modelo.Cliente;
import Modelo.Dfactura;
import Modelo.Empresas;
import Modelo.Formadepago;
import Modelo.Formateo_Nempresas;
import Modelo.Sellofiscal;
import Modelo.Usuarios;
import Modelo.factura;
import Modelo.metodopago;
import Modelo.usocfdi;
import Server.Serverprod;
import Server.Serverylite;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import mx.sat.cfd40.timbrarXML;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author GATEWAY1-
 */
public class cfditransportetpu extends javax.swing.JPanel {

    public String nombre, empresa, empresarcpt, empresacob;
    public Connection sqlcfdi, sqlempresa;
    public Connection ACobranza, rcpt, cpt, CobranzaB;
    Serverylite slite = new Serverylite();
    Serverprod prod = new Serverprod();
    public ArrayList<Formadepago> arrfpago = new ArrayList<>();
    public ArrayList<usocfdi> arruso = new ArrayList<>();
    public ArrayList<metodopago> arrmetodo = new ArrayList<>();
    public ArrayList<Agentes> arragente = new ArrayList<>();
    public ArrayList<Cliente> arrcliente = new ArrayList<>();
    daocfdi dcfdi = new daocfdi();
    double descuentos;
    double impuestos;
    double subtotal;
    double total;
    public Usuarios u;
    String relacion = "";
    DefaultTableModel model = new DefaultTableModel();
    String serie = "A";
    int clic = 0;
    int clic2 = 0;
    int clic3 = 0;

    //kardex para fac
    //para factura relacionada
    /**
     * Creates new form Cliente1
     */
    public cfditransportetpu() {
        initComponents();
        JtFolio1.setVisible(false);
//        setcobb();
        generatabla();
//        cargaclientes();
//        iniciarconexiones();  Solo si se usa solo la clase si no se pasan directamente desde facturacion
// carga en combos los catalogos del sat

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        pop = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel6 = new javax.swing.JLabel();
        JtFolio1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtObs = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        JcCliente = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        JlSerie = new javax.swing.JLabel();

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Cancel_icon-icons.com_54824.png"))); // NOI18N
        jMenuItem1.setText("Quitar linea");
        jMenuItem1.setToolTipText("");
        pop.add(jMenuItem1);

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("Cliente");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel6MousePressed(evt);
            }
        });

        JtFolio1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JtFolio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtFolio1ActionPerformed(evt);
            }
        });

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JtDetalle.setSelectionBackground(new java.awt.Color(213, 215, 250));
        JtDetalle.setSelectionForeground(new java.awt.Color(0, 0, 0));
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar factura");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        JtObs.setColumns(20);
        JtObs.setRows(5);
        jScrollPane2.setViewportView(JtObs);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Observaciones");

        JcCliente.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JcClienteMousePressed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/new.png"))); // NOI18N
        jLabel5.setToolTipText("Actualiza datos");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });

        JlSerie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/sticker_120054A.png"))); // NOI18N
        JlSerie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JlSerieMousePressed(evt);
            }
        });
        JlSerie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JlSerieKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JtFolio1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(375, 375, 375)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JlSerie)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(48, 48, 48))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 751, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(41, 482, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(JtFolio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JlSerie)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(JcCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JtFolio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtFolio1ActionPerformed
//        seleccionfolio();
    }//GEN-LAST:event_JtFolio1ActionPerformed

    private void setcobb(){
        try {
            Serverprod s = new Serverprod();
            CobranzaB=s.getconexionB("RACobranza");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(cfditransportetpu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(cfditransportetpu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(cfditransportetpu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        boolean a1 = checkclaveprod();
        boolean a2 = checkunidad();
//        System.out.println(" - " + a1 + "- " + a2);
        if (!a1 || !a2) {
            JOptionPane.showMessageDialog(null, "Error: Verifica que las claves de prod o Unidad. esten bien");
        } else {
            Formateo_Nempresas fn= new Formateo_Nempresas();
            factura f = new factura();
            String condicion;
            java.util.Date date = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
            daofactura dfac = new daofactura();
            ArrayList<Dfactura> arrf = new ArrayList<>();
            f.setImpuestos(0);
            f.setFolio(dfac.getmaxfolio(cpt, "TR"));
            int rowc = JcCliente.getSelectedIndex();
            f.setExportacion("01");
            f.setClaveusuario(u.getUsuario());
            f.setSerie("TR");
            f.setTurno(u.getTurno());
            f.setConceptos(3);
            f.setFecha(sdf.format(date));
            f.setIdcliente(arrcliente.get(rowc).getCvecliente());
            f.setNombre(arrcliente.get(rowc).getNombre());
            f.setRfc(arrcliente.get(rowc).getRfc());
            f.setCalle(arrcliente.get(rowc).getCalle());
            f.setNexterior("0");
            f.setNinterior("0");
            f.setColonia(arrcliente.get(rowc).getColonia());
            f.setMunicipio(arrcliente.get(rowc).getCiudad());
            f.setEstado("");
            f.setPais("");
            f.setCp(arrcliente.get(rowc).getCp());
            f.setRegimen(arrcliente.get(rowc).getRegimen());
            f.setPlazo(arrcliente.get(rowc).getPlazo());
            f.setObservaciones(JtObs.getText().toUpperCase());
            f.setTotalcajas(0);
            f.setCantidadxcaja(0);
            f.setUsocfdi("S01");
            f.setCondicion("contado");
            f.setLugarexpedicion(fn.getLugar_exp());
            f.setAgente(arrcliente.get(rowc).getAgente());
            f.setTiporelacion("");
            f.setEmpresa(fn.getEmpresa(u.getTurno(), empresa));
            f.setMetodopago("");
            f.setPedido("");
            f.setTiposerie("TRANSPORTE");
            f.setMoneda("XXX");
            f.setFormapago("");
            f.setFoliofiscalorig("");
            int totalpares = 0;// Se usa para la tabla facturas
            impuestos = 0;
            descuentos = 0;
//                Detallado de productos selecionados
            for (int i = 0; i < JtDetalle.getRowCount(); i++) {
                Dfactura df = new Dfactura();
                int tpares = Integer.parseInt(JtDetalle.getValueAt(i, 2).toString());
                df.setRenglon(i + 1);
                df.setProducto(0);
                df.setCantidad(tpares);
                df.setDescripcion(JtDetalle.getValueAt(i, 0).toString());
                df.setCodigo(JtDetalle.getValueAt(i, 1).toString());
                df.setUmedida(JtDetalle.getValueAt(i, 3).toString());
                df.setDescumedida("");
                df.setPrecio(0);
                df.setBase(0);
                df.setImpuesto("002");
                df.setTipofactor("Tasa");
                arrf.add(df);
            }
            f.setArr(arrf);
            f.setTotalpares(totalpares);
            f.setImpuestos(0);
            f.setSubtotal(0);
            f.setTotal(0);
            //id del documento recien añadido
//                Tiene 3 procesos de commit, 1. la fatura. 2. los sellos y cadena original, 3. sellos fiscales
            if (arrf.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Error al realizar factura, intente capturar de nuevo");
                vaciarcampos();
            } else {
                Sellofiscal s = new Sellofiscal();
//                    int nfolio = dfac.getmaxtraslado(cpt) + 1;
//                    f.setFolio(nfolio);
                int id = dfac.nuevafacTraslado(cpt, rcpt, f);
                if (id != 0) {
//                    System.out.println("Exito traslado");
                    daoxmlTraslado dx = new daoxmlTraslado();
                    f.setId(id);
                    dx.generarfac(f, cpt, sqlempresa);
                    timbrarXML tim = new timbrarXML();
                    s = tim.timbrar(f.getSerie() + "_" + f.getFolio(), nombre, sqlempresa, f.getEmpresa());
                    dfac.Updatesellofiscal(cpt, s, id);
                    setreport(f.getFolio(), f.getRegimen(), "XXX", "TR");
                    JOptionPane.showMessageDialog(null, "Proceso de facturacion y traslado terminado: \n " + s.getEstado());
                    vaciarcampos();
                }
            }
        }
    }//GEN-LAST:event_jLabel2MousePressed

    private void setreport(int folio, String regimen, String moneda, String serie) {
        Formateo_Nempresas fn= new Formateo_Nempresas();
        try {
            daoempresa d = new daoempresa();
//            Identificar si es de ath o uptown
            String n = fn.getEmpresa(u.getTurno(), empresa);
            String logo = (empresa.equals("UptownCPT")) ? "Uptown.jpg" : "AF.png";
            String ser;
            String report;

            Empresas e = d.getempresarfc(sqlempresa, n);
//             fin identificar empresa
            Map parametros = new HashMap();
//            Clase que contiene el numero convertido a caracter
            String letratotal = "CERO PESOS, 00/100";
            ser = "TR";
//            Agregar parametros al reporte
            parametros.put("folio", folio);
            parametros.put("totalletra", letratotal);
            parametros.put("nombre", e.getNombre());
            parametros.put("rfc", e.getRfc());
            parametros.put("regimen", e.getRegimen());
            parametros.put("lugar", e.getCp());
            parametros.put("comprobante", e.getNumcertificado());
            parametros.put("logo", "C:\\af\\bin\\" + logo);// direcion predefinida, posible cambiar en un futuro
            parametros.put("serie", ser);
            parametros.put("regimencliente", regimen);

            JasperReport jasper = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportes/index_traslado.jasper"));
            JasperPrint print = JasperFillManager.fillReport(jasper, parametros, cpt);
            JasperViewer ver = new JasperViewer(print, false); //despliegue de reporte
            ver.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ver.setTitle("TR " + folio);
            ver.setVisible(true);
//            Exportacion al archivo pdf
            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File(e.getXml() + "\\" + ser + "_" + folio + ".pdf"));
            exporter.exportReport();
        } catch (JRException ex) {
            Logger.getLogger(fac1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        if (evt.getButton() == 3) {// activar con clic derecho
            pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void jLabel6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MousePressed

    }//GEN-LAST:event_jLabel6MousePressed

    private void JcClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JcClienteMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcClienteMousePressed

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed

        String[] rowt = {"", "", "", ""};
        model.addRow(rowt);
        JtDetalle.setModel(model);


    }//GEN-LAST:event_jLabel5MousePressed

    private void JlSerieMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JlSerieMousePressed
        if (evt.getButton() == 1) {
            clic++;
        }
        if (evt.getButton() == 3) {
            clic3++;
        }
        if (evt.getButton() == 2) {
            clic2++;
            String combinacion = clic + "" + clic2 + "" + clic3;
//            System.out.println(combinacion);
            if (combinacion.equals("211")) {
                if (serie.equals("A")) {
                    serie = "B";
                    JlSerie.setIcon(new ImageIcon(getClass().getResource("/Recursos/sticker_120054B.png")));// carga de logo
                    cargaclientesB();
                } else {
                    serie = "A";
                    JlSerie.setIcon(new ImageIcon(getClass().getResource("/Recursos/sticker_120054A.png")));// carga de logo
                    cargaclientes();
                }
                clic = 0;
                clic2 = 0;
                clic3 = 0;
            }
        }
    }//GEN-LAST:event_JlSerieMousePressed

    private void JlSerieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JlSerieKeyPressed

    }//GEN-LAST:event_JlSerieKeyPressed

    private boolean checkclaveprod() {
        daocfdi cf = new daocfdi();
        boolean flag = false;
        for (int i = 0; i < JtDetalle.getRowCount(); i++) {
            String var = JtDetalle.getValueAt(i, 1).toString();
            flag = cf.getclave(sqlcfdi, var);
        }
        return flag;
    }

    private boolean checkunidad() {
        daocfdi cf = new daocfdi();
        boolean flag = false;
        for (int i = 0; i < JtDetalle.getRowCount(); i++) {
            String var = JtDetalle.getValueAt(i, 3).toString();
            flag = cf.getunidad(sqlcfdi, var);
        }
        return flag;
    }

    private void vaciarcampos() {
        relacion = "";
        JtObs.setText("");
        for (int i = 0; i < JtDetalle.getRowCount(); i++) {
            model.removeRow(i);
        }
        generatabla();
    }

    public void cargaclientes() {
        daoClientes dc = new daoClientes();
        DefaultComboBoxModel ag = new DefaultComboBoxModel();
        arrcliente = dc.getClientes(ACobranza);
        for (Cliente arrcliente1 : arrcliente) {
            ag.addElement(arrcliente1.getNombre());
        }
        JcCliente.setModel(ag);
//        generatabla();
//        setAgentes();
    }

    public void cargaclientesB() {
        daoClientes dc = new daoClientes();
        DefaultComboBoxModel ag = new DefaultComboBoxModel();
        arrcliente = dc.getClientes(CobranzaB);
        for (Cliente arrcliente1 : arrcliente) {
            ag.addElement(arrcliente1.getNombre());
        }
        JcCliente.setModel(ag);
//        generatabla();
//        setAgentes();
    }

    public final void generatabla() {//Tabla actualizable con respecto al descuento e iva
        model.addColumn("Descripcion");//0  estilo combinacion corrida
        model.addColumn("Codigo sat");//1
        model.addColumn("Cantidad");//2
        model.addColumn("Unidad");//3
        JtDetalle.setModel(model);
    }

    private boolean verificaint(String cad) {
        boolean resp = false;
        String patt = "[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificafloat(String cad) {
        boolean resp = false;
        String patt = "[0-9]+||[0-9]+.[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    private boolean verificaregimen(Connection cfdi, String regimen, String uso) {
        daocfdi df = new daocfdi();
        boolean a = true;
        String resp = df.getRegimenxuso(cfdi, regimen, uso);
        if (resp.equals("")) {
            JOptionPane.showMessageDialog(null, "Error, El regimen del cliente no se puede usar con este uso cfdi");
            a = false;
        }
        return a;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcCliente;
    private javax.swing.JLabel JlSerie;
    private javax.swing.JTable JtDetalle;
    private javax.swing.JComboBox<String> JtFolio1;
    private javax.swing.JTextArea JtObs;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu pop;
    // End of variables declaration//GEN-END:variables
}
