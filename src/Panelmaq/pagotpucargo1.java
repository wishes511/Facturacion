/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panelmaq;

import Paneltpu.*;
import DAO.daocfdi;
import DAO.daofactura;
import Modelo.Ciudades;
import Modelo.Estados;
import Modelo.Formadepago;
import Modelo.Paises;
import Modelo.factura;
import Modelo.metodopago;
import Modelo.usocfdi;
import Server.Serverprod;
import Server.Serverylite;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GATEWAY1-
 */
public class pagotpucargo1 extends javax.swing.JPanel {

    public String empresa, empresacob;
    public Connection sqlcfdi, sqlempresa;
    public Connection cpt, ACobranza;
    Serverylite slite = new Serverylite();
    Serverprod prod = new Serverprod();
    public ArrayList<Formadepago> arrfpago = new ArrayList<>();
    public ArrayList<usocfdi> arruso = new ArrayList<>();
    public ArrayList<metodopago> arrmetodo = new ArrayList<>();
    ArrayList<Paises> arrpais = new ArrayList<>();
    ArrayList<Estados> arrestado = new ArrayList<>();
    ArrayList<Ciudades> arrciudad = new ArrayList<>();
    ArrayList<factura> arrfactura = new ArrayList<>();
    ArrayList<factura> arrfacturaxml = new ArrayList<>();
    daocfdi dcfdi = new daocfdi();
    int estado = 0;
    int ciudad = 0;
    int pais = 0;

    /**
     * Creates new form Cliente1
     */
    public pagotpucargo1() {
        initComponents();
        JtCliente.requestFocus();
//        iniciarconexiones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pop = new javax.swing.JPopupMenu();
        JtCancelar = new javax.swing.JMenuItem();
        JtCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        JtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Cancel_icon-icons.com_54824.png"))); // NOI18N
        JtCancelar.setText("Cancelar NCR");
        JtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtCancelarActionPerformed(evt);
            }
        });
        pop.add(JtCancelar);

        setBackground(new java.awt.Color(255, 255, 255));

        JtCliente.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        JtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtCliente.setBorder(null);
        JtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("# Cliente");
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel6MousePressed(evt);
            }
        });

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/file_pdf_download_icon-icons.com_68954.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(JtCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(jSeparator2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1199, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void JtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtClienteActionPerformed
        Buscanotas();
    }//GEN-LAST:event_JtClienteActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        setreport();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MousePressed

    }//GEN-LAST:event_jLabel6MousePressed

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        if (evt.getButton() == 3) {// activar con clic derecho
            pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }    
    }//GEN-LAST:event_JtDetalleMousePressed

    
    private void JtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtCancelarActionPerformed
//        int input = JOptionPane.showConfirmDialog(null, "Estas seguro que quieres cancelar?, "
//                + "\n ", "Selecciona una opcion", JOptionPane.YES_NO_CANCEL_OPTION);
//        if (input == 0) {
////            Obtiene los registros por si las facturas relacionadas tienen algun pago
//            int folio = arrfactura.get(JtDetalle.getSelectedRow()).getId();
//            daofactura df = new daofactura();
//            ArrayList<factura> arr = df.getdocvspago(cpt, folio + "");
//            String fol = "";
////            Si obtiene registros manda error
//            if (!arr.isEmpty()) {
//                for (int i = 0; i < arr.size(); i++) { // solo guarda las 
//                    fol = arr.get(i).getFolio() + " ";
//                }
//                JOptionPane.showMessageDialog(null, "No puedes cancelar una NCR si tienes un pago hecho con las facturas: \n" + fol);
//            } else {// Si no Si efectua la cancelacion de la NCR
//                int id = arrfactura.get(JtDetalle.getSelectedRow()).getId();
//                arr = df.getdocvspagoall(cpt, id);
//                if (df.Cancelancr(cpt, ACobranza, arr)) {
//                    JOptionPane.showMessageDialog(null, "Exito al cancelar NCR, recuerda que solo se cancela en el sistema y no en el SAT");
//                    Buscanotas();
//                } else {
//                    JOptionPane.showMessageDialog(null, "Error al cancelar NCR, contacta a sistemas");
//                }
//            }
//        }

    }//GEN-LAST:event_JtCancelarActionPerformed

    private void setreport() {
//        try {
//            String moneda = arrfactura.get(JtDetalle.getSelectedRow()).getMoneda();
//
//            daoempresa d = new daoempresa();
//            String n = "1";
//            String logo = "AF.png";
////            Obtiene los datos del emisor que en este caso en ath
//            Empresas e = d.getempresarfc(sqlempresa, n);
//            Map parametros = new HashMap();
//            convertnum conv = new convertnum();
//            int folio = arrfactura.get(JtDetalle.getSelectedRow()).getFolio();
//            parametros.put("folio", folio);
//            parametros.put("nombre", e.getNombre());
//            parametros.put("rfc", e.getRfc());
//            parametros.put("regimen", e.getRegimen());
//            parametros.put("lugar", e.getCp());
//            parametros.put("serie", "NCR");
//            JasperReport jasper = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportestpu/indexncrtpu.jasper"));
//            JasperPrint print = JasperFillManager.fillReport(jasper, parametros, cpt);
//            JasperViewer ver = new JasperViewer(print, false); //despliegue de reporte
//            ver.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
//            ver.setTitle("NCR " + folio);
//            ver.setVisible(true);
//        } catch (JRException ex) {
//            Logger.getLogger(fac1.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }

// Obtiene todas las notas de acuerdo a lo que se introduzca en el campo
    private void Buscanotas() {
//        daofactura df = new daofactura();
//        arrfactura = df.getdocstpu(cpt, JtCliente.getText(), "NCR");
        generatabla();
    }
    
    private void generatabla() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Pago");
        model.addColumn("Cliente");
        model.addColumn("Total pago");
        model.addColumn("fecha");
        model.addColumn("fecha pago");
        model.addColumn("observaciones");
        model.addColumn("Estado sat");
        daofactura d = new daofactura();
        arrfactura = d.getdocspagosremi(cpt, JtCliente.getText());
        int tamaño = arrfactura.size();
        model.setRowCount(tamaño);
        for (int i = 0; i < arrfactura.size(); i++) {
            String a = (arrfactura.get(i).getEstatus() == 1) ? "Activo" : "Inactivo";
            model.setValueAt(arrfactura.get(i).getFolio(), i, 0);
            model.setValueAt(arrfactura.get(i).getNombre(), i, 1);
            model.setValueAt(arrfactura.get(i).getTotal(), i, 2);
            model.setValueAt(arrfactura.get(i).getFecha(), i, 3);
            model.setValueAt(arrfactura.get(i).getFechapago(), i, 4);
            model.setValueAt(arrfactura.get(i).getObservaciones(), i, 5);
            model.setValueAt(a, i, 6);
        }
        JtDetalle.setModel(model);
    }

    private boolean verificaint(String cad) {
        boolean resp = false;
        String patt = "[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JtCancelar;
    public javax.swing.JTextField JtCliente;
    private javax.swing.JTable JtDetalle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu pop;
    // End of variables declaration//GEN-END:variables
}
