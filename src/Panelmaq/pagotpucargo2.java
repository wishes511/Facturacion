/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panelmaq;

import DAO.daocomisiones;
import DAO.daofactura;
import Modelo.Comision;
import Modelo.ConceptosES;
import Modelo.Detpagos;
import Modelo.Dfactura;
import Modelo.Formateodedatos;
import Modelo.Usuarios;
import Modelo.cargo;
import Modelo.factura;
import Server.Serverprod;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author GATEWAY1-
 */
public class pagotpucargo2 extends javax.swing.JPanel {

    public String nombre, empresa;
//    ACobranza es la conexion a la bd interna, no hay fiscal
    public Connection ACobranza,cpt;
    Serverprod prod = new Serverprod();
    public ArrayList<ConceptosES> arrcuentas = new ArrayList<>();
    ArrayList<cargo> arrcargo = new ArrayList<>();
    ArrayList<cargo> arrcargoseleccion = new ArrayList<>();//cargos seleccionados

    double descuentos;
    double impuestos;
    double subtotal;
    double total;
    public Usuarios u;

    /**
     * Creates new form Cliente1
     */
    public pagotpucargo2() {
        initComponents();
//        cargatabla();
        JlTcambio.setVisible(false);
        JtTCambio.setVisible(false);
        JtCliente.requestFocus();
        jPanel2.setVisible(false);
//        iniciarconexiones();  Solo si se usa solo la clase si no se pasan directamente desde facturacion
// carga en combos los catalogos del sat

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        pop = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        JlNombre = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        JtCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        JcCuenta = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtObs = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        JcUsd = new javax.swing.JCheckBox();
        JtTCambio = new javax.swing.JTextField();
        JlTcambio = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Jlcargofac = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Jlsub = new javax.swing.JLabel();
        JlDesc = new javax.swing.JLabel();
        JlIva = new javax.swing.JLabel();
        JlTotal = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        JtFecha = new com.toedter.calendar.JDateChooser();

        pop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                popMousePressed(evt);
            }
        });

        jMenuItem1.setText("Elimina linea");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        pop.add(jMenuItem1);

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        JlNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JlNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JtCliente.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        JtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtCliente.setBorder(null);
        JtCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtClienteMousePressed(evt);
            }
        });
        JtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("# Cliente");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        JcCuenta.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcCuentaActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel20.setText("Cuentas");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JcCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(JcCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Factura", "Pago", "Importe", "Iva"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Refresh_36729.png"))); // NOI18N
        jLabel3.setToolTipText("Actualiza datos");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel3MouseReleased(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar Pago");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        JtObs.setColumns(20);
        JtObs.setRows(5);
        jScrollPane2.setViewportView(JtObs);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        JcUsd.setText("USD - Dolares");
        JcUsd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsdActionPerformed(evt);
            }
        });

        JtTCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtTCambioActionPerformed(evt);
            }
        });

        JlTcambio.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JlTcambio.setText("Tipo de cambio");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(JcUsd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JtTCambio)
                    .addComponent(JlTcambio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JcUsd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(JlTcambio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JtTCambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/flat-style-circle-save_icon-icons.com_66942.png"))); // NOI18N
        jLabel4.setToolTipText("Actualiza datos");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });

        Jlcargofac.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(Jlcargofac);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Notas en Uso");

        jPanel3.setBackground(new java.awt.Color(10, 78, 160));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Subtotal");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Descuento");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Iva");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Total");

        Jlsub.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Jlsub.setForeground(new java.awt.Color(255, 255, 255));
        Jlsub.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlDesc.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlDesc.setForeground(new java.awt.Color(255, 255, 255));
        JlDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlIva.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlIva.setForeground(new java.awt.Color(255, 255, 255));
        JlIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlTotal.setForeground(new java.awt.Color(255, 255, 255));
        JlTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlsub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlIva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Jlsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JlTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Observaciones");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("Fecha Pago");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addContainerGap(1054, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(JlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(JtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11))
                            .addComponent(jLabel3)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Obtiene las cuentas de cobranza y las despliega en un combobox
     */
    public void cargacombos() {//catalogos de Sat
        DefaultComboBoxModel cuentas = new DefaultComboBoxModel();
        // Cuentas
        daofactura d = new daofactura();
        arrcuentas = d.getalcuentastpu(ACobranza, "50");
        for (ConceptosES arruso1 : arrcuentas) {
            cuentas.addElement(arruso1.getCuenta() + ", " + arruso1.getSubcuenta() + " - " + arruso1.getNombre());
        }
        JcCuenta.setModel(cuentas);

    }

    private void JtClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtClienteMousePressed
        JtCliente.setText("");
    }//GEN-LAST:event_JtClienteMousePressed

    private void JtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtClienteActionPerformed
        String r = JtCliente.getText();
//        Se verifica que no entre vacio y ocacione una excepcion de a gratis
        if (!r.isEmpty()) {
            daofactura df = new daofactura();
            arrcargo = df.getcargos_especialwithcliente(ACobranza, JtCliente.getText());
            if (arrcargo.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No hay cargos con ese cliente");
                JtCliente.setText("");
                JtCliente.requestFocus();
            } else {
                JlNombre.setText(arrcargo.get(0).getNombre());
                cargacombos();
//            cargacargos();
            }
        }


    }//GEN-LAST:event_JtClienteActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        setfactura();
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        actualizaimportes();
    }//GEN-LAST:event_jLabel3MousePressed

    private void JcCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcCuentaActionPerformed

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        if (!arrcargo.isEmpty()) {
            cargacargos();
        }
    }//GEN-LAST:event_jLabel4MousePressed

    private void popMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popMousePressed

    }//GEN-LAST:event_popMousePressed

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        if (evt.getButton() == 3) {// activar con clic derecho
            pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jLabel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseReleased

    private void JtTCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtTCambioActionPerformed
        if (!verificafloat(JtTCambio.getText().toUpperCase())) {
            JOptionPane.showMessageDialog(null, "Error, Introduce un valor valido en el tipo de cambio");
            JtTCambio.requestFocus();
        }
    }//GEN-LAST:event_JtTCambioActionPerformed

    private void JcUsdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsdActionPerformed
        setdolar();
    }//GEN-LAST:event_JcUsdActionPerformed

    private void setdolar() {
        if (JcUsd.isSelected()) {
            JlTcambio.setVisible(true);
            JtTCambio.setVisible(true);
            JtTCambio.requestFocus();
        } else {
            JlTcambio.setVisible(false);
            JtTCambio.setVisible(false);
        }
    }

    /**
     * Manda llamar una interfaz para seleccionar y capturar importes a pagar Al
     * final regresa una lista con los cargos seleccionados al igual que sus
     * pagos
     */
    private void cargacargos() {
        if (!arrcargo.isEmpty()) {
            Cargos_especialtpu p = new Cargos_especialtpu(null, true);
//        p.setAlwaysOnTop(true);
//            p.relacion = arrrelacion.get(JtRelacion.getSelectedIndex()).getRelacion();
            p.arrcargo = arrcargo;
            p.desplieguecargos();
            p.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            p.setVisible(true);
            arrcargoseleccion = p.arrcargoseleccion;
            llenalistafac();
            actualizaimportes();
//            if (!p.prod.getDesccombinacion().equals("")) {
//                System.out.println("");
//                System.out.println("aqui");
//            }
        }

    }

    private void llenalistafac() {
        DefaultListModel<String> model = new DefaultListModel<>();
        Formateodedatos fd = new Formateodedatos();
        for (cargo arrcargoseleccion1 : arrcargoseleccion) {
            model.addElement("REM " + arrcargoseleccion1.getReferencia() + " - " + fd.formatdecimal(arrcargoseleccion1.getDescuento()));
        }
        Jlcargofac.setModel(model);
    }

    private void setfactura() {
        Formateodedatos fd = new Formateodedatos();
        if (arrcargoseleccion.isEmpty()) {
            JtCliente.requestFocus();
        } else {
            double totalrev = 0;
            //Se obtiene el total de las facturas que anter se capturaron
            for (int i = 0; i < arrcargoseleccion.size(); i++) {
//                totalrev += Double.parseDouble(formateador.format(arrcargoseleccion.get(i).getDescuento()));
                totalrev += fd.formatdecimal(arrcargoseleccion.get(i).getDescuento());
            }
//            System.out.println(total + " " + totalrev);
//            System.out.println(total + " " + formateador.format(totalrev));
//            if (totalrev != total) {
//            System.out.println(formatdecimal(total) + " ** " + formatdecimal(totalrev));
            if (fd.formatdecimal(total) != fd.formatdecimal(totalrev)) {
                JOptionPane.showMessageDialog(null, "El total de las lineas debe de ser igual al seleccionado en las facturas");
                JtDetalle.requestFocus();
            } else {
                factura f = new factura();
//            int row = JtFolio1.getSelectedIndex();
                java.util.Date date = new Date();
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
                daofactura dfac = new daofactura();
                if (JcUsd.isSelected()) {
                    f.setMoneda("USD");
                    f.setTipocambio(Float.parseFloat(JtTCambio.getText()));
                } else {
                    f.setMoneda("MXN");
                    f.setTipocambio(1);
                }
                f.setClaveusuario(u.getUsuario());
                f.setSerie("RPAG");
                f.setFecha(sdf.format(date));
                f.setTurno(u.getTurno());
                f.setFechapago(sdf.format(JtFecha.getDate()));
                f.setSubtotal(0);
                f.setTotal(total);
                f.setIdcliente(arrcargoseleccion.get(0).getCliente());
                f.setNombre(arrcargoseleccion.get(0).getNombre());
                f.setAgente(arrcargoseleccion.get(0).getAgente());
                f.setPlazo(arrcargoseleccion.get(0).getPlazo());
                //concepto
                f.setCuentaabono(arrcuentas.get(JcCuenta.getSelectedIndex()).getId_concepto() + "");
                f.setDesccuenta(arrcuentas.get(JcCuenta.getSelectedIndex()).getNombre());
                String folios = "";
                String facturas = "";
                //Mandar un string con los folios fiscales
                ArrayList<Detpagos> arrdetpago = new ArrayList<>();
                ArrayList<Dfactura> arrdet = new ArrayList<>();
                //Detallado del pago
                for (int i = 0; i < arrcargoseleccion.size(); i++) {
                    Detpagos d = new Detpagos();
                    d.setIddocumento(f.getFolio());
                    d.setCantidad(1);
                    d.setDescripcion(JtObs.getText().toUpperCase());
                    d.setCodigo("84111506");
                    d.setUmedida("ACT");
                    d.setPrecio(0);
                    d.setMoneda("MXN");
                    d.setMonto(total);
                    d.setRfcctaemisora("AB");
                    d.setCtaemisora("12");
                    d.setRfcctareceptora("BC");
                    d.setCtareceptora("34");
                    d.setUuid(arrcargoseleccion.get(i).getReferencia());
                    d.setFolio(arrcargoseleccion.get(i).getId_cargo()+"");
                    d.setMetodopago("");
                    d.setParcialidad(arrcargoseleccion.get(i).getParcialidad());
                    d.setIdcargo(arrcargoseleccion.get(i).getId_cargo());

                    double sa;
                    double pa;
                    double sal;
                    sa = arrcargoseleccion.get(i).getSaldo();
                    d.setSaldo(sa - arrcargoseleccion.get(i).getDescuento());
                    pa = arrcargoseleccion.get(i).getDescuento();
                    sal = sa - pa;
                    d.setImportesaldoant(fd.formatdecimal(sa));
                    d.setImportepagado(fd.formatdecimal(pa));
                    d.setImpsaldoinsoluto(fd.formatdecimal(sal));
                    arrdetpago.add(d);
                }
//                Solo 1 renglon para el cuerpo de la factura
                Dfactura df = new Dfactura();
                df.setPrecio(0);
                df.setImpuesto("01");
                df.setImporta(0);
                df.setDescripcion("Pago");
                df.setUmedida("ACT");
                df.setCodigo("84111506");
                df.setCantidad(0);
                arrdet.add(df);
                f.setArr(arrdet);
                f.setArrpagos(arrdetpago);
                f.setRefncredito(facturas);
                f.setObservaciones(JtObs.getText().toUpperCase());
                f.setFoliofiscalorig(folios);
//                int verifica = dfac.getbuscafoliotpu(cpt, "PAG", f.getFolio() + "");
//                    int id = dfac.nuevancrtpu(cpt, f, ACobranza, rcpt);
                int id = dfac.insertpagotpu_especial(cpt, ACobranza, f);
                if (id != 0) {
//                    System.out.println("Exito");
//                        setreport(f.getFolio(), f.getRegimen(), f.getMoneda());
                    JOptionPane.showMessageDialog(null, "Proceso terminado ");
                    vaciarcampos();
                    JtCliente.requestFocus();
                }

            }

        }
    }

    public ArrayList<cargo> getcargosfacs() {
        ArrayList<cargo> arr = new ArrayList<>();
        Formateodedatos fd = new Formateodedatos();
        for (int y = 0; y < arrcargoseleccion.size(); y++) {
            cargo car = new cargo();
            double desc = fd.formatdecimal(arrcargoseleccion.get(y).getDescuento());
            car.setDescuento(desc);
            car.setFoliofiscal(arrcargoseleccion.get(y).getFoliofiscal());
            car.setCuenta(arrcargoseleccion.get(y).getCuenta());
            car.setSubcuenta(arrcargoseleccion.get(y).getSubcuenta());
            car.setCliente(arrcargoseleccion.get(y).getCliente());
            car.setReferencia(arrcargoseleccion.get(y).getReferencia());
            car.setFecha(arrcargoseleccion.get(y).getFecha());
            arr.add(car);
        }
        return arr;
    }

    /**
     * La funcion realiza la busqueda de informacion del pago recien realizado
     * La funcion no se ejecuta en ninguna otra ocasion amenos que haya
     * terminado de forma exitosa.
     *
     * @param f
     */
    private void setcomisiones(factura f) {
        daocomisiones dc = new daocomisiones();
        Formateodedatos form = new Formateodedatos();
//        Realiza la busqueda de acuerdo a la fecha formateada y referencias
        ArrayList<Comision> arrcomision = dc.getcomisiones(ACobranza, fechasinT(f.getFecha()), referencias());
        for (int i = 0; i < arrcomision.size(); i++) {
//            Se da valor a un nuevo objeto Comision para despues hacer el remplazo
//          del indice con el nuevo valor del objeto
            Comision comi = new Comision();
            double tipocambio = f.getTipocambio();
            double comision = arrcomision.get(i).getComision();
            double resultado = (f.getMoneda().equals("USD")) ? tipocambio * comision : comision;
            comi.setComision(form.formatdecimal(resultado));
            comi.setId_cargo(arrcomision.get(i).getId_cargo());
            comi.setId_agente(arrcomision.get(i).getId_agente());
            comi.setReferencia(arrcomision.get(i).getReferencia());
            comi.setSerie("B");
            comi.setDias(arrcomision.get(i).getDias());
            comi.setFecha(f.getFecha());
            comi.setUsuario(f.getClaveusuario());
            comi.setImporte(arrcomision.get(i).getImporte());
            comi.setTipocambio(tipocambio);
            arrcomision.set(i, comi);
        }
//        Se realiza la insercion de cada de los folios validos en la bd
        //dc.newcomision(cpt, arrcomision);
    }

    /**
     * Formatea y ordena cada folio y /o referencia a filtrar del pago que
     * recientemente se realizo
     *
     * @return
     */
    private String referencias() {
        String ref = "";
        for (int i = 0; i < arrcargoseleccion.size(); i++) {
            String arrref = arrcargoseleccion.get(i).getReferencia();
            if (arrcargoseleccion.size() == 1) {
                ref = "referencia='" + arrref + "'";
            } else {
                if (i == 0) {
                    ref = "referencia='" + arrref + "' or ";
                } else {
                    ref += "referencia='" + arrref + "'";
                }
            }
        }
        return ref;
    }

    /**
     * La funcion realiza el intercambio de el caracter 'T' por un vacio, ya que
     * en la funcion es necesario el uso de la fecha pero con el caracter la
     * consulta es invalida
     *
     * @param fecha
     * @return
     */
    private String fechasinT(String fecha) {
        String resp = "";
        for (int i = 0; i < fecha.length(); i++) {
            if (fecha.charAt(i) == 'T') {
                resp += ' ';
            } else {
                resp += fecha.charAt(i) + "";
            }
        }
        return resp;
    }

    private void vaciarcampos() {
        arrcargoseleccion.clear();
        JtTCambio.setText("");
        JlDesc.setText("0");
        Jlsub.setText("0");
        JlIva.setText("0");
        JlTotal.setText("0");
        arrcargo.clear();
        JtCliente.setText("");
        JlNombre.setText("");
        JtObs.setText(nombre);
        llenalistafac();
        actualizaimportes();
        cargacombos();
    }

    private void actualizaimportes() {
        Formateodedatos fd = new Formateodedatos();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Factura");
        model.addColumn("Pago");
        model.addColumn("Importe");
        model.addColumn("Iva");
        int rows = arrcargoseleccion.size();
        model.setNumRows(rows);
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        if (!arrcargoseleccion.isEmpty()) {
            for (int i = 0; i < rows; i++) {
                String folio = arrcargoseleccion.get(i).getReferencia();
                double totalcar = arrcargoseleccion.get(i).getDescuento();
//                double importe = totalcar / 1.16;
//                double iva = (totalcar / 1.16) * 0.16;
                double importe = totalcar;
                model.setValueAt(folio, i, 0);
                model.setValueAt(totalcar, i, 1);
                model.setValueAt(importe, i, 2);
                model.setValueAt(0, i, 3);
//                total += totalcar;
                subtotal += totalcar;
            }
            JtDetalle.setModel(model);
            total = subtotal + impuestos;
            //Solo para despliqgue de informacion
            JlIva.setText((impuestos) + "");
            Jlsub.setText(fd.formatdecimal(subtotal) + "");
            JlDesc.setText(descuentos + "");
            JlTotal.setText(fd.formatdecimal(total) + "");
        } else {
            JtCliente.requestFocus();// regresa al campo inicial del cliente
        }
        JtDetalle.setModel(model);
        if (!arrcargo.isEmpty()) {

        }

    }

    private boolean verificafloat(String cad) {
        boolean resp = false;
        String patt = "[0-9]+||[0-9]+.[0-9]+";
        Pattern pat = Pattern.compile(patt);
        Matcher match = pat.matcher(cad);
        if (match.matches()) {
            resp = true;
        }
        return resp;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcCuenta;
    private javax.swing.JCheckBox JcUsd;
    private javax.swing.JLabel JlDesc;
    private javax.swing.JLabel JlIva;
    private javax.swing.JLabel JlNombre;
    private javax.swing.JLabel JlTcambio;
    private javax.swing.JLabel JlTotal;
    private javax.swing.JList<String> Jlcargofac;
    private javax.swing.JLabel Jlsub;
    public javax.swing.JTextField JtCliente;
    private javax.swing.JTable JtDetalle;
    private com.toedter.calendar.JDateChooser JtFecha;
    private javax.swing.JTextArea JtObs;
    private javax.swing.JTextField JtTCambio;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu pop;
    // End of variables declaration//GEN-END:variables
}
